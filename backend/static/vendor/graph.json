{
  "mocKgNodeDtoList": [
    {
      "id": 4195940,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": -1,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据分析",
      "description": "大数据分析是从海量数据中提取有价值信息和知识的过程。它包括数据集成与转换、数据挖掘与分析、数据质量与清洗、分布式计算与存储、数据存储与处理等多个环节。通过模式匹配、分类、聚类、关联规则挖掘等技术，结合统计学和机器学习方法，提升数据利用价值。大数据分析在医疗健康、金融服务、电子商务等领域应用广泛，但也面临数据隐私、安全、质量等挑战。解决这些问题需要先进技术和健全的法律法规。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195937,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据基础概念",
          "description": "大数据基础概念包括对大数据的定义、特征、生命周期和处理流程的理解。大数据通常指的是体量巨大、类型多样、处理速度快的数据集合。其特征包括数据量大（Volume）、数据类型多样（Variety）、数据处理速度快（Velocity）和数据价值密度低（Value）。大数据的生命周期涵盖数据的生成、采集、存储、处理、分析和应用等多个阶段。大数据处理流程则包括数据获取、数据预处理、数据存储、数据处理和数据分析等步骤。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 436172309,
            "gmtCreate": 1760926533000,
            "gmtModified": 1760926533000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 149,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195937,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681795,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 78,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 1247,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 246,
            "avgCompletionRate": 18,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195937,
            "nodeName": null
          }
        },
        {
          "id": 4195946,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "数据获取",
          "description": "大数据分析中的数据获取是指从多种来源收集原始数据的过程，它是整个分析流程的基础环节。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 430658487,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 27,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195946,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668734,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 70,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 523,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 138,
            "avgCompletionRate": 15,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195946,
            "nodeName": null
          }
        },
        {
          "id": 4195938,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "数据质量与预处理",
          "description": "数据质量问题可以分为单数据源和多数据源两类。单数据源的问题包括模型层面和实例层面，模型层面的问题依赖于设计模型对数据完整性的约束，而实例层面的问题如数据输入错误、属性值错误等需要通过数据清洗解决。多数据源的问题主要包括命名冲突、结构冲突和数据内容冲突，这些问题需要通过数据集成和数据清洗来解决。数据预处理是大数据分析中的重要步骤，旨在提高数据质量和分析效率。数据预处理包括数据清洗、数据转换和数据归约等过程。数据清洗是指去除数据中的噪声和错误，填补缺失值，确保数据的准确性和一致性。数据转换是将数据转换为适合分析的格式，包括数据标准化、归一化等。数据归约则是通过数据压缩和特征选择等方法减少数据的维度和规模，从而提高数据处理的效率。",
          "position": 4,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429035304,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 25,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195938,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642430,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 580,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 144,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195938,
            "nodeName": null
          }
        },
        {
          "id": 4195935,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "数据存储系统",
          "description": "数据存储技术是大数据分析的基础，涵盖数据收集、建模、分布式文件系统、分布式数据库和数据仓库等方面。分布式文件系统和数据库通过分布式架构实现高可用性和高容错性，确保数据的可靠存储和访问。数据仓库用于存储和管理大量历史数据，支持复杂查询和分析。统一数据访问接口提供标准化方式，方便用户访问和操作不同系统中的数据。这些技术共同支持大规模数据处理和分析，确保数据的高效存储和管理。",
          "position": 5,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 6,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149298,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 40,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195935,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876934,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 959,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 107,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195935,
            "nodeName": null
          }
        },
        {
          "id": 4195936,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "数据处理系统",
          "description": "数据处理系统是大数据分析的核心组件，负责对海量数据进行高效的计算和处理。数据处理系统包括计算引擎和平台、计算模型和计算算法等部分。常见的计算模型有MapReduce批处理模型、流计算模型、MPP模型、内存计算模型和并行图计算模型。计算算法则包括机器学习和数据挖掘算法，如分类、聚类、回归和关联分析等。数据处理系统的目标是通过高效的计算和算法，从海量数据中提取有价值的信息和知识。",
          "position": 6,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 8,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429435542,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 50,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195936,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902881,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 1656,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 143,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195936,
            "nodeName": null
          }
        },
        {
          "id": 4195933,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据平台与工具",
          "description": "大数据平台与工具是大数据分析的核心组成部分，涵盖了数据存储、处理和分析的各个环节。常见的大数据平台包括Hadoop、Spark、Flink等，它们提供了分布式存储和计算能力。工具方面，Greenplum作为MPP数据库系统，通过并行处理和分布式存储实现高效查询；Spark MLlib则提供了丰富的机器学习算法库，简化了大规模数据分析任务。内存数据库HANA利用高性能计算技术，实现了实时数据处理和分析。",
          "position": 7,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428407490,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 30,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195933,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968230,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 588,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 93,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195933,
            "nodeName": null
          }
        },
        {
          "id": 4195934,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195940,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据应用与挑战",
          "description": "大数据应用与挑战：大数据在各个领域的应用广泛，包括医疗健康、金融服务、电子商务、交通运输等。通过大数据分析，可以实现精准医疗、风险管理、个性化推荐和智能交通等。然而，大数据应用也面临诸多挑战，如数据隐私和安全问题、数据质量和真实性问题、数据处理和存储的技术难题，以及数据分析人才的缺乏。解决这些挑战需要综合运用先进的技术和方法，并建立健全的法律法规和行业标准。",
          "position": 8,
          "labelNameList": null,
          "children": null,
          "level": 1,
          "childCount": 5,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 430187043,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195934,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824852,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 64,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 88,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195934,
            "nodeName": null
          }
        }
      ],
      "level": 0,
      "childCount": 7,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 436691101,
        "gmtCreate": 1760926533000,
        "gmtModified": 1760926533000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 277,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195940,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707872,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 57,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 4365,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 273,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195940,
        "nodeName": null
      }
    },
    {
      "id": 4195937,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据基础概念",
      "description": "大数据基础概念包括对大数据的定义、特征、生命周期和处理流程的理解。大数据通常指的是体量巨大、类型多样、处理速度快的数据集合。其特征包括数据量大（Volume）、数据类型多样（Variety）、数据处理速度快（Velocity）和数据价值密度低（Value）。大数据的生命周期涵盖数据的生成、采集、存储、处理、分析和应用等多个阶段。大数据处理流程则包括数据获取、数据预处理、数据存储、数据处理和数据分析等步骤。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195926,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195937,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据生命周期与应用",
          "description": "大数据生命周期与应用包括数据的收集、存储、分析和治理四个阶段。收集阶段通过自动化工具捕捉不同类型的数据；存储阶段使用ETL工具将数据统一放置在存储平台中；分析阶段利用各种分析引擎进行实时数据处理；治理阶段确保数据的合规性、隐私性和安全性，制定治理策略以避免错误信息对业务的损害。每个阶段都至关重要，确保数据从生成到应用的全过程高效且安全。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428864543,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195926,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876931,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 78,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 378,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 176,
            "avgCompletionRate": 17,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195926,
            "nodeName": null
          }
        },
        {
          "id": 4195927,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195937,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据基本概念",
          "description": "大数据基本概念包括对大数据的定义、特征、生命周期和处理流程的理解。大数据通常指的是体量巨大、类型多样、处理速度快的数据集合。其特征包括数据量大（Volume）、数据类型多样（Variety）、数据处理速度快（Velocity）和数据价值密度低（Value）。大数据的生命周期涵盖数据的生成、采集、存储、处理、分析和应用等多个阶段。大数据处理流程则包括数据获取、数据预处理、数据存储、数据处理和数据分析等步骤。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 7,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 436979614,
            "gmtCreate": 1760926533000,
            "gmtModified": 1760926533000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 69,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195927,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759932,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 76,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 596,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 244,
            "avgCompletionRate": 23,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195927,
            "nodeName": null
          }
        },
        {
          "id": 4195928,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195937,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据特征与类型",
          "description": "大数据具有五个主要特征：规模、速度、种类、真伪和价值。规模指数据量庞大，呈指数级增长。速度指数据生成和处理的快速性，实时处理变得重要。种类指数据多样性，包括结构化、半结构化和非结构化数据。真伪指数据的准确性和可信度，需要过滤无用信息。价值指从数据中提取的潜在价值，数据必须可靠、有用，才能支持分析和决策。理解和处理这些不同类型的数据是大数据分析中的重要环节，因为它们需要不同的技术和方法来进行存储、处理和分析。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431307455,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 75,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195928,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668733,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 83,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 438,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 191,
            "avgCompletionRate": 16,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195928,
            "nodeName": null
          }
        },
        {
          "id": 4195929,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195937,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据技术与模型",
          "description": "大数据技术与模型涵盖了数据的存储、处理和应用三个层次。数据存储系统包括分布式数据库、数据仓库和分布式文件系统，负责数据的收集、清洗、存储和建模。数据处理系统利用算法、计算模型和计算平台进行数据分析和处理。数据应用系统则将分析结果应用于实际业务场景，提供数据可视化和服务。这些技术和模型共同构成了大数据分析的基础，支持从数据获取到价值实现的全过程。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429549926,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195929,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876932,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 68,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 197,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 107,
            "avgCompletionRate": 17,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195929,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 436172309,
        "gmtCreate": 1760926533000,
        "gmtModified": 1760926533000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 149,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195937,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681795,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 78,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 1247,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 246,
        "avgCompletionRate": 18,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195937,
        "nodeName": null
      }
    },
    {
      "id": 4195946,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "数据获取",
      "description": "大数据分析中的数据获取是指从多种来源收集原始数据的过程，它是整个分析流程的基础环节。",
      "position": 3,
      "labelNameList": null,
      "children": [
        {
          "id": 4195945,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195946,
          "knowledgeGraphId": 29889,
          "nodeName": "数据类型",
          "description": "数据类型与采集包括结构化数据、非结构化数据和半结构化数据。结构化数据以预定义格式存储，易于管理和保护。非结构化数据没有统一格式，存储在图像、音频、视频等形式中，占企业数据的80%，处理难度大。半结构化数据如XML文件，具有一定模式，可分析。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429492749,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 14,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195945,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955187,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 81,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 157,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 117,
            "avgCompletionRate": 26,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195945,
            "nodeName": null
          }
        },
        {
          "id": 4195921,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195946,
          "knowledgeGraphId": 29889,
          "nodeName": "数据采集",
          "description": "深网数据采集涉及识别查询接口和自动填写表格获取数据，需特殊设计爬虫，包括界面识别、表单解析、数据资源发现等。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 6,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 430363681,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 13,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195921,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850911,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 66,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 366,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 98,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195921,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 430658487,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 27,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195946,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668734,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 70,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 523,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 138,
        "avgCompletionRate": 15,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195946,
        "nodeName": null
      }
    },
    {
      "id": 4195938,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "数据质量与预处理",
      "description": "数据质量问题可以分为单数据源和多数据源两类。单数据源的问题包括模型层面和实例层面，模型层面的问题依赖于设计模型对数据完整性的约束，而实例层面的问题如数据输入错误、属性值错误等需要通过数据清洗解决。多数据源的问题主要包括命名冲突、结构冲突和数据内容冲突，这些问题需要通过数据集成和数据清洗来解决。数据预处理是大数据分析中的重要步骤，旨在提高数据质量和分析效率。数据预处理包括数据清洗、数据转换和数据归约等过程。数据清洗是指去除数据中的噪声和错误，填补缺失值，确保数据的准确性和一致性。数据转换是将数据转换为适合分析的格式，包括数据标准化、归一化等。数据归约则是通过数据压缩和特征选择等方法减少数据的维度和规模，从而提高数据处理的效率。",
      "position": 4,
      "labelNameList": null,
      "children": [
        {
          "id": 4195930,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195938,
          "knowledgeGraphId": 29889,
          "nodeName": "数据质量问题",
          "description": "数据质量问题可以分为单数据源和多数据源两类。单数据源的问题包括模型层面和实例层面，模型层面的问题依赖于设计模型对数据完整性的约束，而实例层面的问题如数据输入错误、属性值错误等需要通过数据清洗解决。多数据源的问题主要包括命名冲突、结构冲突和数据内容冲突，这些问题需要通过数据集成和数据清洗来解决。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 5,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429721988,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195930,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876933,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 226,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 85,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195930,
            "nodeName": null
          }
        },
        {
          "id": 4195901,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195938,
          "knowledgeGraphId": 29889,
          "nodeName": "数据预处理",
          "description": "数据预处理是大数据分析中的关键步骤，旨在提升数据质量和分析效率。它包括数据清洗、数据转换和数据归约等过程。数据清洗通过去除噪声和错误数据、填补缺失值来确保数据的准确性和一致性。数据转换则将数据标准化、归一化，使其适合分析。数据归约通过数据压缩和特征选择减少数据的维度和规模，从而提高数据处理的效率。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428864539,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 15,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195901,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163942111,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 354,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 137,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195901,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429035304,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 25,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195938,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642430,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 580,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 144,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195938,
        "nodeName": null
      }
    },
    {
      "id": 4195935,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "数据存储系统",
      "description": "数据存储技术是大数据分析的基础，涵盖数据收集、建模、分布式文件系统、分布式数据库和数据仓库等方面。分布式文件系统和数据库通过分布式架构实现高可用性和高容错性，确保数据的可靠存储和访问。数据仓库用于存储和管理大量历史数据，支持复杂查询和分析。统一数据访问接口提供标准化方式，方便用户访问和操作不同系统中的数据。这些技术共同支持大规模数据处理和分析，确保数据的高效存储和管理。",
      "position": 5,
      "labelNameList": null,
      "children": [
        {
          "id": 4195879,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195935,
          "knowledgeGraphId": 29889,
          "nodeName": "数据资产",
          "description": "数据资产是指在大数据分析过程中需要处理和管理的各种数据类型，包括交易数据、文档、客户邮件、用户协议、产业报告以及机器设备和科学相关的IoT设备数据。这些数据需要通过ETL（提取、转换、加载）过程导入到Hadoop系统中，并进行批量加载、社交媒体数据变化的关注和复制以及实时流数据的收集。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850909,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 46,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195879,
            "nodeName": null
          }
        },
        {
          "id": 4195893,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195935,
          "knowledgeGraphId": 29889,
          "nodeName": "数据建模与访问",
          "description": "数据建模与访问是大数据分析中的关键环节。数据建模包括概念模型、逻辑模型和物理模型，分别描述数据的语义、逻辑结构和物理存储实现。数据访问层通过数据存取对象（DAO）和基于对象关系映射（ORM）等方式实现，提供对数据库的基本操作支持，包括创建、检索、更新和删除（CRUD）操作，并支持事务管理、并发处理和异构数据库转换等复杂功能。ACID模型适用于关系型数据库，强调事务的原子性、一致性、隔离性和持久性；BASE模型适用于NoSQL数据库，强调基本可用性、软状态和最终一致性。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 5,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206476,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 15,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195893,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163655501,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 46,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 367,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 98,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195893,
            "nodeName": null
          }
        },
        {
          "id": 4195894,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195935,
          "knowledgeGraphId": 29889,
          "nodeName": "数据存储技术",
          "description": "数据存储技术是大数据分析的基础，涵盖数据收集、建模、分布式文件系统、分布式数据库和数据仓库等方面。分布式文件系统和数据库通过分布式架构实现高可用性和高容错性，确保数据的可靠存储和访问。数据仓库用于存储和管理大量历史数据，支持复杂查询和分析。统一数据访问接口提供标准化方式，方便用户访问和操作不同系统中的数据。这些技术共同支持大规模数据处理和分析，确保数据的高效存储和管理。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429435539,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195894,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668731,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 36,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 91,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 47,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195894,
            "nodeName": null
          }
        },
        {
          "id": 4195925,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195935,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式文件系统",
          "description": "分布式文件系统是大数据分析中的核心组件，通过将数据分散存储在多个节点上，实现高冗余性和可靠性。常见的分布式文件系统包括HDFS和GFS。它们通过数据分片和复制机制，确保在部分节点失效或网络分区时系统仍能正常运行，保证数据的可用性和一致性。分布式文件系统支持一次写入，多次读取，提供高可用性和高可靠性，是大数据计算的基础设施之一。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428749881,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195925,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707871,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 52,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 317,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 80,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195925,
            "nodeName": null
          }
        },
        {
          "id": 4195922,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195935,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式数据库",
          "description": "分布式数据库是构建于文件系统之上的数据库，能够实现数据的存储管理，并对上层计算引擎和应用软件提供数据快速查询功能和数据分析服务。它包括关系型数据库如Oracle、MS SQL Server和MySQL，以及非关系型数据库如MongoDB、HBase等。分布式数据库在处理超大规模数据量和非结构化数据时具有重要作用，通过横向扩展和支持非结构化查询来解决关系型数据库在扩展性和查询效率上的挑战。",
          "position": 4,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428293248,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 15,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195922,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863970,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 55,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 253,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 58,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195922,
            "nodeName": null
          }
        },
        {
          "id": 4195766,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195935,
          "knowledgeGraphId": 29889,
          "nodeName": "数据存储系统",
          "description": "大数据计算系统可以分为三个部分：数据存储系统、数据处理系统和数据应用系统。数据存储系统包括数据收集和建模、分布式文件系统、分布式数据库和数据仓库，以及统一数据访问接口。在数据存储系统中，不同的部分完成不同的任务，确保数据的高效存储和管理。分布式文件系统和分布式数据库是数据存储系统的重要组成部分，它们通过分布式架构实现数据的高可用性和高容错性。数据仓库则用于存储和管理大量的历史数据，支持复杂的查询和分析。统一数据访问接口提供了一种标准化的方式，方便用户访问和操作存储在不同系统中的数据。",
          "position": 5,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429779009,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195766,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981285,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 73,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 45,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195766,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 6,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149298,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 40,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195935,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876934,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 959,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 107,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195935,
        "nodeName": null
      }
    },
    {
      "id": 4195936,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "数据处理系统",
      "description": "数据处理系统是大数据分析的核心组件，负责对海量数据进行高效的计算和处理。数据处理系统包括计算引擎和平台、计算模型和计算算法等部分。常见的计算模型有MapReduce批处理模型、流计算模型、MPP模型、内存计算模型和并行图计算模型。计算算法则包括机器学习和数据挖掘算法，如分类、聚类、回归和关联分析等。数据处理系统的目标是通过高效的计算和算法，从海量数据中提取有价值的信息和知识。",
      "position": 6,
      "labelNameList": null,
      "children": [
        {
          "id": 4195800,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "批处理",
          "description": "批处理是一种一次性处理大量数据的计算模型，通常用于处理在一段时间内收集的大量数据。批处理作业可以在离线状态下进行，适用于工资处理、产品发票、供应链管理等场景。其优点是能够降低运营成本，不需要专门的数据输入职员，并且可以在经理控制的时间内进行处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429836594,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195800,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876926,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 44,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 246,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 52,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195800,
            "nodeName": null
          }
        },
        {
          "id": 4195923,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "图计算与消息传递",
          "description": "图计算与消息传递是并行图计算模型中的核心概念。图分区是基本执行单元，每个分区包含大量节点，并由一个线程执行。消息传递系统用于在分区之间传递消息，节点通过消息传递来激活其他节点并进行计算。Pregel架构采用消息传递系统来创建大规模图形处理框架，减少网络通信开销，提高计算性能。消息传递系统包括两个消息队列，分别用于当前超步和下一个超步的消息传递。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428179365,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195923,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968229,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 39,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 66,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 38,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195923,
            "nodeName": null
          }
        },
        {
          "id": 4195924,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "内存计算与数据处理",
          "description": "内存计算与数据处理是一种在计算机内存中进行计算的技术，通过消除访问硬盘或SSD的延迟，大幅提升计算性能。内存计算将任务分解为更小的子任务，并分布到多台计算机的内存中并行处理，从而实现高效的数据处理。典型代表如Spark，通过内存缓存和优化查询执行，实现对大规模数据的快速处理。内存计算适用于需要高性能和低延迟的数据处理场景，如实时数据分析和大规模数据处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428407487,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195924,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733956,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 76,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 45,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195924,
            "nodeName": null
          }
        },
        {
          "id": 4195801,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "流处理",
          "description": "流处理是一种能够几乎瞬间分析从一个设备流到另一个设备数据的计算模型。它在数据流过系统时进行计算，对输出没有强制的时间限制。流处理适用于需要立即检测事件并快速响应的场景，如欺诈检测和网络安全。其优点是系统不需要存储大量数据，能够实时跟踪事件的发生。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429721985,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195801,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981286,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 45,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 130,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 42,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195801,
            "nodeName": null
          }
        },
        {
          "id": 4195871,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "数据处理系统概念",
          "description": "数据处理系统是大数据分析的核心组件，负责对海量数据进行高效的计算和处理。数据处理系统包括计算引擎和平台、计算模型和计算算法等部分。常见的计算模型有MapReduce批处理模型、流计算模型、MPP模型、内存计算模型和并行图计算模型。计算算法则包括机器学习和数据挖掘算法，如分类、聚类、回归和关联分析等。数据处理系统的目标是通过高效的计算和算法，从海量数据中提取有价值的信息和知识。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149292,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 15,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195871,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759930,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 359,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 129,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195871,
            "nodeName": null
          }
        },
        {
          "id": 4195898,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "大规模并行处理",
          "description": "大规模并行处理（Massively Parallel Processing, MPP）是一种计算模型，通过多个处理器并行处理同一个程序的不同部分。每个处理器运行自身的操作系统和内存，通过通讯接口进行协调工作。MPP系统通常采用无共享架构，即每个节点拥有独立的内存和磁盘，数据在节点之间水平分区。其特点是不共享资源，每个节点只访问本地内存和存储，节点之间的信息交互通过节点互联网络实现。MPP架构能够提供高性能并行处理，适用于大规模数据场景，如数据仓库、科学计算等。",
          "position": 4,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206477,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195898,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759931,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 51,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 146,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 50,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195898,
            "nodeName": null
          }
        },
        {
          "id": 4195806,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "内存数据库",
          "description": "内存数据库是一种将数据直接存储在内存中的数据库系统，旨在优化数据的高效访问。与传统数据库不同，内存数据库不依赖于硬盘存储，而是利用内存的高速读写能力来提高查询和计算性能。哈娜数据库结合了硬件和软件的优势，通过多核架构、跨刀片并行扩展、64位地址空间等技术，使内存数据库成为可能。哈娜数据库还采用了基于列的存储、压缩分区、动态扩展等先进的软件技术，以提高性能和减少内存消耗。",
          "position": 5,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428578389,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195806,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981287,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 70,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 66,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195806,
            "nodeName": null
          }
        },
        {
          "id": 4195939,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195936,
          "knowledgeGraphId": 29889,
          "nodeName": "数据挖掘与分析",
          "description": "数据挖掘与分析是大数据分析中的核心技术，旨在从大量数据中提取有价值的信息和知识。数据挖掘包括数据预处理、模式识别、分类、聚类、关联规则挖掘等步骤。通过数据预处理，清洗和转换数据，提高数据质量。模式识别和分类技术用于发现数据中的规律和类别，常用算法有决策树、支持向量机等。聚类分析将相似的数据对象分组，揭示数据结构。关联规则挖掘发现数据项之间的关系，优化决策。数据挖掘与分析结合统计学和机器学习方法，提升数据利用价值。",
          "position": 6,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429435544,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195939,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824853,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 837,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 65,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195939,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 8,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429435542,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 50,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195936,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902881,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 1656,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 143,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195936,
        "nodeName": null
      }
    },
    {
      "id": 4195933,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据平台与工具",
      "description": "大数据平台与工具是大数据分析的核心组成部分，涵盖了数据存储、处理和分析的各个环节。常见的大数据平台包括Hadoop、Spark、Flink等，它们提供了分布式存储和计算能力。工具方面，Greenplum作为MPP数据库系统，通过并行处理和分布式存储实现高效查询；Spark MLlib则提供了丰富的机器学习算法库，简化了大规模数据分析任务。内存数据库HANA利用高性能计算技术，实现了实时数据处理和分析。",
      "position": 7,
      "labelNameList": null,
      "children": [
        {
          "id": 4195769,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195933,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据三层架构",
          "description": "大数据三层架构包括数据存储系统、数据处理系统和数据应用系统。数据存储系统负责数据的收集、建模和存储，包括分布式文件系统和分布式数据库。数据处理系统包括计算引擎、计算平台和计算模型，使用MapReduce、Hadoop、Spark和Storm等技术进行数据处理。数据应用系统基于存储和处理的结果，构建大数据应用、产品和服务，并进行数据可视化。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428578386,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195769,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733950,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 177,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 78,
            "avgCompletionRate": 19,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195769,
            "nodeName": null
          }
        },
        {
          "id": 4195830,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195933,
          "knowledgeGraphId": 29889,
          "nodeName": "SparkMLlib",
          "description": "Spark MLlib是Apache Spark的可扩展机器学习库，旨在简化机器学习任务的实现，并与其他工具进行无缝集成。它支持多种数据类型和语言（Java、Scala、Python和R），并提供了高效的算法和性能优化。MLlib包括特征提取、特征转换、特征选择、分类、回归、聚类、推荐系统、降维和频繁模式挖掘等多种机器学习算法。通过Spark的可伸缩性和速度，数据科学家可以专注于数据问题和模型，而无需处理分布式数据的复杂性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428236308,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195830,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850907,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 35,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195830,
            "nodeName": null
          }
        },
        {
          "id": 4195947,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195933,
          "knowledgeGraphId": 29889,
          "nodeName": "TensorFlow",
          "description": "TensorFlow 是由 Google Brain 团队开发的端到端开源机器学习平台，其核心是一个采用数据流图（Data Flow Graphs）形式表述数值计算的高性能框架。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429321001,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195947,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863972,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 52,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 79,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195947,
            "nodeName": null
          }
        },
        {
          "id": 4195931,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195933,
          "knowledgeGraphId": 29889,
          "nodeName": "推荐系统与社交网络",
          "description": "推荐系统与社交网络：推荐系统通过分析用户的历史行为和物品特征，生成个性化的推荐列表。基于内容的过滤方法通过提取物品特征和用户偏好，进行推荐。社交网络分析利用网络和图论，研究社会结构和关系，常用度量指标包括平均聚类系数、特征向量中心性等。力导向图通过电磁学原理，优化节点和边的布局，帮助理解复杂网络结构。推荐系统和社交网络分析结合，可以更精准地识别用户兴趣和社交关系，提升推荐效果。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149297,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 15,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195931,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163603089,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 237,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 43,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195931,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428407490,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 30,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195933,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968230,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 588,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 93,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195933,
        "nodeName": null
      }
    },
    {
      "id": 4195934,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195940,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据应用与挑战",
      "description": "大数据应用与挑战：大数据在各个领域的应用广泛，包括医疗健康、金融服务、电子商务、交通运输等。通过大数据分析，可以实现精准医疗、风险管理、个性化推荐和智能交通等。然而，大数据应用也面临诸多挑战，如数据隐私和安全问题、数据质量和真实性问题、数据处理和存储的技术难题，以及数据分析人才的缺乏。解决这些挑战需要综合运用先进的技术和方法，并建立健全的法律法规和行业标准。",
      "position": 8,
      "labelNameList": null,
      "children": [
        {
          "id": 4195914,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195934,
          "knowledgeGraphId": 29889,
          "nodeName": "数据与因果关系",
          "description": "在大数据分析中，数据与因果关系的处理方式发生了显著变化。传统的数据分析方法通常侧重于寻找变量之间的因果关系，以便理解一个变量如何影响另一个变量。然而，在大数据时代，分析的重点转向了数据之间的相关性。计算机能够高效地处理和分析大量数据，发现其中的模式和关联。例如，通过分析零售数据，可以发现某些商品在特定条件下的销售趋势，从而优化库存和销售策略。尽管相关性不等同于因果关系，但它在实际应用中具有重要的指导意义。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163798800,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 72,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195914,
            "nodeName": null
          }
        },
        {
          "id": 4195915,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195934,
          "knowledgeGraphId": 29889,
          "nodeName": "科学研究范式",
          "description": "科学研究的第四范式是数据密集型范式，它与第三范式的计算模拟不同，第四范式是基于大量已知数据进行分析和总结，产生新的理论。通过处理和分析海量数据，科学家可以发现以前未知的规律和理论。这种方法颠覆了传统的因果关系思维，转而关注数据之间的相关性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007293,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 67,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195915,
            "nodeName": null
          }
        },
        {
          "id": 4195916,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195934,
          "knowledgeGraphId": 29889,
          "nodeName": "商务智能演变",
          "description": "商务智能的演变可以分为三个阶段：1990年代的商务智能报告、联机分析处理OLAP和数据仓库；2000年代的交互式商务智能和内存数据库RDBMS，以及大数据的批处理和分布式数据存储；2010年代的大数据实时处理和单一视图。每个阶段都有其代表性技术和工具，例如1990年代的Business Objects、SAS、Informatics、Cognos等SQL Reporting Tools，2000年代的QliqView、Tableau、HANA，Hadoop/Spark，HBase/Cassandra，以及2010年代的Graph Databases。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163720954,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 9,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 48,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195916,
            "nodeName": null
          }
        },
        {
          "id": 4195917,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195934,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据分析能力",
          "description": "面对大数据时代的发展，每个人都应该学习从大数据角度分析问题，用大数据的方法解决问题。这需要我们具备大数据的能力和素质。大数据分析课程可以帮助大家建立大数据的知识体系，深入理解大数据分析中的概念、原理、平台和技术，通过实验实现大数据理论知识的实际运用，提升解决大数据工程问题的能力。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007294,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 0,
            "nodeId": 4195917,
            "nodeName": null
          }
        },
        {
          "id": 4195920,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195934,
          "knowledgeGraphId": 29889,
          "nodeName": "互联网数据收集",
          "description": "互联网数据包括门户网站、政府公开信息、社交媒体、电子商务、公共数据等。收集互联网数据时需要注意不同网站的结构和水平不同，爬虫策略的差异，以及数据的真实性和质量问题。网络爬虫在收集数据时可能带来服务器带宽消耗、DDoS攻击和数据窃取等负面影响。Web应用防火墙（WAF）提供了反爬虫策略，如识别User Agent、验证浏览器有效性、限制访问频率等，以保护网站免受爬虫攻击。互联网数据形式多样，包括文本、表格、音频、视频等，增加了数据收集的难度。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 2,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431662093,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195920,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915907,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 62,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 81,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 68,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195920,
            "nodeName": null
          }
        }
      ],
      "level": 1,
      "childCount": 5,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 430187043,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195934,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824852,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 64,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 88,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195934,
        "nodeName": null
      }
    },
    {
      "id": 4195926,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195937,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据生命周期与应用",
      "description": "大数据生命周期与应用包括数据的收集、存储、分析和治理四个阶段。收集阶段通过自动化工具捕捉不同类型的数据；存储阶段使用ETL工具将数据统一放置在存储平台中；分析阶段利用各种分析引擎进行实时数据处理；治理阶段确保数据的合规性、隐私性和安全性，制定治理策略以避免错误信息对业务的损害。每个阶段都至关重要，确保数据从生成到应用的全过程高效且安全。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195763,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195926,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据生命周期",
          "description": "大数据生命周期包括四个阶段：收集、存储、分析和治理。收集阶段是关键步骤，定义了数据类型并通过自动化工具进行数据捕捉。存储阶段将数据统一放置在存储平台中，使用ETL工具进行处理。分析阶段通过各种分析引擎对数据进行处理，包括实时数据分析。治理阶段确保数据的合规性、隐私性和安全性，制定治理策略以避免错误信息对业务的损害。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428921480,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195763,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929024,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 374,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 169,
            "avgCompletionRate": 22,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195763,
            "nodeName": null
          }
        },
        {
          "id": 4195836,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195926,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据驱动因素",
          "description": "大数据驱动因素包括优化和预测分析、复杂的统计分析、所有类型的数据和多数据源数据、超大数据集以及更加具有实时性。图像展示了复杂度（COMPLEXITY）与业务价值（BUSINESS VALUE）的关系曲线，显示了从低复杂度到高复杂度，业务价值逐渐增加的趋势。曲线分为两个部分：Business Intelligence（商业智能）和Predictive Analytics and Data Mining（预测分析和数据挖掘）。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850908,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 4,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 40,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195836,
            "nodeName": null
          }
        },
        {
          "id": 4195764,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195926,
          "knowledgeGraphId": 29889,
          "nodeName": "DIKW金字塔模型",
          "description": "DIKW金字塔模型是大数据生命周期中的一个重要概念，代表数据（Data）、信息（Information）、知识（Knowledge）和智慧（Wisdom）的层次关系。数据是个别事实、图表、信号和测量指标值；信息是有组织、结构化、分类、有用、浓缩和计算的数据；知识是想法、学习、观念、概念、综合、比较、深思熟虑和讨论；智慧是理解、整合、应用、反思、可操作、积累、原则、模式和决策的过程。通过上下文（context）、意义（meaning）和洞察力（insight）的转换，数据逐步转化为智慧。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616258,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 86,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 4,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 40,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195764,
            "nodeName": null
          }
        },
        {
          "id": 4195765,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195926,
          "knowledgeGraphId": 29889,
          "nodeName": "商务智能的发展过程",
          "description": "商务智能的发展经历了三个阶段：第一阶段是1968年发明的分层数据库和1970年发明的关系型数据库，主要进行在线业务处理（OLTP）；第二阶段是数据仓库的出现，支持在线分析处理（OLAP），整合组织信息以改善业务交易；第三阶段是流计算技术的创建，支持实时分析处理（RTAP），进行实时决策和业务响应。随着数据规模和速度的增加，商务智能技术不断进步，推动大数据技术的发展。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429549918,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195765,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863968,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 193,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 79,
            "avgCompletionRate": 22,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195765,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428864543,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195926,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876931,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 78,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 378,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 176,
        "avgCompletionRate": 17,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195926,
        "nodeName": null
      }
    },
    {
      "id": 4195927,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195937,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据基本概念",
      "description": "大数据基本概念包括对大数据的定义、特征、生命周期和处理流程的理解。大数据通常指的是体量巨大、类型多样、处理速度快的数据集合。其特征包括数据量大（Volume）、数据类型多样（Variety）、数据处理速度快（Velocity）和数据价值密度低（Value）。大数据的生命周期涵盖数据的生成、采集、存储、处理、分析和应用等多个阶段。大数据处理流程则包括数据获取、数据预处理、数据存储、数据处理和数据分析等步骤。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195741,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的概念",
          "description": "大数据是指传统数据应用处理程序无法处理的庞大而且复杂的数据。大数据不仅仅是数据量的增加，更重要的是其复杂性和多样性。它可以定义为来自不同来源的大量非结构化和结构化数据。大数据的出现导致了对许多问题的创新性研究方法，并推动了各种统计方法的发展。大数据没有统计抽样的方法，而是通过记录数据来观察和跟踪发现正在发生的事情。大数据的规模往往超过传统软件可接受时间内能够处理的能力。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431484905,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 49,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195741,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163772705,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 80,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 344,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 228,
            "avgCompletionRate": 23,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195741,
            "nodeName": null
          }
        },
        {
          "id": 4195760,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的渗透与影响",
          "description": "麦肯锡指出，数据已经渗透到当今每一个行业和业务领域，成为重要的生产因素。大数据在物理学、生物学、环境生态学等领域以及军事、金融和通信等行业存在已有时日，近年来因互联网和信息行业的发展而引起关注。大数据的广泛应用预示着新一波生产率的增长和消费者盈余浪潮的到来。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163655499,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 0,
            "nodeId": 4195760,
            "nodeName": null
          }
        },
        {
          "id": 4195761,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的量化进程",
          "description": "哈佛大学社会学教授加里金认为，大数据是一场革命，庞大的数据资源使得各个领域开始了量化的进程。无论是学术界、商界还是政府，所有领域都在进行这种量化进程。大数据的量化进程使得各个领域能够更精确地分析和解决问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642424,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 0,
            "nodeId": 4195761,
            "nodeName": null
          }
        },
        {
          "id": 4195770,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "数据的价值与原油的类比",
          "description": "数据被比作原油，因为原始数据通常不能直接使用，必须经过加工处理才能应用。大量数据中蕴含着洞察力，但不容易找到，科学家需要分析数据并找到其背后的模式。一个数据集可以适用于多种不同的产品和目的，类似于原油可以精炼成不同的产品。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 430540863,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 44,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195770,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694764,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 89,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 145,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 151,
            "avgCompletionRate": 31,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195770,
            "nodeName": null
          }
        },
        {
          "id": 4195771,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的产生阶段",
          "description": "大数据的产生经历了几个阶段：1. 交易系统阶段，业务活动产生交易数据；2. 用户生成内容阶段，社交媒体和移动设备的发展使普通人可以发布内容；3. 感知阶段，具有处理能力的传感器不断生成数据。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 436864407,
            "gmtCreate": 1760926533000,
            "gmtModified": 1760926533000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 50,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195771,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163942106,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 240,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 175,
            "avgCompletionRate": 26,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195771,
            "nodeName": null
          }
        },
        {
          "id": 4195787,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "传统数据库与大数据的区别",
          "description": "传统数据库的数据规模一般是兆字节级别，数据类型较为单一，具有预定义的模式，使用一种工具即可解决所有问题。而大数据的规模可能达到GB、TB、PB级别，数据类型多样，包括结构化、半结构化和非结构化数据。大数据没有预定义的模式，需要通过数据去感知其他数据，并且需要不同的工具来解决不同的问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429435532,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 14,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195787,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824846,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 75,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 157,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 117,
            "avgCompletionRate": 26,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195787,
            "nodeName": null
          }
        },
        {
          "id": 4195835,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195927,
          "knowledgeGraphId": 29889,
          "nodeName": "IT的发展历程",
          "description": "IT的发展历程可以分为几个阶段：PC时代、互联网时代、移动互联网时代、大数据时代和人工智能时代。PC时代是信息时代的开始，互联网时代将IT和互联网结合，移动互联网时代引入了移动设备和互联网+的概念。大数据时代使得决策更加依赖数据分析，而人工智能时代则是继互联网之后的第二次科技生态萌芽。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 436115371,
            "gmtCreate": 1760926533000,
            "gmtModified": 1760926533000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 6,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195835,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163772706,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 92,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195835,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 7,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 436979614,
        "gmtCreate": 1760926533000,
        "gmtModified": 1760926533000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 69,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195927,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759932,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 76,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 596,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 244,
        "avgCompletionRate": 23,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195927,
        "nodeName": null
      }
    },
    {
      "id": 4195928,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195937,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据特征与类型",
      "description": "大数据具有五个主要特征：规模、速度、种类、真伪和价值。规模指数据量庞大，呈指数级增长。速度指数据生成和处理的快速性，实时处理变得重要。种类指数据多样性，包括结构化、半结构化和非结构化数据。真伪指数据的准确性和可信度，需要过滤无用信息。价值指从数据中提取的潜在价值，数据必须可靠、有用，才能支持分析和决策。理解和处理这些不同类型的数据是大数据分析中的重要环节，因为它们需要不同的技术和方法来进行存储、处理和分析。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195899,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195928,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据类型",
          "description": "大数据的种类指的是数据的多样性，主要包括结构化数据、半结构化数据和非结构化数据。结构化数据是指具有固定格式和长度的数据，如关系数据库中的表格数据。半结构化数据则是指不完全符合关系模型的数据，如XML和JSON。非结构化数据则是指没有固定格式的数据，如文本、图像、视频等。理解和处理这些不同类型的数据是大数据分析中的重要环节，因为它们需要不同的技术和方法来进行存储、处理和分析。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668732,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 17,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 59,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195899,
            "nodeName": null
          }
        },
        {
          "id": 4195900,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195928,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据特征",
          "description": "大数据具有五个主要特征：规模（Volume）、速度（Velocity）、种类（Variety）、真伪（Veracity）和价值（Value）。规模指数据量庞大，呈指数级增长。速度指数据生成和处理的快速性，实时处理变得重要。种类指数据多样性，包括结构化和非结构化数据。真伪指数据的准确性和可信度，需要过滤无用信息。价值指从数据中提取的潜在价值，数据必须可靠、有用，才能支持分析和决策。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429951554,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 75,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195900,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163720953,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 83,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 424,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 183,
            "avgCompletionRate": 18,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195900,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431307455,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 75,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195928,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668733,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 83,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 438,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 191,
        "avgCompletionRate": 16,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195928,
        "nodeName": null
      }
    },
    {
      "id": 4195929,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195937,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据技术与模型",
      "description": "大数据技术与模型涵盖了数据的存储、处理和应用三个层次。数据存储系统包括分布式数据库、数据仓库和分布式文件系统，负责数据的收集、清洗、存储和建模。数据处理系统利用算法、计算模型和计算平台进行数据分析和处理。数据应用系统则将分析结果应用于实际业务场景，提供数据可视化和服务。这些技术和模型共同构成了大数据分析的基础，支持从数据获取到价值实现的全过程。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195716,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195929,
          "knowledgeGraphId": 29889,
          "nodeName": "第四研究范式",
          "description": "第四研究范式是指基于大数据的科学研究方法。与传统的实验归纳、模型推演和计算机模拟不同，第四范式强调先拥有大量的数据，然后通过计算和分析得出新的结论。这种方法不再依赖于先提出假设再验证，而是通过数据本身揭示潜在的规律和关系。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428978156,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195716,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759925,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 63,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 167,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 91,
            "avgCompletionRate": 25,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195716,
            "nodeName": null
          }
        },
        {
          "id": 4195878,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195929,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据计算系统的三个基本层次",
          "description": "大数据计算系统通常分为三个基本层次：数据存储系统、数据处理系统和数据应用系统。数据存储系统包括分布式数据库、数据仓库和分布式文件系统，负责数据的收集、清洗、存储和建模。数据处理系统包括算法、计算模型和计算平台，负责数据的分析和处理。数据应用系统包括大数据应用、数据产品和数据服务，负责将分析结果应用于实际业务场景，并提供数据可视化和服务。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902879,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 83,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 30,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195878,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429549926,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195929,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876932,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 68,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 197,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 107,
        "avgCompletionRate": 17,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195929,
        "nodeName": null
      }
    },
    {
      "id": 4195945,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195946,
      "knowledgeGraphId": 29889,
      "nodeName": "数据类型",
      "description": "数据类型与采集包括结构化数据、非结构化数据和半结构化数据。结构化数据以预定义格式存储，易于管理和保护。非结构化数据没有统一格式，存储在图像、音频、视频等形式中，占企业数据的80%，处理难度大。半结构化数据如XML文件，具有一定模式，可分析。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195784,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195945,
          "knowledgeGraphId": 29889,
          "nodeName": "结构化数据",
          "description": "结构化数据是指以预定义的格式组织的数据，通常以行和列的形式存储在关系数据库中。数据类型可以是数字、日期和字符串等。结构化数据需要更少的存储空间，并且使用传统的解决方案更容易管理和保护这些数据。由于其固定的格式，处理起来相对简单。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428179358,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 14,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195784,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707864,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 82,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 157,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 117,
            "avgCompletionRate": 26,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195784,
            "nodeName": null
          }
        },
        {
          "id": 4195785,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195945,
          "knowledgeGraphId": 29889,
          "nodeName": "非结构化数据",
          "description": "非结构化数据是指没有统一格式的数据，通常存储在图像、音频、视频、文字处理文件、电子邮件、电子表格等形式中。非结构化数据占企业数据的80%，需要更多的存储空间，且难以用传统的方式进行管理和保护。处理非结构化数据需要更多的工具和方法，因为它们缺乏标准化和预设的边界。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428122085,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 14,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195785,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837889,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 85,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 157,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 117,
            "avgCompletionRate": 26,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195785,
            "nodeName": null
          }
        },
        {
          "id": 4195786,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195945,
          "knowledgeGraphId": 29889,
          "nodeName": "半结构化数据和准结构化数据",
          "description": "半结构化数据是指不完全遵循数据模型的数据，例如XML文件、CSV文件等，这些数据具有一定的模式，可以进行分析。准结构化数据则是格式不太稳定的数据，例如点击流数据，通过一定的处理可以被格式化。半结构化和准结构化数据介于结构化和非结构化数据之间，具有一定的灵活性。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429035292,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 14,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195786,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163994360,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 78,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 157,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 117,
            "avgCompletionRate": 26,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195786,
            "nodeName": null
          }
        },
        {
          "id": 4195723,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195945,
          "knowledgeGraphId": 29889,
          "nodeName": "内部数据与外部数据",
          "description": "内部数据是指组织创建并存储在组织内部的所有数据，包括自营系统、业务交易系统、制造系统、财务系统、人力资源系统、会计系统等。这些系统记录的都是结构化的数据，还包括一些历史遗留的数据，如文档数据、电子邮件等，以及内部物联网设备产生的数据。外部数据是指特定组织以外的数据，包括其他组织的业务系统数据、物联网设备数据、政府公开数据、互联网数据等。内部数据和外部数据的获取方法和工具不同，内部数据主要通过组织内部的系统收集，而外部数据则通过互联网、政府公开信息等渠道获取。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785655,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 78,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 1,
            "nodeId": 4195723,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429492749,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 14,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195945,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955187,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 81,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 157,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 117,
        "avgCompletionRate": 26,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195945,
        "nodeName": null
      }
    },
    {
      "id": 4195921,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195946,
      "knowledgeGraphId": 29889,
      "nodeName": "数据采集",
      "description": "深网数据采集涉及识别查询接口和自动填写表格获取数据，需特殊设计爬虫，包括界面识别、表单解析、数据资源发现等。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195775,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195921,
          "knowledgeGraphId": 29889,
          "nodeName": "深层网络(DeepWeb)",
          "description": "深层网络是指那些信息内容存储在搜索数据库中，并且只响应直接查询的网站。深层网络的内容主要是结构化的数据库信息，包括学术记录、财务记录、法律文件、政府记录和科学报告等。深层网络的信息与信息需求、市场和领域高度相关，且增长速度快，内容专业深入。深层网络的全部价值是表面网的1000到2000倍，且95%的信息是无需付费就可以获取到的。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428521566,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195775,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811895,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 84,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 15,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195775,
            "nodeName": null
          }
        },
        {
          "id": 4195776,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195921,
          "knowledgeGraphId": 29889,
          "nodeName": "暗网(DarkWeb)",
          "description": "暗网是互联网的最底层部分，通常包含非法信息，如毒品和武器交易信息。暗网中还有T.O.R项目（The Onion Router），用户可以通过T.O.R在互联网上进行匿名通信。T.O.R项目由美国海军研究实验室赞助，旨在隐藏政府人员在网上收集信息情报的行踪。T.O.R通过多台计算机发送信息，每一步都进行加密，无法知道用户的位置和信息传输的目的地。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429721984,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195776,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007289,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 70,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 84,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 15,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195776,
            "nodeName": null
          }
        },
        {
          "id": 4195885,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195921,
          "knowledgeGraphId": 29889,
          "nodeName": "PageRank与OPIC策略",
          "description": "PageRank策略通过计算网页之间的链接关系来评估网页的重要性，链接数量多但质量低的网页不如链接数量少但质量高的网页重要。OPIC策略为每个网页分配相同的“金币”，每当一个页面被下载时，其“金币”会平均分配到该网页中包含的链接页面，待爬队列中的链接按“金币”排序。PageRank策略计算复杂度较高，而OPIC策略计算速度较快。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915906,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 67,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195885,
            "nodeName": null
          }
        },
        {
          "id": 4195712,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195921,
          "knowledgeGraphId": 29889,
          "nodeName": "ETL(Extract,Transform,Load)",
          "description": "ETL是数据处理中的一种重要工具，主要用于数据的提取、转换和加载。其目的是整合所有相关的企业数据，以进行分析和处理，获取完整的数据全貌。ETL工具可以处理结构化数据和非结构化数据，将其加载到数据仓库或大数据集群中。提取是从数据源中获取数据，转换是将不同格式的原始数据转换为统一的标准格式，加载是将转换后的数据存储到目标数据库中。ETL过程可以手动完成，也可以使用软件工具自动化完成。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431780316,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195712,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915902,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 67,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 125,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 67,
            "avgCompletionRate": 15,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195712,
            "nodeName": null
          }
        },
        {
          "id": 4195773,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195921,
          "knowledgeGraphId": 29889,
          "nodeName": "数据源选择与数据收集",
          "description": "在大数据分析的初始阶段，首先需要根据分析需求选择合适的数据源，这些数据源可以是结构化数据、半结构化数据或非结构化数据。选定数据源后，使用ETL工具（Extract, Transform, Load）或数据爬虫从不同的数据库或数据仓库中提取数据。",
          "position": 4,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206472,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195773,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681789,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 72,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 106,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 76,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195773,
            "nodeName": null
          }
        },
        {
          "id": 4195911,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195921,
          "knowledgeGraphId": 29889,
          "nodeName": "数据提取方法",
          "description": "数据提取方法是大数据分析中的关键步骤，主要包括全量提取和增量提取。全量提取是指每次从数据源中提取所有数据，适用于数据量较小或首次数据加载的情况。增量提取则是每次仅提取自上次提取以来新增或修改的记录，常见方法有日志对比、时间戳、触发器和全表对比。日志对比通过数据库日志评估变化的数据；时间戳通过比较系统时间和时间戳值捕捉变化的数据；触发器在数据表上创建触发器捕捉变化；全表对比通过对比源表和MD5临时表识别变化的数据。",
          "position": 5,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 430128087,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195911,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163629243,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 69,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 175,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 77,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195911,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 6,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 430363681,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 13,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195921,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850911,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 66,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 366,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 98,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195921,
        "nodeName": null
      }
    },
    {
      "id": 4195930,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195938,
      "knowledgeGraphId": 29889,
      "nodeName": "数据质量问题",
      "description": "数据质量问题可以分为单数据源和多数据源两类。单数据源的问题包括模型层面和实例层面，模型层面的问题依赖于设计模型对数据完整性的约束，而实例层面的问题如数据输入错误、属性值错误等需要通过数据清洗解决。多数据源的问题主要包括命名冲突、结构冲突和数据内容冲突，这些问题需要通过数据集成和数据清洗来解决。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195903,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195930,
          "knowledgeGraphId": 29889,
          "nodeName": "数据管理过程",
          "description": "数据管理的过程包括对数据进行发现和画像、用元数据来管理和丰富数据集以及为业务分析解析和准备数据。通过这些步骤，可以确保数据的质量和可用性，为后续的商务智能报告和数据分析提供可靠的数据基础。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850910,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 46,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195903,
            "nodeName": null
          }
        },
        {
          "id": 4195904,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195930,
          "knowledgeGraphId": 29889,
          "nodeName": "数据规约与压缩",
          "description": "数据规约与压缩是通过技术手段减少数据集的规模，同时保持数据集的完整性和分析结果的质量。数据规约包括降维和数据量减少，降维方法有属性子集选择、主成分分析和小波变换；数据量减少方法有数据立方体聚合、聚类、抽样和直方图等。数据压缩通过数据编码或变换实现，包括无损压缩和有损压缩，主成分分析（PCA）是一种常用的数据压缩方法。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428179364,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195904,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811901,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 152,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195904,
            "nodeName": null
          }
        },
        {
          "id": 4195905,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195930,
          "knowledgeGraphId": 29889,
          "nodeName": "多数据源数据质量",
          "description": "多数据源的数据质量问题主要包括命名冲突、结构冲突和数据内容冲突。命名冲突是指不同数据对象采用相同的名字或同一数据对象采用不同的名字。结构冲突是指不同数据源中同一数据对象的表示方式不同，例如日期格式的不同（dd/mm/yyyy、yyyy/mm/dd、mm/dd/yyyy），以及不同数据集中同一对象的属性粒度、组成结构、数据类型和完整性约束的不同。数据内容冲突包括记录重复、记录冲突以及不同数据源之间的数据值表示不同等问题。这些问题需要通过数据集成和数据清洗来解决。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429092269,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195905,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163746824,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 47,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 69,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 70,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195905,
            "nodeName": null
          }
        },
        {
          "id": 4195906,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195930,
          "knowledgeGraphId": 29889,
          "nodeName": "单数据源数据质量",
          "description": "单数据源的数据质量问题包括模型层面和实例层面的问题。模型层面的问题依赖于设计模型对数据完整性的约束，例如日期格式的统一性。实例层面的问题包括数据输入错误、属性值错误、属性之间的不一致以及记录之间的不一致等。这些问题需要通过数据清洗来解决。数据库的完整性约束决定了哪些数据值是可以被接受的，例如日期格式的统一性。实例层面的数据质量问题是模式设计层面无法避免的，例如数据输入的错误、拼写错误、冗余和重复记录、属性值冲突等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428464543,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195906,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163889961,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 43,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 69,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 70,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195906,
            "nodeName": null
          }
        },
        {
          "id": 4195907,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195930,
          "knowledgeGraphId": 29889,
          "nodeName": "数据质量问题分类",
          "description": "数据质量问题可以按照数据源的数量和数据问题出现的阶段进行分类。按照数据源的数量，可以分为单数据源和多数据源。按照数据问题出现的阶段，可以分为模型层面和实力层面。模型层面的问题可以通过改善模型设计、模型转换和模型集成来解决，而实力层面的问题则需要在数据清洗过程中解决。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428521574,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195907,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785664,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 67,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 14,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195907,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 5,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429721988,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195930,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876933,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 226,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 85,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195930,
        "nodeName": null
      }
    },
    {
      "id": 4195901,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195938,
      "knowledgeGraphId": 29889,
      "nodeName": "数据预处理",
      "description": "数据预处理是大数据分析中的关键步骤，旨在提升数据质量和分析效率。它包括数据清洗、数据转换和数据归约等过程。数据清洗通过去除噪声和错误数据、填补缺失值来确保数据的准确性和一致性。数据转换则将数据标准化、归一化，使其适合分析。数据归约通过数据压缩和特征选择减少数据的维度和规模，从而提高数据处理的效率。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195870,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195901,
          "knowledgeGraphId": 29889,
          "nodeName": "数据预处理",
          "description": "数据预处理是大数据分析中的重要步骤，旨在提高数据质量和分析效率。数据预处理包括数据清洗、数据转换和数据归约等过程。数据清洗是指去除数据中的噪声和错误，填补缺失值，确保数据的准确性和一致性。数据转换是将数据转换为适合分析的格式，包括数据标准化、归一化等。数据归约则是通过数据压缩和特征选择等方法减少数据的维度和规模，从而提高数据处理的效率。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428521572,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195870,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955186,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 124,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 121,
            "avgCompletionRate": 19,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195870,
            "nodeName": null
          }
        },
        {
          "id": 4195902,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195901,
          "knowledgeGraphId": 29889,
          "nodeName": "数据清洗",
          "description": "数据清洗是大数据分析中的关键步骤，旨在提高数据质量。主要包括处理缺失值、重复记录和噪声数据。缺失值可能由于设备异常、没有输入或忽略等原因产生，清洗方法有使用默认值、属性平均值或相似样本的平均值等。重复记录通常由于多数据源集成或重复输入产生，其清洗通过删除完全重复的记录或增加冗余属性来标识不同的重复记录。噪声数据可能由于随机错误或偏差产生，其清洗则通过分箱、聚类和回归算法来处理异常数据。这些方法确保数据的完整性和准确性，从而提高数据分析的可靠性。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429263838,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195902,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707870,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 59,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 180,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 76,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195902,
            "nodeName": null
          }
        },
        {
          "id": 4195713,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195901,
          "knowledgeGraphId": 29889,
          "nodeName": "数据转换",
          "description": "数据转换是指为了便于高效的分析，将数据从一种形式转换为另一种形式。数据转换可以包括以下几种技术：1. 平滑方法，如分箱、聚类、回归，用于消除噪声或离散化连续数据；2. 数据汇总，通过构造数据立方体实现按地区、时间等维度的汇总；3. 数据泛化，用更高级的抽象概念取代低层次的抽象概念，例如将街道泛化为城市、国家，将年龄泛化为青年、中年、老年；4. 数据规范化，将数据按比例缩放到特定区域内，消除数值型属性因大小不一造成的偏差；5. 属性构建，利用已知属性集构造新的属性集，例如将宽和高构造为面积属性。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206466,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195713,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163629241,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 62,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 50,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 50,
            "avgCompletionRate": 13,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195713,
            "nodeName": null
          }
        },
        {
          "id": 4195709,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195901,
          "knowledgeGraphId": 29889,
          "nodeName": "数据集成",
          "description": "数据集成是将多个数据源中的数据整合到一个一致的数据存储当中。在整合之后可能需要做的工作包括模式匹配、删除冗余数据、解决数据值的冲突问题。模式匹配是指将来自不同数据源的原数据映射到同一个目标对象上，例如将不同表中同样的客户ID映射为同一个字段。删除冗余数据是指去除重复的属性或字段，例如根据月收入属性计算平均月收入属性，从而不再存储平均月收入属性。解决数据值的冲突是指统一不同数据源中表示差异的属性值，例如统一不同计量单位的重量或货币。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428293241,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195709,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915901,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 73,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 50,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 50,
            "avgCompletionRate": 13,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195709,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428864539,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 15,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195901,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163942111,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 354,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 137,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195901,
        "nodeName": null
      }
    },
    {
      "id": 4195879,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195935,
      "knowledgeGraphId": 29889,
      "nodeName": "数据资产",
      "description": "数据资产是指在大数据分析过程中需要处理和管理的各种数据类型，包括交易数据、文档、客户邮件、用户协议、产业报告以及机器设备和科学相关的IoT设备数据。这些数据需要通过ETL（提取、转换、加载）过程导入到Hadoop系统中，并进行批量加载、社交媒体数据变化的关注和复制以及实时流数据的收集。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 2,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850909,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 46,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195879,
        "nodeName": null
      }
    },
    {
      "id": 4195893,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195935,
      "knowledgeGraphId": 29889,
      "nodeName": "数据建模与访问",
      "description": "数据建模与访问是大数据分析中的关键环节。数据建模包括概念模型、逻辑模型和物理模型，分别描述数据的语义、逻辑结构和物理存储实现。数据访问层通过数据存取对象（DAO）和基于对象关系映射（ORM）等方式实现，提供对数据库的基本操作支持，包括创建、检索、更新和删除（CRUD）操作，并支持事务管理、并发处理和异构数据库转换等复杂功能。ACID模型适用于关系型数据库，强调事务的原子性、一致性、隔离性和持久性；BASE模型适用于NoSQL数据库，强调基本可用性、软状态和最终一致性。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195736,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195893,
          "knowledgeGraphId": 29889,
          "nodeName": "数据访问层",
          "description": "数据访问层（Data Access Layer，DAL）是位于数据库之上的软件层，主要功能是实现应用程序中的数据持久化存储和数据交换。它提供对数据库的基本操作支持，包括创建、检索、更新和删除（CRUD）操作，并且支持事务管理、并发处理和异构数据库转换等复杂功能。数据访问层通过数据存取对象（DAO）和基于对象关系映射（ORM）等方式实现，解决了分布式计算环境下应用程序对数据库的访问和数据交换问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428122082,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195736,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955179,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 17,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 225,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 80,
            "avgCompletionRate": 16,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195736,
            "nodeName": null
          }
        },
        {
          "id": 4195767,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195893,
          "knowledgeGraphId": 29889,
          "nodeName": "数据建模",
          "description": "数据建模是数据存储系统中的一个重要环节，涉及对实体数据或用户对数据功能的描述，建立抽象模型，包括元数据、数据结构、属性、值域、关联关系、一致性和时效性等元素。数据建模分为概念模型、逻辑模型和物理模型三个层次，分别描述数据的语义、逻辑结构和物理存储实现。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429320993,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195767,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616259,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 46,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 116,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 53,
            "avgCompletionRate": 13,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195767,
            "nodeName": null
          }
        },
        {
          "id": 4195841,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195893,
          "knowledgeGraphId": 29889,
          "nodeName": "ACID与BASE模型",
          "description": "ACID和BASE是两种不同的数据库事务模型。ACID模型强调事务的原子性、一致性、隔离性和持久性，适用于传统关系型数据库。而BASE模型则适用于NoSQL数据库，强调基本可用性、软状态和最终一致性。BASE模型允许在高并发数据访问下，系统可以在一定时间内达到最终一致性，而不是立即一致。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876929,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 54,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 28,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195841,
            "nodeName": null
          }
        },
        {
          "id": 4195850,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195893,
          "knowledgeGraphId": 29889,
          "nodeName": "数据建模层级",
          "description": "数据建模层级包括概念模型、逻辑模型和物理模型。概念模型是对业务需求的抽象，逻辑模型是对数据结构的详细描述，物理模型则是数据的实际存储实现。三级模型应该相互独立，即物理模型的改变不影响逻辑模型和概念模型的内容，逻辑模型的改变不影响概念模型的定义。这种分层次的数据建模方法确保了数据模型的灵活性和可维护性。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876930,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 25,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195850,
            "nodeName": null
          }
        },
        {
          "id": 4195731,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195893,
          "knowledgeGraphId": 29889,
          "nodeName": "统一数据访问接口",
          "description": "统一数据访问接口（Unified Data Access Interface，UDAI）是一种支持分布式环境下跨平台异构数据统一访问的接口。其功能包括统一数据显示、存储和管理，分离访问接口和实现代码，屏蔽数据源差异和数据库操作细节，并提供统一的访问接口和查询语言。UDAI的架构包括统一数据访问接口/统一查询语言、数据模型/元数据/服务模型、数据转换引擎/数据服务引擎/数据源管理器和数据源包装器，这些组件共同作用将不同数据源的不同格式数据转换为统一的数据服务。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915904,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 38,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 25,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195731,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 5,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206476,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 15,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195893,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163655501,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 46,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 367,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 98,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195893,
        "nodeName": null
      }
    },
    {
      "id": 4195894,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195935,
      "knowledgeGraphId": 29889,
      "nodeName": "数据存储技术",
      "description": "数据存储技术是大数据分析的基础，涵盖数据收集、建模、分布式文件系统、分布式数据库和数据仓库等方面。分布式文件系统和数据库通过分布式架构实现高可用性和高容错性，确保数据的可靠存储和访问。数据仓库用于存储和管理大量历史数据，支持复杂查询和分析。统一数据访问接口提供标准化方式，方便用户访问和操作不同系统中的数据。这些技术共同支持大规模数据处理和分析，确保数据的高效存储和管理。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195809,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195894,
          "knowledgeGraphId": 29889,
          "nodeName": "基于列的存储",
          "description": "基于列的存储是一种数据存储方式，适用于支持分析处理（如OLAP）。与基于行的存储不同，基于列的存储将数据按列顺序存储，这样在执行聚合操作时效率更高，因为相关数据位于连续的内存位置。哈娜数据库采用基于列的存储方式，使得数据的排序和压缩更加有效，并且在进行数据分析时不需要提前进行聚合，从而减少了冗余数据和内存消耗。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429263834,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195809,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707865,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 66,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195809,
            "nodeName": null
          }
        },
        {
          "id": 4195810,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195894,
          "knowledgeGraphId": 29889,
          "nodeName": "数据压缩与分区",
          "description": "数据压缩与分区是提高内存数据库性能的重要技术。由于内存的大小有限，哈娜数据库采用了多种压缩方法来减小数据库的大小。通过对数据库进行分区，可以实现并行化处理，从而提高性能。哈娜数据库的分区技术允许将数据分割成多个部分，并在多个处理器上并行处理，从而加快数据访问和计算速度。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149290,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195810,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163798796,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 66,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 28,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195810,
            "nodeName": null
          }
        },
        {
          "id": 4195853,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195894,
          "knowledgeGraphId": 29889,
          "nodeName": "数据存储架构",
          "description": "数据存储架构分为四个层次：L1数据收集与建模、L2分布式文件系统、L3分布式数据库/数据仓库、L4统一数据访问接口。L1层负责数据的获取、提取、转换和建模，确保数据的初步处理和准备；L2层通过分布式文件系统（如HDFS、GFS、Colossus）进行数据存储，提供高效的存储解决方案；L3层通过NoSQL数据库（如HBase、BigTable、MongoDB、Neo4j）或数据仓库进行数据管理和查询，支持大规模数据处理和分析；L4层通过统一数据访问接口实现跨平台异构数据的统一访问，确保数据的高效访问和利用。这种分层架构确保了数据的高效存储、管理和访问，支持大规模数据处理和分析。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163942109,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 36,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 25,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 34,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195853,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429435539,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195894,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668731,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 36,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 91,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 47,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195894,
        "nodeName": null
      }
    },
    {
      "id": 4195925,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195935,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式文件系统",
      "description": "分布式文件系统是大数据分析中的核心组件，通过将数据分散存储在多个节点上，实现高冗余性和可靠性。常见的分布式文件系统包括HDFS和GFS。它们通过数据分片和复制机制，确保在部分节点失效或网络分区时系统仍能正常运行，保证数据的可用性和一致性。分布式文件系统支持一次写入，多次读取，提供高可用性和高可靠性，是大数据计算的基础设施之一。",
      "position": 3,
      "labelNameList": null,
      "children": [
        {
          "id": 4195895,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195925,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS数据操作",
          "description": "HDFS数据操作包括数据的写入和读取。数据写入过程：客户端创建文件，NameNode检查并记录，返回FSDataOutputStream，数据被拆分并写入队列，DataStreamer请求分配数据块并传输数据包，数据包在DataNode之间传输并存储，客户端完成写入并通知NameNode。数据读取过程：客户端打开文件，NameNode返回数据块地址，客户端读取数据块，数据包从DataNode流回客户端，客户端关闭连接并找到下一个数据块，完成读取并通知NameNode。如果读取错误，客户端从其他DataNode读取并反馈错误。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428921482,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195895,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811900,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 98,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 48,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195895,
            "nodeName": null
          }
        },
        {
          "id": 4195896,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195925,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式存储与容错",
          "description": "分布式存储与容错是大数据分析中的关键概念。分布式存储通过将数据分散存储在多个节点上，提高了数据的冗余性和可靠性，常见的系统包括HDFS、GFS等。容错性则确保系统在部分节点失效或网络分区时仍能正常运行，保证数据的可用性和一致性。分布式文件系统通过数据分片和复制机制实现高可用性和高可靠性，是大数据计算的基础设施之一。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429664669,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195896,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163720952,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 107,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 76,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195896,
            "nodeName": null
          }
        },
        {
          "id": 4195897,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195925,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS架构与机制",
          "description": "HDFS架构与机制：HDFS（Hadoop分布式文件系统）采用主从结构，包括一个主节点（NameNode）和多个从节点（DataNode）。NameNode负责管理文件系统的命名空间、文件到数据块的映射以及客户端的访问调度。DataNode负责存储文件数据块，并在NameNode的调度下进行数据块的创建、删除和复制。HDFS还包括一个次名称节点（Secondary NameNode），用于定期与主名称节点同步数据，并在主节点失效时提供恢复功能。HDFS支持一次写入，多次读取，确保数据的可靠性和高可用性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428693037,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195897,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902880,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 52,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 210,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 57,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195897,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428749881,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195925,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707871,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 52,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 317,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 80,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195925,
        "nodeName": null
      }
    },
    {
      "id": 4195922,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195935,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式数据库",
      "description": "分布式数据库是构建于文件系统之上的数据库，能够实现数据的存储管理，并对上层计算引擎和应用软件提供数据快速查询功能和数据分析服务。它包括关系型数据库如Oracle、MS SQL Server和MySQL，以及非关系型数据库如MongoDB、HBase等。分布式数据库在处理超大规模数据量和非结构化数据时具有重要作用，通过横向扩展和支持非结构化查询来解决关系型数据库在扩展性和查询效率上的挑战。",
      "position": 4,
      "labelNameList": null,
      "children": [
        {
          "id": 4195758,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195922,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式数据库",
          "description": "分布式数据库是构建于文件系统之上的数据库，能够实现数据的存储管理，并对上层计算引擎和应用软件提供数据快速查询功能和数据分析服务。它包括关系型数据库和非关系型数据库，关系型数据库如Oracle、MS SQL Server和MySQL，非关系型数据库如MongoDB、HBase等。分布式数据库在大数据计算中具有重要作用，尤其在处理超大规模数据量和非结构化数据时，关系型数据库面临扩展性和查询效率的挑战，而非关系型数据库则通过横向扩展和支持非结构化查询来解决这些问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429435529,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195758,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850906,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 125,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 50,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195758,
            "nodeName": null
          }
        },
        {
          "id": 4195759,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195922,
          "knowledgeGraphId": 29889,
          "nodeName": "NewSQL数据库",
          "description": "NewSQL数据库是一类新型的关系型数据库管理系统，旨在解决传统关系型数据库在扩展性和性能上的不足，同时保持ACID特性。NewSQL数据库支持强一致性和线性扩展，通常采用Paxos和Raft共识算法来支持多份副本，优化写能力。它们在数据存储层上采用LSM树结构，能够提供高效的读写性能。NewSQL数据库结合了NoSQL的扩展性和关系型数据库的事务支持，适用于在线事务处理（OLTP）场景。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206470,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195759,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007288,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 125,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 50,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195759,
            "nodeName": null
          }
        },
        {
          "id": 4195886,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195922,
          "knowledgeGraphId": 29889,
          "nodeName": "NoSQL数据库",
          "description": "NoSQL数据库是一类非关系型数据库，旨在处理大规模数据和高并发访问，常见的有HBase、MongoDB和Redis。NoSQL数据库支持横向扩展，能够处理非结构化和半结构化数据，读写性能高，成本低，易于部署。NoSQL数据库不需要预定义数据格式，采用无共享架构，支持异步复制，提供最终一致性。主要类型包括文档数据库、键值数据库、列存储数据库和图数据库。文档数据库以键值对形式存储数据，值部分为JSON或XML文档，适合半结构化数据。键值数据库通过键值对存储数据，适用于简单查询。列存储数据库基于列存储结构，支持高效的聚合查询。图数据库通过顶点和边表示数据及其关系，适用于处理高度相关的数据，如社交网络和推荐系统。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 7,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428693036,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 15,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195886,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968227,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 54,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 253,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 58,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195886,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428293248,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 15,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195922,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863970,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 55,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 253,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 58,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195922,
        "nodeName": null
      }
    },
    {
      "id": 4195766,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195935,
      "knowledgeGraphId": 29889,
      "nodeName": "数据存储系统",
      "description": "大数据计算系统可以分为三个部分：数据存储系统、数据处理系统和数据应用系统。数据存储系统包括数据收集和建模、分布式文件系统、分布式数据库和数据仓库，以及统一数据访问接口。在数据存储系统中，不同的部分完成不同的任务，确保数据的高效存储和管理。分布式文件系统和分布式数据库是数据存储系统的重要组成部分，它们通过分布式架构实现数据的高可用性和高容错性。数据仓库则用于存储和管理大量的历史数据，支持复杂的查询和分析。统一数据访问接口提供了一种标准化的方式，方便用户访问和操作存储在不同系统中的数据。",
      "position": 5,
      "labelNameList": null,
      "children": [
        {
          "id": 4195722,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195766,
          "knowledgeGraphId": 29889,
          "nodeName": "数据存储与处理平台",
          "description": "数据存储可以使用关系型数据库（如Cycle Server）、数据仓库（如Hadoop）、文档数据库（如MongoDB）和图形数据库（如Neo4j）等。数据处理平台包括Hadoop、Spark等，用于处理大规模数据。数据分析工具如TensorFlow、IBM Watson等可以对数据进行分析，分析后的数据可以使用可视化工具如Tableau进行展示。通过这些工具和平台，可以对数据进行全面的分析和处理，从而获得业务改进、收益分析、客户概况等有价值的信息。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811894,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 57,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 1,
            "nodeId": 4195722,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429779009,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195766,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981285,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 73,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 45,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195766,
        "nodeName": null
      }
    },
    {
      "id": 4195800,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "批处理",
      "description": "批处理是一种一次性处理大量数据的计算模型，通常用于处理在一段时间内收集的大量数据。批处理作业可以在离线状态下进行，适用于工资处理、产品发票、供应链管理等场景。其优点是能够降低运营成本，不需要专门的数据输入职员，并且可以在经理控制的时间内进行处理。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195888,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195800,
          "knowledgeGraphId": 29889,
          "nodeName": "MapReduce计算模型",
          "description": "MapReduce计算模型是大数据批处理计算的代表性模型，主要包括两个阶段：Map阶段和Reduce阶段。在Map阶段，数据从HDFS中读取并经过处理生成中间结果，这些中间结果被存储到HDFS中。接着在Reduce阶段，这些中间结果被进一步处理，生成最终的输出并存储到HDFS中。MapReduce通过在分布式环境下进行并行计算来提高处理效率，适用于处理大规模的结构化和非结构化数据。该模型通过将数据分割成多个小块，并在多个节点上并行处理这些小块，实现高效的数据处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163603088,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 42,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 116,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 43,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195888,
            "nodeName": null
          }
        },
        {
          "id": 4195798,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195800,
          "knowledgeGraphId": 29889,
          "nodeName": "微量批处理系统",
          "description": "微量批处理系统是一种介于批处理和流处理之间的计算模型。它将数据以小批次的形式进行处理，虽然不是真正的实时处理，但接近于实时处理。Spark 是微量批处理系统的代表，通过将数据分成小批次进行处理，可以在一定程度上节省计算成本。微量批处理适用于需要频繁处理小批次数据的场景。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428350566,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195798,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733952,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 27,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 29,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195798,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429836594,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195800,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876926,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 44,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 246,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 52,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195800,
        "nodeName": null
      }
    },
    {
      "id": 4195923,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "图计算与消息传递",
      "description": "图计算与消息传递是并行图计算模型中的核心概念。图分区是基本执行单元，每个分区包含大量节点，并由一个线程执行。消息传递系统用于在分区之间传递消息，节点通过消息传递来激活其他节点并进行计算。Pregel架构采用消息传递系统来创建大规模图形处理框架，减少网络通信开销，提高计算性能。消息传递系统包括两个消息队列，分别用于当前超步和下一个超步的消息传递。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195752,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195923,
          "knowledgeGraphId": 29889,
          "nodeName": "并行图计算模型",
          "description": "并行图计算模型（Graph parallel model）是一种用于处理大规模图数据的计算模型。它通过将图数据分割成多个子图，并在多个计算节点上并行处理这些子图来提高计算效率。常见的并行图计算框架包括Google Pregel、Apache Giraph等。该模型的关键技术包括锁步同步（Lock-step synchronization）、树状结构值聚合（Tree-based reduction）和消息合并（Message combining）。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428807159,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195752,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163655498,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 39,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 66,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 38,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195752,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428179365,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195923,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968229,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 39,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 66,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 38,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195923,
        "nodeName": null
      }
    },
    {
      "id": 4195924,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "内存计算与数据处理",
      "description": "内存计算与数据处理是一种在计算机内存中进行计算的技术，通过消除访问硬盘或SSD的延迟，大幅提升计算性能。内存计算将任务分解为更小的子任务，并分布到多台计算机的内存中并行处理，从而实现高效的数据处理。典型代表如Spark，通过内存缓存和优化查询执行，实现对大规模数据的快速处理。内存计算适用于需要高性能和低延迟的数据处理场景，如实时数据分析和大规模数据处理。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195742,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195924,
          "knowledgeGraphId": 29889,
          "nodeName": "内存计算",
          "description": "内存计算是一种完全在计算机内存（如RAM）中进行运算的计算技术。通过消除访问硬盘驱动器或SSD时的常见延迟，内存计算大大提高了计算性能。内存计算通过将计算任务分成更小的任务，并分布到每台计算机的内存中并行运行，从而实现高效的计算。Spark是内存计算模型的一个典型代表，它通过内存缓存和优化查询执行，实现了对大规模数据的快速处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206469,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195742,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707863,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 51,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 74,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195742,
            "nodeName": null
          }
        },
        {
          "id": 4195874,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195924,
          "knowledgeGraphId": 29889,
          "nodeName": "计算引擎",
          "description": "计算引擎是大数据分析中的核心组件，用于执行各种计算任务。常见的计算引擎包括Hadoop、Spark和Storm等。这些引擎提供了高效的数据处理能力，支持不同的数据计算模型，如MapReduce、动态流数据处理和并行图计算等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968225,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 25,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195874,
            "nodeName": null
          }
        },
        {
          "id": 4195826,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195924,
          "knowledgeGraphId": 29889,
          "nodeName": "Spark架构",
          "description": "Spark的计算程序分为Driver和Executor两部分。Driver负责将应用程序的计算任务转换为有向无环图（DAG），并调度任务。Executor在Worker节点上运行，负责完成计算和数据存储。Driver通过SparkContext与Cluster Manager交互，Cluster Manager管理多个Worker节点，每个Worker节点上有Executor和Cache，Executor执行具体的任务。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429779014,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195826,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163889960,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 55,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 71,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 40,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195826,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428407487,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195924,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733956,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 76,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 45,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195924,
        "nodeName": null
      }
    },
    {
      "id": 4195801,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "流处理",
      "description": "流处理是一种能够几乎瞬间分析从一个设备流到另一个设备数据的计算模型。它在数据流过系统时进行计算，对输出没有强制的时间限制。流处理适用于需要立即检测事件并快速响应的场景，如欺诈检测和网络安全。其优点是系统不需要存储大量数据，能够实时跟踪事件的发生。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195797,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195801,
          "knowledgeGraphId": 29889,
          "nodeName": "流处理计算模型",
          "description": "流处理计算模型是一种实时处理动态数据的计算模型。与传统的批处理不同，流处理针对的是动态、连续的数据流，要求实时性、快速响应和低延迟。流处理框架通常包括数据的实时采集、实时计算和实时查询服务。Storm 是一种原生的流处理系统，通过有向拓扑图（topology）实现并行计算，适用于需要实时分析和处理的场景。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428635517,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195797,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163942107,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 45,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 27,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 29,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195797,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429721985,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195801,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981286,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 45,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 130,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 42,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195801,
        "nodeName": null
      }
    },
    {
      "id": 4195871,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "数据处理系统概念",
      "description": "数据处理系统是大数据分析的核心组件，负责对海量数据进行高效的计算和处理。数据处理系统包括计算引擎和平台、计算模型和计算算法等部分。常见的计算模型有MapReduce批处理模型、流计算模型、MPP模型、内存计算模型和并行图计算模型。计算算法则包括机器学习和数据挖掘算法，如分类、聚类、回归和关联分析等。数据处理系统的目标是通过高效的计算和算法，从海量数据中提取有价值的信息和知识。",
      "position": 3,
      "labelNameList": null,
      "children": [
        {
          "id": 4195857,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195871,
          "knowledgeGraphId": 29889,
          "nodeName": "数据处理系统架构",
          "description": "数据处理系统架构包括多种计算模型，如大量数据批处理计算模型MapReduce、动态流数据Stream Computing model、结构化数据的大规模并发处理Large-scale concurrent processing (MPP)、内存计算模型In-memory Computing model和图计算模型Graph parallel model。这些模型各自适用于不同类型的数据处理需求，能够有效地处理和分析大数据。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642427,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 48,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 21,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195857,
            "nodeName": null
          }
        },
        {
          "id": 4195799,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195871,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式计算架构",
          "description": "分布式计算架构是大数据处理系统的基础，通常包括算法层、计算模型层、计算平台和引擎层。常见的大数据处理平台有 Hadoop、Spark、Storm 等。分布式系统中常用有向非循环图（DAG）来表征计算流程和计算模型，不同颜色的节点表示不同阶段的计算任务，单向箭头表示计算步骤的顺序和依赖关系。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429836593,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195799,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642425,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 54,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 235,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 93,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195799,
            "nodeName": null
          }
        },
        {
          "id": 4195774,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195871,
          "knowledgeGraphId": 29889,
          "nodeName": "特征工程与数据分析",
          "description": "数据清洗后，数据科学家进行特征工程，提取或构建具有代表性的关键特征，以支持进一步的模型和算法。然后，应用统计和数学模型或机器学习算法来发现模式、相关性和分类等，并将这些结果进行可视化，以便于理解和进一步分析。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428521565,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195774,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876924,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 22,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 106,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 76,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195774,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149292,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 15,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195871,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759930,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 359,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 129,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195871,
        "nodeName": null
      }
    },
    {
      "id": 4195898,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "大规模并行处理",
      "description": "大规模并行处理（Massively Parallel Processing, MPP）是一种计算模型，通过多个处理器并行处理同一个程序的不同部分。每个处理器运行自身的操作系统和内存，通过通讯接口进行协调工作。MPP系统通常采用无共享架构，即每个节点拥有独立的内存和磁盘，数据在节点之间水平分区。其特点是不共享资源，每个节点只访问本地内存和存储，节点之间的信息交互通过节点互联网络实现。MPP架构能够提供高性能并行处理，适用于大规模数据场景，如数据仓库、科学计算等。",
      "position": 4,
      "labelNameList": null,
      "children": [
        {
          "id": 4195737,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195898,
          "knowledgeGraphId": 29889,
          "nodeName": "无共享架构",
          "description": "无共享架构（Shared-nothing Architecture）是一种分布式计算架构，其中每个节点拥有独立的内存和磁盘，节点之间不共享任何资源。数据在节点之间水平分区，每个节点只处理自己磁盘上的数据。无共享架构通过减少资源争用和提高系统的可扩展性，适用于大规模数据处理和高并发查询的场景。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429320990,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195737,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837887,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 55,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 39,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195737,
            "nodeName": null
          }
        },
        {
          "id": 4195739,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195898,
          "knowledgeGraphId": 29889,
          "nodeName": "大规模并行处理",
          "description": "大规模并行处理（Massively Parallel Processing, MPP）是一种计算模型，采用完全并行的分布式架构，通过多个处理器并行处理同一个程序的不同部分。每个处理器运行自身的操作系统和内存，通过通讯接口进行协调工作。MPP系统通常采用无共享架构，即每个节点拥有独立的内存和磁盘，数据在节点之间水平分区。每个节点都是独立的，节点之间是对等的，整个系统中不存在单点瓶颈。MPP模型适用于需要高并发查询和数据处理的应用，如数据仓库和决策支持系统。其特点是不共享资源，每个节点只访问本地内存和存储，节点之间的信息交互通过节点互联网络实现。MPP架构能够提供高性能并行处理，适用于大规模数据场景，如数据仓库、科学计算等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429320991,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195739,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876923,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 146,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195739,
            "nodeName": null
          }
        },
        {
          "id": 4195941,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195898,
          "knowledgeGraphId": 29889,
          "nodeName": "MPP数据库",
          "description": "MPP数据库是一种高性能数据库架构，采用无共享架构，将数据和处理分散到多个节点上并行执行，从而实现高性能的数据分析能力。大多数MPP数据库采用列式存储以提高分析查询效率，数据被分区分布在多个节点上，每个节点独立处理本地数据，协调节点负责查询规划、分发和结果汇总，节点间通过网络交换必要数据。MPP数据库适用于大数据分析、数据仓库、商业智能（BI）和复杂分析查询等场景，典型代表包括Greenplum等。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428236316,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195941,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759933,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 25,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 39,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 37,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195941,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206477,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195898,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759931,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 51,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 146,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 50,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195898,
        "nodeName": null
      }
    },
    {
      "id": 4195806,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "内存数据库",
      "description": "内存数据库是一种将数据直接存储在内存中的数据库系统，旨在优化数据的高效访问。与传统数据库不同，内存数据库不依赖于硬盘存储，而是利用内存的高速读写能力来提高查询和计算性能。哈娜数据库结合了硬件和软件的优势，通过多核架构、跨刀片并行扩展、64位地址空间等技术，使内存数据库成为可能。哈娜数据库还采用了基于列的存储、压缩分区、动态扩展等先进的软件技术，以提高性能和减少内存消耗。",
      "position": 5,
      "labelNameList": null,
      "children": [
        {
          "id": 4195856,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195806,
          "knowledgeGraphId": 29889,
          "nodeName": "内存数据库-HANA",
          "description": "内存数据库HANA是一种高性能的数据处理系统，利用多核架构和并行扩展技术，实现了数据的快速处理和实时分析。HANA通过行存储和列存储、压缩、分区等技术，消除了冗余数据副本，简化了数据管理，减少了数据延迟，提高了数据实时性。其应用包括品牌情感分析、需求预测、产品推荐、个性化护理和欺诈检测等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616263,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 21,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195856,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428578389,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195806,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981287,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 70,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 66,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195806,
        "nodeName": null
      }
    },
    {
      "id": 4195939,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195936,
      "knowledgeGraphId": 29889,
      "nodeName": "数据挖掘与分析",
      "description": "数据挖掘与分析是大数据分析中的核心技术，旨在从大量数据中提取有价值的信息和知识。数据挖掘包括数据预处理、模式识别、分类、聚类、关联规则挖掘等步骤。通过数据预处理，清洗和转换数据，提高数据质量。模式识别和分类技术用于发现数据中的规律和类别，常用算法有决策树、支持向量机等。聚类分析将相似的数据对象分组，揭示数据结构。关联规则挖掘发现数据项之间的关系，优化决策。数据挖掘与分析结合统计学和机器学习方法，提升数据利用价值。",
      "position": 6,
      "labelNameList": null,
      "children": [
        {
          "id": 4195868,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195939,
          "knowledgeGraphId": 29889,
          "nodeName": "数据挖掘算法",
          "description": "数据挖掘算法包括分类（Classification）、聚类（Clustering）、关联分析（Correlation Analysis）和异常检测（Anomaly Detection）等。常见的数据挖掘算法有决策树、支持向量机（SVM）、人工神经网络（ANN）、朴素贝叶斯算法、K近邻算法（KNN）、ID3算法和C4.5算法等。这些算法用于从大量数据中提取有价值的信息和模式。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428122087,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195868,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163603087,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 837,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 65,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195868,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429435544,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195939,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824853,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 837,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 65,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195939,
        "nodeName": null
      }
    },
    {
      "id": 4195769,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195933,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据三层架构",
      "description": "大数据三层架构包括数据存储系统、数据处理系统和数据应用系统。数据存储系统负责数据的收集、建模和存储，包括分布式文件系统和分布式数据库。数据处理系统包括计算引擎、计算平台和计算模型，使用MapReduce、Hadoop、Spark和Storm等技术进行数据处理。数据应用系统基于存储和处理的结果，构建大数据应用、产品和服务，并进行数据可视化。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 2,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428578386,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195769,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733950,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 177,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 78,
        "avgCompletionRate": 19,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195769,
        "nodeName": null
      }
    },
    {
      "id": 4195830,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195933,
      "knowledgeGraphId": 29889,
      "nodeName": "SparkMLlib",
      "description": "Spark MLlib是Apache Spark的可扩展机器学习库，旨在简化机器学习任务的实现，并与其他工具进行无缝集成。它支持多种数据类型和语言（Java、Scala、Python和R），并提供了高效的算法和性能优化。MLlib包括特征提取、特征转换、特征选择、分类、回归、聚类、推荐系统、降维和频繁模式挖掘等多种机器学习算法。通过Spark的可伸缩性和速度，数据科学家可以专注于数据问题和模型，而无需处理分布式数据的复杂性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 2,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428236308,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195830,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850907,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 35,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195830,
        "nodeName": null
      }
    },
    {
      "id": 4195947,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195933,
      "knowledgeGraphId": 29889,
      "nodeName": "TensorFlow",
      "description": "TensorFlow 是由 Google Brain 团队开发的端到端开源机器学习平台，其核心是一个采用数据流图（Data Flow Graphs）形式表述数值计算的高性能框架。",
      "position": 1,
      "labelNameList": ["难点", "重点"],
      "children": [
        {
          "id": 4195816,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195947,
          "knowledgeGraphId": 29889,
          "nodeName": "数据流图",
          "description": "数据流图是TensorFlow的核心概念之一，它描述了数据如何通过图或一系列处理节点移动的结构关系。图中的每个节点表示一个数学运算，节点之间的每个连接或边是一个多维数据数组，称为张量（Tensor）。这种图结构使得TensorFlow能够高效地进行大规模并行计算。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428350567,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195816,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785660,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 79,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195816,
            "nodeName": null
          }
        },
        {
          "id": 4195817,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195947,
          "knowledgeGraphId": 29889,
          "nodeName": "EagerExecution",
          "description": "Eager Execution是TensorFlow 2.0中的一个重要特性，它允许即时执行操作，而不是构建计算图后再执行。这使得调试和原型设计更加直观和方便。Eager Execution通过简化代码结构和提供即时反馈，极大地提高了开发效率。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428921481,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195817,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681791,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 79,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195817,
            "nodeName": null
          }
        },
        {
          "id": 4195818,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195947,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式策略API",
          "description": "分布式策略API是TensorFlow 2.0中的一个功能，旨在简化在不同硬件上进行分布式训练的过程。它支持在多种硬件加速器（如CPU、GPU和TPU）上配置和分发训练任务，甚至可以在多节点的多加速器配置上运行。这使得大规模机器学习任务的训练变得更加高效和灵活。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429836596,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195818,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681792,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 79,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195818,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429321001,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195947,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863972,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 52,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 79,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195947,
        "nodeName": null
      }
    },
    {
      "id": 4195931,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195933,
      "knowledgeGraphId": 29889,
      "nodeName": "推荐系统与社交网络",
      "description": "推荐系统与社交网络：推荐系统通过分析用户的历史行为和物品特征，生成个性化的推荐列表。基于内容的过滤方法通过提取物品特征和用户偏好，进行推荐。社交网络分析利用网络和图论，研究社会结构和关系，常用度量指标包括平均聚类系数、特征向量中心性等。力导向图通过电磁学原理，优化节点和边的布局，帮助理解复杂网络结构。推荐系统和社交网络分析结合，可以更精准地识别用户兴趣和社交关系，提升推荐效果。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195824,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195931,
          "knowledgeGraphId": 29889,
          "nodeName": "社交网络分析",
          "description": "社交网络分析（Social Network Analysis, SNA）是通过使用网络和图论来调查社会结构的过程。它结合了分析社会关系的工具和解释这些社会互动中出现的结构的理论。社交网络分析可以帮助识别本地和全球的模式，定位有影响力的个体，并检查网络的动态。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428749877,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195824,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955183,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 71,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195824,
            "nodeName": null
          }
        },
        {
          "id": 4195943,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195931,
          "knowledgeGraphId": 29889,
          "nodeName": "推荐系统",
          "description": "推荐系统通过分析用户的历史行为和物品特征，生成个性化的推荐列表。主要有基于用户的协同过滤算法、基于物品的协同过滤算法和基于内容的过滤算法。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 5,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429664673,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195943,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981289,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 166,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195943,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149297,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 15,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195931,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163603089,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 237,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 43,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195931,
        "nodeName": null
      }
    },
    {
      "id": 4195914,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195934,
      "knowledgeGraphId": 29889,
      "nodeName": "数据与因果关系",
      "description": "在大数据分析中，数据与因果关系的处理方式发生了显著变化。传统的数据分析方法通常侧重于寻找变量之间的因果关系，以便理解一个变量如何影响另一个变量。然而，在大数据时代，分析的重点转向了数据之间的相关性。计算机能够高效地处理和分析大量数据，发现其中的模式和关联。例如，通过分析零售数据，可以发现某些商品在特定条件下的销售趋势，从而优化库存和销售策略。尽管相关性不等同于因果关系，但它在实际应用中具有重要的指导意义。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195839,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195914,
          "knowledgeGraphId": 29889,
          "nodeName": "全量数据取代样本数据",
          "description": "在大数据分析中，全量数据的使用取代了传统的样本数据。通过手机监测温湿度、定位空间位置、监测大气环境化学和PM2.5功能传感设备，移动监测终端增加了测量的空间覆盖范围，产生了海量的数据。这些数据可以用于分析雾霾的成因，做出预测。全量数据的使用使得分析更加全面和准确。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694765,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 72,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195839,
            "nodeName": null
          }
        },
        {
          "id": 4195840,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195914,
          "knowledgeGraphId": 29889,
          "nodeName": "相关性取代因果关系",
          "description": "在大数据时代，分析的重点从因果关系转向了相关性。计算机擅长处理和分析数据之间的相关性，而不是因果关系。通过分析沃尔玛购物清单中的数据，发现飓风来临时手电筒和蛋挞的销量都会增加，这种相关性分析帮助商家优化商品摆放和销售策略。大数据时代最大的变化是摒弃了对因果关系的渴望，转而关注数据之间的相关性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707868,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195840,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163798800,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 72,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195914,
        "nodeName": null
      }
    },
    {
      "id": 4195915,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195934,
      "knowledgeGraphId": 29889,
      "nodeName": "科学研究范式",
      "description": "科学研究的第四范式是数据密集型范式，它与第三范式的计算模拟不同，第四范式是基于大量已知数据进行分析和总结，产生新的理论。通过处理和分析海量数据，科学家可以发现以前未知的规律和理论。这种方法颠覆了传统的因果关系思维，转而关注数据之间的相关性。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195838,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195915,
          "knowledgeGraphId": 29889,
          "nodeName": "科学研究第四范式",
          "description": "科学研究的第四范式是数据密集型范式，它与第三范式的计算模拟不同，第四范式是基于大量已知数据进行分析和总结，产生新的理论。通过处理和分析海量数据，科学家可以发现以前未知的规律和理论。这种方法颠覆了传统的因果关系思维，转而关注数据之间的相关性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968224,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 67,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195838,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007293,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 67,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195915,
        "nodeName": null
      }
    },
    {
      "id": 4195916,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195934,
      "knowledgeGraphId": 29889,
      "nodeName": "商务智能演变",
      "description": "商务智能的演变可以分为三个阶段：1990年代的商务智能报告、联机分析处理OLAP和数据仓库；2000年代的交互式商务智能和内存数据库RDBMS，以及大数据的批处理和分布式数据存储；2010年代的大数据实时处理和单一视图。每个阶段都有其代表性技术和工具，例如1990年代的Business Objects、SAS、Informatics、Cognos等SQL Reporting Tools，2000年代的QliqView、Tableau、HANA，Hadoop/Spark，HBase/Cassandra，以及2010年代的Graph Databases。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195837,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195916,
          "knowledgeGraphId": 29889,
          "nodeName": "商务智能的演变",
          "description": "商务智能的演变可以分为三个阶段：1990年代的商务智能报告、联机分析处理OLAP和数据仓库；2000年代的交互式商务智能和内存数据库RDBMS，以及大数据的批处理和分布式数据存储；2010年代的大数据实时处理和单一视图。每个阶段都有其代表性技术和工具，例如1990年代的Business Objects、SAS、Informatics、Cognos等SQL Reporting Tools，2000年代的QliqView、Tableau、HANA，Hadoop/Spark，HBase/Cassandra，以及2010年代的Graph Databases。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007291,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 4,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 40,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195837,
            "nodeName": null
          }
        },
        {
          "id": 4195881,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195916,
          "knowledgeGraphId": 29889,
          "nodeName": "BI商务智能报告",
          "description": "BI商务智能报告是指通过对治理后的数据进行分析和展示，生成各种图表和数据指标，以支持企业的决策和运营。报告中需要屏蔽敏感数据，并将治理后的数据迁移到企业数据仓库（EDW）中，以确保数据的安全性和合规性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163746823,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 46,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195881,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163720954,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 9,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 48,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195916,
        "nodeName": null
      }
    },
    {
      "id": 4195917,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195934,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据分析能力",
      "description": "面对大数据时代的发展，每个人都应该学习从大数据角度分析问题，用大数据的方法解决问题。这需要我们具备大数据的能力和素质。大数据分析课程可以帮助大家建立大数据的知识体系，深入理解大数据分析中的概念、原理、平台和技术，通过实验实现大数据理论知识的实际运用，提升解决大数据工程问题的能力。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195762,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195917,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据分析能力的培养",
          "description": "面对大数据时代的发展，每个人都应该学习从大数据角度分析问题，用大数据的方法解决问题。这需要我们具备大数据的能力和素质。大数据分析课程可以帮助大家建立大数据的知识体系，深入理解大数据分析中的概念、原理、平台和技术，通过实验实现大数据理论知识的实际运用，提升解决大数据工程问题的能力。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824844,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 0,
            "nodeId": 4195762,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007294,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 0,
        "nodeId": 4195917,
        "nodeName": null
      }
    },
    {
      "id": 4195920,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195934,
      "knowledgeGraphId": 29889,
      "nodeName": "互联网数据收集",
      "description": "互联网数据包括门户网站、政府公开信息、社交媒体、电子商务、公共数据等。收集互联网数据时需要注意不同网站的结构和水平不同，爬虫策略的差异，以及数据的真实性和质量问题。网络爬虫在收集数据时可能带来服务器带宽消耗、DDoS攻击和数据窃取等负面影响。Web应用防火墙（WAF）提供了反爬虫策略，如识别User Agent、验证浏览器有效性、限制访问频率等，以保护网站免受爬虫攻击。互联网数据形式多样，包括文本、表格、音频、视频等，增加了数据收集的难度。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195724,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195920,
          "knowledgeGraphId": 29889,
          "nodeName": "互联网数据收集与挑战",
          "description": "互联网数据包括门户网站、政府公开信息、社交媒体、电子商务、公共数据等。收集互联网数据时需要注意不同网站的结构和水平不同，爬虫策略的差异，以及数据的真实性和质量问题。网络爬虫在收集数据时可能带来服务器带宽消耗、DDoS攻击和数据窃取等负面影响。Web应用防火墙（WAF）提供了反爬虫策略，如识别User Agent、验证浏览器有效性、限制访问频率等，以保护网站免受爬虫攻击。互联网数据形式多样，包括文本、表格、音频、视频等，增加了数据收集的难度。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850905,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 66,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 0,
            "avgCompletionRate": 0,
            "hasLearnResource": 0,
            "hasQuestion": 1,
            "nodeId": 4195724,
            "nodeName": null
          }
        },
        {
          "id": 4195919,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195920,
          "knowledgeGraphId": 29889,
          "nodeName": "网络爬虫技术",
          "description": "网络爬虫爬取策略包括深度优先、广度优先、部分PageRank策略和OPIC（在线页面重要性计算）。深度优先策略是指爬虫从一个种子URL开始，沿着每个链接深入抓取，直到没有新的链接为止，然后回溯到上一个链接继续抓取。广度优先策略是指爬虫从一个种子URL开始，抓取所有直接链接的页面，然后再抓取这些页面的链接。部分PageRank策略根据页面的重要性来决定抓取顺序，重要性高的页面优先抓取。OPIC策略为每个网页分配相同的“金币”，每当一个页面被下载时，其“金币”会平均分配到该网页中包含的链接页面，待爬队列中的链接按“金币”排序。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163629244,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 54,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195919,
            "nodeName": null
          }
        },
        {
          "id": 4195918,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195920,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式爬虫架构",
          "description": "分布式网络爬虫架构包括主从架构（Master-Slave）、对等架构（Peer-to-Peer）和混合架构（Mix）。主从架构中，Master节点负责任务分配和协调，Slave节点负责具体的爬取任务，扩展时只需更新Master节点，但Master节点压力大，易造成瓶颈。对等架构中，所有节点之间进行通信，扩展时需更新所有节点，没有Master节点，不会出现单点热点，Slave节点数量限制小。混合架构中，Master节点之间进行通信，Slave节点数量限制小，但实现难度较大。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 3,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431425638,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195918,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163994363,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 80,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 58,
            "avgCompletionRate": 17,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195918,
            "nodeName": null
          }
        }
      ],
      "level": 2,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431662093,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195920,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915907,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 62,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 81,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 68,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195920,
        "nodeName": null
      }
    },
    {
      "id": 4195763,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195926,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据生命周期",
      "description": "大数据生命周期包括四个阶段：收集、存储、分析和治理。收集阶段是关键步骤，定义了数据类型并通过自动化工具进行数据捕捉。存储阶段将数据统一放置在存储平台中，使用ETL工具进行处理。分析阶段通过各种分析引擎对数据进行处理，包括实时数据分析。治理阶段确保数据的合规性、隐私性和安全性，制定治理策略以避免错误信息对业务的损害。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428921480,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195763,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929024,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 374,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 169,
        "avgCompletionRate": 22,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195763,
        "nodeName": null
      }
    },
    {
      "id": 4195836,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195926,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据驱动因素",
      "description": "大数据驱动因素包括优化和预测分析、复杂的统计分析、所有类型的数据和多数据源数据、超大数据集以及更加具有实时性。图像展示了复杂度（COMPLEXITY）与业务价值（BUSINESS VALUE）的关系曲线，显示了从低复杂度到高复杂度，业务价值逐渐增加的趋势。曲线分为两个部分：Business Intelligence（商业智能）和Predictive Analytics and Data Mining（预测分析和数据挖掘）。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850908,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 4,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 40,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195836,
        "nodeName": null
      }
    },
    {
      "id": 4195764,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195926,
      "knowledgeGraphId": 29889,
      "nodeName": "DIKW金字塔模型",
      "description": "DIKW金字塔模型是大数据生命周期中的一个重要概念，代表数据（Data）、信息（Information）、知识（Knowledge）和智慧（Wisdom）的层次关系。数据是个别事实、图表、信号和测量指标值；信息是有组织、结构化、分类、有用、浓缩和计算的数据；知识是想法、学习、观念、概念、综合、比较、深思熟虑和讨论；智慧是理解、整合、应用、反思、可操作、积累、原则、模式和决策的过程。通过上下文（context）、意义（meaning）和洞察力（insight）的转换，数据逐步转化为智慧。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616258,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 86,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 4,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 40,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195764,
        "nodeName": null
      }
    },
    {
      "id": 4195765,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195926,
      "knowledgeGraphId": 29889,
      "nodeName": "商务智能的发展过程",
      "description": "商务智能的发展经历了三个阶段：第一阶段是1968年发明的分层数据库和1970年发明的关系型数据库，主要进行在线业务处理（OLTP）；第二阶段是数据仓库的出现，支持在线分析处理（OLAP），整合组织信息以改善业务交易；第三阶段是流计算技术的创建，支持实时分析处理（RTAP），进行实时决策和业务响应。随着数据规模和速度的增加，商务智能技术不断进步，推动大数据技术的发展。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429549918,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195765,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863968,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 193,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 79,
        "avgCompletionRate": 22,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195765,
        "nodeName": null
      }
    },
    {
      "id": 4195741,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的概念",
      "description": "大数据是指传统数据应用处理程序无法处理的庞大而且复杂的数据。大数据不仅仅是数据量的增加，更重要的是其复杂性和多样性。它可以定义为来自不同来源的大量非结构化和结构化数据。大数据的出现导致了对许多问题的创新性研究方法，并推动了各种统计方法的发展。大数据没有统计抽样的方法，而是通过记录数据来观察和跟踪发现正在发生的事情。大数据的规模往往超过传统软件可接受时间内能够处理的能力。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195869,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195741,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据定义、特征、生命周期等",
          "description": "大数据基本概念包括对大数据的定义、特征、生命周期和处理流程的理解。大数据通常指的是体量巨大、类型多样、处理速度快的数据集合。其特征包括数据量大（Volume）、数据类型多样（Variety）、数据处理速度快（Velocity）和数据价值密度低（Value）。大数据的生命周期涵盖数据的生成、采集、存储、处理、分析和应用等多个阶段。大数据处理流程则包括数据获取、数据预处理、数据存储、数据处理和数据分析等步骤。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707869,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 18,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 76,
            "avgCompletionRate": 16,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195869,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431484905,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 49,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195741,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163772705,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 80,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 344,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 228,
        "avgCompletionRate": 23,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195741,
        "nodeName": null
      }
    },
    {
      "id": 4195760,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的渗透与影响",
      "description": "麦肯锡指出，数据已经渗透到当今每一个行业和业务领域，成为重要的生产因素。大数据在物理学、生物学、环境生态学等领域以及军事、金融和通信等行业存在已有时日，近年来因互联网和信息行业的发展而引起关注。大数据的广泛应用预示着新一波生产率的增长和消费者盈余浪潮的到来。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163655499,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 0,
        "nodeId": 4195760,
        "nodeName": null
      }
    },
    {
      "id": 4195761,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的量化进程",
      "description": "哈佛大学社会学教授加里金认为，大数据是一场革命，庞大的数据资源使得各个领域开始了量化的进程。无论是学术界、商界还是政府，所有领域都在进行这种量化进程。大数据的量化进程使得各个领域能够更精确地分析和解决问题。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642424,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 0,
        "nodeId": 4195761,
        "nodeName": null
      }
    },
    {
      "id": 4195770,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "数据的价值与原油的类比",
      "description": "数据被比作原油，因为原始数据通常不能直接使用，必须经过加工处理才能应用。大量数据中蕴含着洞察力，但不容易找到，科学家需要分析数据并找到其背后的模式。一个数据集可以适用于多种不同的产品和目的，类似于原油可以精炼成不同的产品。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 430540863,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 44,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195770,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694764,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 89,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 145,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 151,
        "avgCompletionRate": 31,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195770,
        "nodeName": null
      }
    },
    {
      "id": 4195771,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的产生阶段",
      "description": "大数据的产生经历了几个阶段：1. 交易系统阶段，业务活动产生交易数据；2. 用户生成内容阶段，社交媒体和移动设备的发展使普通人可以发布内容；3. 感知阶段，具有处理能力的传感器不断生成数据。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 436864407,
        "gmtCreate": 1760926533000,
        "gmtModified": 1760926533000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 50,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195771,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163942106,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 240,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 175,
        "avgCompletionRate": 26,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195771,
        "nodeName": null
      }
    },
    {
      "id": 4195787,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "传统数据库与大数据的区别",
      "description": "传统数据库的数据规模一般是兆字节级别，数据类型较为单一，具有预定义的模式，使用一种工具即可解决所有问题。而大数据的规模可能达到GB、TB、PB级别，数据类型多样，包括结构化、半结构化和非结构化数据。大数据没有预定义的模式，需要通过数据去感知其他数据，并且需要不同的工具来解决不同的问题。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429435532,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 14,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195787,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824846,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 75,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 157,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 117,
        "avgCompletionRate": 26,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195787,
        "nodeName": null
      }
    },
    {
      "id": 4195835,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195927,
      "knowledgeGraphId": 29889,
      "nodeName": "IT的发展历程",
      "description": "IT的发展历程可以分为几个阶段：PC时代、互联网时代、移动互联网时代、大数据时代和人工智能时代。PC时代是信息时代的开始，互联网时代将IT和互联网结合，移动互联网时代引入了移动设备和互联网+的概念。大数据时代使得决策更加依赖数据分析，而人工智能时代则是继互联网之后的第二次科技生态萌芽。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 436115371,
        "gmtCreate": 1760926533000,
        "gmtModified": 1760926533000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 6,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195835,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163772706,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 92,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195835,
        "nodeName": null
      }
    },
    {
      "id": 4195899,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195928,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据类型",
      "description": "大数据的种类指的是数据的多样性，主要包括结构化数据、半结构化数据和非结构化数据。结构化数据是指具有固定格式和长度的数据，如关系数据库中的表格数据。半结构化数据则是指不完全符合关系模型的数据，如XML和JSON。非结构化数据则是指没有固定格式的数据，如文本、图像、视频等。理解和处理这些不同类型的数据是大数据分析中的重要环节，因为它们需要不同的技术和方法来进行存储、处理和分析。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195821,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195899,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的种类",
          "description": "大数据的种类指的是数据的多样性，包括结构化数据、半结构化数据和非结构化数据。结构化数据如关系数据，半结构化数据如XML，非结构化数据如文本数据、图表数据等。单个应用程序可以生成和收集多种类型的数据，这些数据需要链接在一起以提取有价值的知识。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902876,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 47,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195821,
            "nodeName": null
          }
        },
        {
          "id": 4195855,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195899,
          "knowledgeGraphId": 29889,
          "nodeName": "数据类型比例",
          "description": "根据Gartner的统计，企业数据中80%是非结构化数据，20%是结构化数据。非结构化数据包括网站信息、技术白皮书、电子邮件、会议纪要等，而结构化数据则包括ID、Forename、Surname、Age等字段的表格数据。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824849,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 14,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 54,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195855,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668732,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 17,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 59,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195899,
        "nodeName": null
      }
    },
    {
      "id": 4195900,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195928,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据特征",
      "description": "大数据具有五个主要特征：规模（Volume）、速度（Velocity）、种类（Variety）、真伪（Veracity）和价值（Value）。规模指数据量庞大，呈指数级增长。速度指数据生成和处理的快速性，实时处理变得重要。种类指数据多样性，包括结构化和非结构化数据。真伪指数据的准确性和可信度，需要过滤无用信息。价值指从数据中提取的潜在价值，数据必须可靠、有用，才能支持分析和决策。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195889,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195900,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的规模与速度",
          "description": "大数据的规模与速度是大数据分析中的两个关键因素。大数据的规模指的是数据量的巨大增长，从2009年的0.8 ZB到2020年的35.2 ZB，增长了44倍，预计到2025年将达到175 ZB。这种指数级增长对数据存储和处理提出了巨大挑战。大数据的速度指的是数据生成和处理的速度，随着数据生成速度的加快，实时数据分析变得越来越重要，例如电子促销和健康检测需要快速处理和反应，以便及时做出决策。数据的快速生成和处理能力是大数据分析中的关键因素。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642429,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 89,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 47,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195889,
            "nodeName": null
          }
        },
        {
          "id": 4195890,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195900,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的五大特征",
          "description": "大数据具有五个主要特征：规模（Volume）、速度（Velocity）、种类（Variety）、真伪（Veracity）和价值（Value）。规模指的是数据的庞大数量，随着时间的推移，数据量呈指数级增长。速度指的是数据生成和处理的速度，实时数据处理和分析变得至关重要。种类指的是数据的多样性，包括结构化和非结构化数据。真伪指的是数据的准确性和可信度，需要过滤和处理不必要的信息。价值指的是从数据中提取的潜在价值，数据必须是可靠的、有用的，才能支持数据分析和处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 7,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431366376,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 75,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195890,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785663,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 82,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 421,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 175,
            "avgCompletionRate": 20,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195890,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429951554,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 75,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195900,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163720953,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 83,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 424,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 183,
        "avgCompletionRate": 18,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195900,
        "nodeName": null
      }
    },
    {
      "id": 4195716,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195929,
      "knowledgeGraphId": 29889,
      "nodeName": "第四研究范式",
      "description": "第四研究范式是指基于大数据的科学研究方法。与传统的实验归纳、模型推演和计算机模拟不同，第四范式强调先拥有大量的数据，然后通过计算和分析得出新的结论。这种方法不再依赖于先提出假设再验证，而是通过数据本身揭示潜在的规律和关系。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195717,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195716,
          "knowledgeGraphId": 29889,
          "nodeName": "数据密集型科学发现",
          "description": "数据密集型科学发现是第四研究范式的核心理念。它强调利用大量的数据进行分析和总结，从而得出科学结论。这种方法不同于传统的科学研究范式，它不再依赖于简化模型和假设，而是通过全面的数据分析揭示复杂现象的本质。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429549915,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195717,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163850904,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 78,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 167,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 91,
            "avgCompletionRate": 25,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195717,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428978156,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195716,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759925,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 63,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 167,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 91,
        "avgCompletionRate": 25,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195716,
        "nodeName": null
      }
    },
    {
      "id": 4195878,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195929,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据计算系统的三个基本层次",
      "description": "大数据计算系统通常分为三个基本层次：数据存储系统、数据处理系统和数据应用系统。数据存储系统包括分布式数据库、数据仓库和分布式文件系统，负责数据的收集、清洗、存储和建模。数据处理系统包括算法、计算模型和计算平台，负责数据的分析和处理。数据应用系统包括大数据应用、数据产品和数据服务，负责将分析结果应用于实际业务场景，并提供数据可视化和服务。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902879,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 83,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 30,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195878,
        "nodeName": null
      }
    },
    {
      "id": 4195784,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195945,
      "knowledgeGraphId": 29889,
      "nodeName": "结构化数据",
      "description": "结构化数据是指以预定义的格式组织的数据，通常以行和列的形式存储在关系数据库中。数据类型可以是数字、日期和字符串等。结构化数据需要更少的存储空间，并且使用传统的解决方案更容易管理和保护这些数据。由于其固定的格式，处理起来相对简单。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428179358,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 14,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195784,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707864,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 82,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 157,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 117,
        "avgCompletionRate": 26,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195784,
        "nodeName": null
      }
    },
    {
      "id": 4195785,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195945,
      "knowledgeGraphId": 29889,
      "nodeName": "非结构化数据",
      "description": "非结构化数据是指没有统一格式的数据，通常存储在图像、音频、视频、文字处理文件、电子邮件、电子表格等形式中。非结构化数据占企业数据的80%，需要更多的存储空间，且难以用传统的方式进行管理和保护。处理非结构化数据需要更多的工具和方法，因为它们缺乏标准化和预设的边界。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428122085,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 14,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195785,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837889,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 85,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 157,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 117,
        "avgCompletionRate": 26,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195785,
        "nodeName": null
      }
    },
    {
      "id": 4195786,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195945,
      "knowledgeGraphId": 29889,
      "nodeName": "半结构化数据和准结构化数据",
      "description": "半结构化数据是指不完全遵循数据模型的数据，例如XML文件、CSV文件等，这些数据具有一定的模式，可以进行分析。准结构化数据则是格式不太稳定的数据，例如点击流数据，通过一定的处理可以被格式化。半结构化和准结构化数据介于结构化和非结构化数据之间，具有一定的灵活性。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429035292,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 14,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195786,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163994360,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 78,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 157,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 117,
        "avgCompletionRate": 26,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195786,
        "nodeName": null
      }
    },
    {
      "id": 4195723,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195945,
      "knowledgeGraphId": 29889,
      "nodeName": "内部数据与外部数据",
      "description": "内部数据是指组织创建并存储在组织内部的所有数据，包括自营系统、业务交易系统、制造系统、财务系统、人力资源系统、会计系统等。这些系统记录的都是结构化的数据，还包括一些历史遗留的数据，如文档数据、电子邮件等，以及内部物联网设备产生的数据。外部数据是指特定组织以外的数据，包括其他组织的业务系统数据、物联网设备数据、政府公开数据、互联网数据等。内部数据和外部数据的获取方法和工具不同，内部数据主要通过组织内部的系统收集，而外部数据则通过互联网、政府公开信息等渠道获取。",
      "position": 3,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785655,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 78,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 1,
        "nodeId": 4195723,
        "nodeName": null
      }
    },
    {
      "id": 4195775,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195921,
      "knowledgeGraphId": 29889,
      "nodeName": "深层网络(DeepWeb)",
      "description": "深层网络是指那些信息内容存储在搜索数据库中，并且只响应直接查询的网站。深层网络的内容主要是结构化的数据库信息，包括学术记录、财务记录、法律文件、政府记录和科学报告等。深层网络的信息与信息需求、市场和领域高度相关，且增长速度快，内容专业深入。深层网络的全部价值是表面网的1000到2000倍，且95%的信息是无需付费就可以获取到的。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195777,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195775,
          "knowledgeGraphId": 29889,
          "nodeName": "深网数据采集",
          "description": "深网数据采集包括两个阶段：查询接口的识别和自动填写表格执行查询。首先需要识别深网对外公布的接口，然后通过自动填写表格获取数据。对于特定网站，可以手动编写或提供爬虫脚本获取数据，但这种方法扩展性较差。构建通用的深网爬虫需要特殊设计，包括查询界面的识别、HTML表单解析、自动发现深网数据资源、表单自动填充、页面分类器和表单分类器的构建等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428978160,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195777,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733951,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 84,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 15,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195777,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428521566,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195775,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811895,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 84,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 15,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195775,
        "nodeName": null
      }
    },
    {
      "id": 4195776,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195921,
      "knowledgeGraphId": 29889,
      "nodeName": "暗网(DarkWeb)",
      "description": "暗网是互联网的最底层部分，通常包含非法信息，如毒品和武器交易信息。暗网中还有T.O.R项目（The Onion Router），用户可以通过T.O.R在互联网上进行匿名通信。T.O.R项目由美国海军研究实验室赞助，旨在隐藏政府人员在网上收集信息情报的行踪。T.O.R通过多台计算机发送信息，每一步都进行加密，无法知道用户的位置和信息传输的目的地。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429721984,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195776,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007289,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 70,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 84,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 15,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195776,
        "nodeName": null
      }
    },
    {
      "id": 4195885,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195921,
      "knowledgeGraphId": 29889,
      "nodeName": "PageRank与OPIC策略",
      "description": "PageRank策略通过计算网页之间的链接关系来评估网页的重要性，链接数量多但质量低的网页不如链接数量少但质量高的网页重要。OPIC策略为每个网页分配相同的“金币”，每当一个页面被下载时，其“金币”会平均分配到该网页中包含的链接页面，待爬队列中的链接按“金币”排序。PageRank策略计算复杂度较高，而OPIC策略计算速度较快。",
      "position": 1,
      "labelNameList": ["难点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915906,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 67,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195885,
        "nodeName": null
      }
    },
    {
      "id": 4195712,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195921,
      "knowledgeGraphId": 29889,
      "nodeName": "ETL(Extract,Transform,Load)",
      "description": "ETL是数据处理中的一种重要工具，主要用于数据的提取、转换和加载。其目的是整合所有相关的企业数据，以进行分析和处理，获取完整的数据全貌。ETL工具可以处理结构化数据和非结构化数据，将其加载到数据仓库或大数据集群中。提取是从数据源中获取数据，转换是将不同格式的原始数据转换为统一的标准格式，加载是将转换后的数据存储到目标数据库中。ETL过程可以手动完成，也可以使用软件工具自动化完成。",
      "position": 2,
      "labelNameList": ["重点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431780316,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195712,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915902,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 67,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 125,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 67,
        "avgCompletionRate": 15,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195712,
        "nodeName": null
      }
    },
    {
      "id": 4195773,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195921,
      "knowledgeGraphId": 29889,
      "nodeName": "数据源选择与数据收集",
      "description": "在大数据分析的初始阶段，首先需要根据分析需求选择合适的数据源，这些数据源可以是结构化数据、半结构化数据或非结构化数据。选定数据源后，使用ETL工具（Extract, Transform, Load）或数据爬虫从不同的数据库或数据仓库中提取数据。",
      "position": 4,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206472,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195773,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681789,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 72,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 106,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 76,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195773,
        "nodeName": null
      }
    },
    {
      "id": 4195911,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195921,
      "knowledgeGraphId": 29889,
      "nodeName": "数据提取方法",
      "description": "数据提取方法是大数据分析中的关键步骤，主要包括全量提取和增量提取。全量提取是指每次从数据源中提取所有数据，适用于数据量较小或首次数据加载的情况。增量提取则是每次仅提取自上次提取以来新增或修改的记录，常见方法有日志对比、时间戳、触发器和全表对比。日志对比通过数据库日志评估变化的数据；时间戳通过比较系统时间和时间戳值捕捉变化的数据；触发器在数据表上创建触发器捕捉变化；全表对比通过对比源表和MD5临时表识别变化的数据。",
      "position": 5,
      "labelNameList": null,
      "children": [
        {
          "id": 4195707,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195911,
          "knowledgeGraphId": 29889,
          "nodeName": "增量数据提取",
          "description": "增量数据提取是一种数据抽取方法，每次仅提取自上次提取以来在原数据库中新增或修改的记录。常见的增量数据提取方法包括日志对比、时间戳、触发器和全表对比。增量提取的优点是减少了数据冗余，降低了对业务系统的影响。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431307445,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195707,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707862,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 69,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 175,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 77,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195707,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 430128087,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195911,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163629243,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 69,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 175,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 77,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195911,
        "nodeName": null
      }
    },
    {
      "id": 4195903,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195930,
      "knowledgeGraphId": 29889,
      "nodeName": "数据管理过程",
      "description": "数据管理的过程包括对数据进行发现和画像、用元数据来管理和丰富数据集以及为业务分析解析和准备数据。通过这些步骤，可以确保数据的质量和可用性，为后续的商务智能报告和数据分析提供可靠的数据基础。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195880,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195903,
          "knowledgeGraphId": 29889,
          "nodeName": "数据管理的过程",
          "description": "数据管理的过程包括对数据进行发现和画像、用元数据来管理和丰富数据集以及为业务分析解析和准备数据。通过这些步骤，可以确保数据的质量和可用性，为后续的商务智能报告和数据分析提供可靠的数据基础。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837891,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 46,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195880,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850910,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 46,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195903,
        "nodeName": null
      }
    },
    {
      "id": 4195904,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195930,
      "knowledgeGraphId": 29889,
      "nodeName": "数据规约与压缩",
      "description": "数据规约与压缩是通过技术手段减少数据集的规模，同时保持数据集的完整性和分析结果的质量。数据规约包括降维和数据量减少，降维方法有属性子集选择、主成分分析和小波变换；数据量减少方法有数据立方体聚合、聚类、抽样和直方图等。数据压缩通过数据编码或变换实现，包括无损压缩和有损压缩，主成分分析（PCA）是一种常用的数据压缩方法。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [
        {
          "id": 4195749,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195904,
          "knowledgeGraphId": 29889,
          "nodeName": "数据规约",
          "description": "数据规约是指通过技术手段减少数据集的规模，同时保持数据集的完整性和分析结果的质量。数据规约的目的是提高数据分析的效率，减少处理时间。常见的数据规约技术包括降维和数据量减少。降维方法有属性子集选择、主成分分析和小波变换；数据量减少方法有无参数和有参数的约减方法，如数据立方体聚合、聚类、抽样和直方图等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428635514,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195749,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968222,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 82,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195749,
            "nodeName": null
          }
        },
        {
          "id": 4195750,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195904,
          "knowledgeGraphId": 29889,
          "nodeName": "属性子集选择",
          "description": "属性子集选择是数据归约的一种方法，通过选择相关属性子集来减少数据维度。常用的方法包括向前选择法、向后选择法和逐步向后删除法。向前选择法从一个空属性集开始，每次从原来属性集合中选择一个当前最优的属性添加到当前属性子集中，直到满足一定的约束为止。向后选择法从包含所有变量的模型开始，每次去掉最没有意义的变量，直到到达终止条件或者没有可剔除的变量为止。逐步向后删除法从一个全属性集开始，每次从当前属性子集中选择一个当前最差的属性并将其消去，直到无法选择出最差属性为止或满足一定阈值约束为止。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694763,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 31,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195750,
            "nodeName": null
          }
        },
        {
          "id": 4195751,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195904,
          "knowledgeGraphId": 29889,
          "nodeName": "数据压缩",
          "description": "数据压缩是数据归约的一种技术，通过数据编码或者变换，得到原始数据的压缩表示。数据压缩技术包括无损压缩和有损压缩。无损压缩可以不丢失任何信息地还原压缩数据，例如字符串压缩。有损压缩只能重新构造原数据的近似表示，例如音频/视频压缩。主成分分析（PCA）是一种常用的数据压缩方法，通过将数据从多维空间投影到低维空间，实现数据压缩。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902874,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 31,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195751,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428179364,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195904,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811901,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 152,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195904,
        "nodeName": null
      }
    },
    {
      "id": 4195905,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195930,
      "knowledgeGraphId": 29889,
      "nodeName": "多数据源数据质量",
      "description": "多数据源的数据质量问题主要包括命名冲突、结构冲突和数据内容冲突。命名冲突是指不同数据对象采用相同的名字或同一数据对象采用不同的名字。结构冲突是指不同数据源中同一数据对象的表示方式不同，例如日期格式的不同（dd/mm/yyyy、yyyy/mm/dd、mm/dd/yyyy），以及不同数据集中同一对象的属性粒度、组成结构、数据类型和完整性约束的不同。数据内容冲突包括记录重复、记录冲突以及不同数据源之间的数据值表示不同等问题。这些问题需要通过数据集成和数据清洗来解决。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195718,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195905,
          "knowledgeGraphId": 29889,
          "nodeName": "多数据源数据质量",
          "description": "多数据源的数据质量问题主要包括命名冲突、结构冲突和数据内容冲突。命名冲突是指不同数据对象采用相同的名字或同一数据对象采用不同的名字。结构冲突是指不同数据源中同一数据对象的表示方式不同，例如日期格式的不同（dd/mm/yyyy、yyyy/mm/dd、mm/dd/yyyy），以及不同数据集中同一对象的属性粒度、组成结构、数据类型和完整性约束的不同。数据内容冲突包括记录重复、记录冲突以及不同数据源之间的数据值表示不同等问题。这些问题需要通过数据集成和数据清洗来解决。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149283,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195718,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694762,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 47,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 69,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 70,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195718,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429092269,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195905,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163746824,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 47,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 69,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 70,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195905,
        "nodeName": null
      }
    },
    {
      "id": 4195906,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195930,
      "knowledgeGraphId": 29889,
      "nodeName": "单数据源数据质量",
      "description": "单数据源的数据质量问题包括模型层面和实例层面的问题。模型层面的问题依赖于设计模型对数据完整性的约束，例如日期格式的统一性。实例层面的问题包括数据输入错误、属性值错误、属性之间的不一致以及记录之间的不一致等。这些问题需要通过数据清洗来解决。数据库的完整性约束决定了哪些数据值是可以被接受的，例如日期格式的统一性。实例层面的数据质量问题是模式设计层面无法避免的，例如数据输入的错误、拼写错误、冗余和重复记录、属性值冲突等。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195715,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195906,
          "knowledgeGraphId": 29889,
          "nodeName": "单数据源的数据质量问题",
          "description": "单数据源的数据质量问题包括模型层面和实力层面的问题。模型层面的问题依赖于设计模型对数据完整性的约束，例如日期格式的统一性。实力层面的问题包括数据输入错误、属性值错误、属性之间的不一致以及记录之间的不一致等。这些问题需要通过数据清洗来解决。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206467,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195715,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876922,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 67,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 14,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195715,
            "nodeName": null
          }
        },
        {
          "id": 4195844,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195906,
          "knowledgeGraphId": 29889,
          "nodeName": "单一数据源模型层数据质量问题",
          "description": "单一数据源模型层的数据质量问题主要依赖于设计模式对数据的完整性约束。数据库的完整性约束决定了哪些数据值是可以被接受的。例如，表示日期的数据需要约束日期的格式和类型，确保数据库中所有日期数据的格式统一，如dd/mm/yyyy、yyyy/mm/dd、mm/dd/yyyy。然而，对于文件和web数据这些没有统一约束的数据源来说，数据值错误和不一致的可能性大大增加。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824847,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 36,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 2,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195844,
            "nodeName": null
          }
        },
        {
          "id": 4195845,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195906,
          "knowledgeGraphId": 29889,
          "nodeName": "单一数据源实例层数据质量问题",
          "description": "单一数据源实例层的数据质量问题是模式设计层面无法避免的，例如数据输入的错误等。实例层面的数据质量问题包括拼写错误、冗余和重复记录、属性值冲突等。例如，在一个数据表中，同一个日期可能会以不同的格式出现（如19/05/1974、05/19/1974），这会导致数据的不一致和错误。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824848,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 34,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 2,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195845,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428464543,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195906,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163889961,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 43,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 69,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 70,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195906,
        "nodeName": null
      }
    },
    {
      "id": 4195907,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195930,
      "knowledgeGraphId": 29889,
      "nodeName": "数据质量问题分类",
      "description": "数据质量问题可以按照数据源的数量和数据问题出现的阶段进行分类。按照数据源的数量，可以分为单数据源和多数据源。按照数据问题出现的阶段，可以分为模型层面和实力层面。模型层面的问题可以通过改善模型设计、模型转换和模型集成来解决，而实力层面的问题则需要在数据清洗过程中解决。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195714,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195907,
          "knowledgeGraphId": 29889,
          "nodeName": "数据质量问题分类",
          "description": "数据质量问题可以按照数据源的数量和数据问题出现的阶段进行分类。按照数据源的数量，可以分为单数据源和多数据源。按照数据问题出现的阶段，可以分为模型层面和实力层面。模型层面的问题可以通过改善模型设计、模型转换和模型集成来解决，而实力层面的问题则需要在数据清洗过程中解决。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429607269,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195714,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785654,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 18,
            "avgLearnedTimeCount": 67,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 60,
            "avgCompletionRate": 14,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195714,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428521574,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195907,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785664,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 67,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 14,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195907,
        "nodeName": null
      }
    },
    {
      "id": 4195870,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195901,
      "knowledgeGraphId": 29889,
      "nodeName": "数据预处理",
      "description": "数据预处理是大数据分析中的重要步骤，旨在提高数据质量和分析效率。数据预处理包括数据清洗、数据转换和数据归约等过程。数据清洗是指去除数据中的噪声和错误，填补缺失值，确保数据的准确性和一致性。数据转换是将数据转换为适合分析的格式，包括数据标准化、归一化等。数据归约则是通过数据压缩和特征选择等方法减少数据的维度和规模，从而提高数据处理的效率。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195772,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195870,
          "knowledgeGraphId": 29889,
          "nodeName": "数据存储与数据清洗",
          "description": "在获取数据后，需要对数据进行转换以便于进一步存储和处理。由于大数据的性质，通常需要分布式的数据存储解决方案。接下来，数据科学家需要清理数据，删除错误数据、冗余数据和其他脏数据，以确保数据质量。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429607272,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195772,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824845,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 106,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 76,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195772,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428521572,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195870,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955186,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 124,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 121,
        "avgCompletionRate": 19,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195870,
        "nodeName": null
      }
    },
    {
      "id": 4195902,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195901,
      "knowledgeGraphId": 29889,
      "nodeName": "数据清洗",
      "description": "数据清洗是大数据分析中的关键步骤，旨在提高数据质量。主要包括处理缺失值、重复记录和噪声数据。缺失值可能由于设备异常、没有输入或忽略等原因产生，清洗方法有使用默认值、属性平均值或相似样本的平均值等。重复记录通常由于多数据源集成或重复输入产生，其清洗通过删除完全重复的记录或增加冗余属性来标识不同的重复记录。噪声数据可能由于随机错误或偏差产生，其清洗则通过分箱、聚类和回归算法来处理异常数据。这些方法确保数据的完整性和准确性，从而提高数据分析的可靠性。",
      "position": 1,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195791,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195902,
          "knowledgeGraphId": 29889,
          "nodeName": "缺失值处理",
          "description": "缺失值处理是指在数据集中处理缺失数据的过程。缺失值可能由于设备异常或数据输入时被忽略而产生。处理缺失值的方法包括忽略记录、使用默认值、使用属性的平均值、使用相似样本的平均值或预测缺失值的最可能值。通过这些方法，可以确保数据的完整性，从而不影响后续的数据分析。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428350565,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195791,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163994361,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 85,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 62,
            "avgCompletionRate": 13,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195791,
            "nodeName": null
          }
        },
        {
          "id": 4195792,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195902,
          "knowledgeGraphId": 29889,
          "nodeName": "重复记录清洗",
          "description": "重复记录清洗是指在数据集中去除重复记录的过程。重复记录可能由于整合多个数据源或数据输入时的重复输入而产生。处理重复记录的方法包括删除完全重复的记录、增加冗余属性来标识不同的重复记录，并通过比较相关属性的相似度来判断记录是否重复。清洗重复记录可以提高数据分析的精度和速度。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429664665,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195792,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876925,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 67,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 85,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 62,
            "avgCompletionRate": 13,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195792,
            "nodeName": null
          }
        },
        {
          "id": 4195793,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195902,
          "knowledgeGraphId": 29889,
          "nodeName": "噪声数据清洗",
          "description": "噪声数据清洗是指在数据集中剔除由随机错误或偏差引起的孤立数据的过程。噪声数据会影响数据分析的结果。处理噪声数据的方法包括分箱算法、聚类算法和回归算法。分箱算法通过将数据分割成多个箱子并对每个箱子内的数据进行平滑处理；聚类算法通过将相似的数据对象分组并剔除不在类范围内的异常值；回归算法通过拟合函数对数据进行平滑处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428179359,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195793,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616260,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 155,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 73,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195793,
            "nodeName": null
          }
        },
        {
          "id": 4195849,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195902,
          "knowledgeGraphId": 29889,
          "nodeName": "数据清洗和建模",
          "description": "数据清洗和建模是大数据分析中的关键步骤。数据清洗包括从多个数据源中提取数据，处理缺失记录、缺失值范围和不同级别的数据质量问题，通过合并或删除重复数据项来消除数据错误。数据建模则是为实体建立一个抽象的模型，定义数据属性和取值范围，确保数据的一致性和时效性。数据清洗和建模可以手动完成，也可以使用软件工具完成。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007292,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 25,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195849,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429263838,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195902,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707870,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 59,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 180,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 76,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195902,
        "nodeName": null
      }
    },
    {
      "id": 4195713,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195901,
      "knowledgeGraphId": 29889,
      "nodeName": "数据转换",
      "description": "数据转换是指为了便于高效的分析，将数据从一种形式转换为另一种形式。数据转换可以包括以下几种技术：1. 平滑方法，如分箱、聚类、回归，用于消除噪声或离散化连续数据；2. 数据汇总，通过构造数据立方体实现按地区、时间等维度的汇总；3. 数据泛化，用更高级的抽象概念取代低层次的抽象概念，例如将街道泛化为城市、国家，将年龄泛化为青年、中年、老年；4. 数据规范化，将数据按比例缩放到特定区域内，消除数值型属性因大小不一造成的偏差；5. 属性构建，利用已知属性集构造新的属性集，例如将宽和高构造为面积属性。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206466,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195713,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163629241,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 62,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 50,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 50,
        "avgCompletionRate": 13,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195713,
        "nodeName": null
      }
    },
    {
      "id": 4195709,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195901,
      "knowledgeGraphId": 29889,
      "nodeName": "数据集成",
      "description": "数据集成是将多个数据源中的数据整合到一个一致的数据存储当中。在整合之后可能需要做的工作包括模式匹配、删除冗余数据、解决数据值的冲突问题。模式匹配是指将来自不同数据源的原数据映射到同一个目标对象上，例如将不同表中同样的客户ID映射为同一个字段。删除冗余数据是指去除重复的属性或字段，例如根据月收入属性计算平均月收入属性，从而不再存储平均月收入属性。解决数据值的冲突是指统一不同数据源中表示差异的属性值，例如统一不同计量单位的重量或货币。",
      "position": 3,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428293241,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195709,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915901,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 73,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 50,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 50,
        "avgCompletionRate": 13,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195709,
        "nodeName": null
      }
    },
    {
      "id": 4195736,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195893,
      "knowledgeGraphId": 29889,
      "nodeName": "数据访问层",
      "description": "数据访问层（Data Access Layer，DAL）是位于数据库之上的软件层，主要功能是实现应用程序中的数据持久化存储和数据交换。它提供对数据库的基本操作支持，包括创建、检索、更新和删除（CRUD）操作，并且支持事务管理、并发处理和异构数据库转换等复杂功能。数据访问层通过数据存取对象（DAO）和基于对象关系映射（ORM）等方式实现，解决了分布式计算环境下应用程序对数据库的访问和数据交换问题。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428122082,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195736,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955179,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 17,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 225,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 80,
        "avgCompletionRate": 16,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195736,
        "nodeName": null
      }
    },
    {
      "id": 4195767,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195893,
      "knowledgeGraphId": 29889,
      "nodeName": "数据建模",
      "description": "数据建模是数据存储系统中的一个重要环节，涉及对实体数据或用户对数据功能的描述，建立抽象模型，包括元数据、数据结构、属性、值域、关联关系、一致性和时效性等元素。数据建模分为概念模型、逻辑模型和物理模型三个层次，分别描述数据的语义、逻辑结构和物理存储实现。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429320993,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195767,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616259,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 46,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 116,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 53,
        "avgCompletionRate": 13,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195767,
        "nodeName": null
      }
    },
    {
      "id": 4195841,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195893,
      "knowledgeGraphId": 29889,
      "nodeName": "ACID与BASE模型",
      "description": "ACID和BASE是两种不同的数据库事务模型。ACID模型强调事务的原子性、一致性、隔离性和持久性，适用于传统关系型数据库。而BASE模型则适用于NoSQL数据库，强调基本可用性、软状态和最终一致性。BASE模型允许在高并发数据访问下，系统可以在一定时间内达到最终一致性，而不是立即一致。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876929,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 54,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 28,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195841,
        "nodeName": null
      }
    },
    {
      "id": 4195850,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195893,
      "knowledgeGraphId": 29889,
      "nodeName": "数据建模层级",
      "description": "数据建模层级包括概念模型、逻辑模型和物理模型。概念模型是对业务需求的抽象，逻辑模型是对数据结构的详细描述，物理模型则是数据的实际存储实现。三级模型应该相互独立，即物理模型的改变不影响逻辑模型和概念模型的内容，逻辑模型的改变不影响概念模型的定义。这种分层次的数据建模方法确保了数据模型的灵活性和可维护性。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876930,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 25,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195850,
        "nodeName": null
      }
    },
    {
      "id": 4195731,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195893,
      "knowledgeGraphId": 29889,
      "nodeName": "统一数据访问接口",
      "description": "统一数据访问接口（Unified Data Access Interface，UDAI）是一种支持分布式环境下跨平台异构数据统一访问的接口。其功能包括统一数据显示、存储和管理，分离访问接口和实现代码，屏蔽数据源差异和数据库操作细节，并提供统一的访问接口和查询语言。UDAI的架构包括统一数据访问接口/统一查询语言、数据模型/元数据/服务模型、数据转换引擎/数据服务引擎/数据源管理器和数据源包装器，这些组件共同作用将不同数据源的不同格式数据转换为统一的数据服务。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195851,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195731,
          "knowledgeGraphId": 29889,
          "nodeName": "数据源包装器",
          "description": "数据源包装器是统一数据访问层架构中的一个重要组件，负责连接统一数据访问层和异构数据源。它的作用是将来自不同数据源（如CRM、ERP、financials、Social Media、Exhaust Data、logs、files等）的数据进行包装和转换，使其能够被统一数据访问层的其他组件（如数据转换引擎、数据服务引擎等）处理，从而实现数据的统一检索和服务。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681794,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 25,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195851,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915904,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 38,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 25,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195731,
        "nodeName": null
      }
    },
    {
      "id": 4195809,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195894,
      "knowledgeGraphId": 29889,
      "nodeName": "基于列的存储",
      "description": "基于列的存储是一种数据存储方式，适用于支持分析处理（如OLAP）。与基于行的存储不同，基于列的存储将数据按列顺序存储，这样在执行聚合操作时效率更高，因为相关数据位于连续的内存位置。哈娜数据库采用基于列的存储方式，使得数据的排序和压缩更加有效，并且在进行数据分析时不需要提前进行聚合，从而减少了冗余数据和内存消耗。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195858,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195809,
          "knowledgeGraphId": 29889,
          "nodeName": "基于列存储的表",
          "description": "基于列存储的表具有扫描速度快、无需索引、动态视图、动态计算等优势。通过压缩技术，列存储表能够减少对主存的访问，提高数据处理效率。使用SAP HANA，表数据可以达到5倍的压缩比，进一步提升了数据处理性能和存储效率。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733954,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 21,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195858,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429263834,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195809,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707865,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 66,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195809,
        "nodeName": null
      }
    },
    {
      "id": 4195810,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195894,
      "knowledgeGraphId": 29889,
      "nodeName": "数据压缩与分区",
      "description": "数据压缩与分区是提高内存数据库性能的重要技术。由于内存的大小有限，哈娜数据库采用了多种压缩方法来减小数据库的大小。通过对数据库进行分区，可以实现并行化处理，从而提高性能。哈娜数据库的分区技术允许将数据分割成多个部分，并在多个处理器上并行处理，从而加快数据访问和计算速度。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149290,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195810,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163798796,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 66,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 28,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195810,
        "nodeName": null
      }
    },
    {
      "id": 4195853,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195894,
      "knowledgeGraphId": 29889,
      "nodeName": "数据存储架构",
      "description": "数据存储架构分为四个层次：L1数据收集与建模、L2分布式文件系统、L3分布式数据库/数据仓库、L4统一数据访问接口。L1层负责数据的获取、提取、转换和建模，确保数据的初步处理和准备；L2层通过分布式文件系统（如HDFS、GFS、Colossus）进行数据存储，提供高效的存储解决方案；L3层通过NoSQL数据库（如HBase、BigTable、MongoDB、Neo4j）或数据仓库进行数据管理和查询，支持大规模数据处理和分析；L4层通过统一数据访问接口实现跨平台异构数据的统一访问，确保数据的高效访问和利用。这种分层架构确保了数据的高效存储、管理和访问，支持大规模数据处理和分析。",
      "position": 3,
      "labelNameList": ["重点", "难点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163942109,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 36,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 25,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 34,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195853,
        "nodeName": null
      }
    },
    {
      "id": 4195895,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195925,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS数据操作",
      "description": "HDFS数据操作包括数据的写入和读取。数据写入过程：客户端创建文件，NameNode检查并记录，返回FSDataOutputStream，数据被拆分并写入队列，DataStreamer请求分配数据块并传输数据包，数据包在DataNode之间传输并存储，客户端完成写入并通知NameNode。数据读取过程：客户端打开文件，NameNode返回数据块地址，客户端读取数据块，数据包从DataNode流回客户端，客户端关闭连接并找到下一个数据块，完成读取并通知NameNode。如果读取错误，客户端从其他DataNode读取并反馈错误。",
      "position": 0,
      "labelNameList": ["重点", "难点"],
      "children": [
        {
          "id": 4195734,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195895,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS数据写入过程",
          "description": "HDFS的数据写入过程包括以下步骤：1. 客户端调用create函数创建文件；2. NameNode执行检查并记录新文件；3. 分布式文件系统返回一个FSDataOutputStream供客户端写数据；4. 数据被拆分为数据包并写入内部队列；5. DataStreamer请求NameNode分配数据块并通过管道传输数据包；6. 数据包在管道中的各个DataNode之间传输并存储；7. 客户端完成写入并调用close函数，等待所有数据包确认后通知NameNode文件写入完成。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428807155,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195734,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785656,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 98,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 48,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195734,
            "nodeName": null
          }
        },
        {
          "id": 4195735,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195895,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS数据读取过程",
          "description": "HDFS的数据读取过程包括以下步骤：1. 客户端调用open函数打开文件；2. NameNode返回文件数据块所在的DataNode地址；3. 客户端调用read方法读取数据块；4. 数据以数据包形式从DataNode流回客户端；5. 到达块末尾时，客户端关闭与DataNode的连接并找到下一个数据块的最佳DataNode；6. 客户端完成读取并调用close函数。如果在读取过程中遇到错误，客户端会尝试从下一个最近的DataNode读取数据，并将失败的DataNode反馈给NameNode。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429664660,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195735,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863966,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 98,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 48,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195735,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428921482,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195895,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811900,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 98,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 48,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195895,
        "nodeName": null
      }
    },
    {
      "id": 4195896,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195925,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式存储与容错",
      "description": "分布式存储与容错是大数据分析中的关键概念。分布式存储通过将数据分散存储在多个节点上，提高了数据的冗余性和可靠性，常见的系统包括HDFS、GFS等。容错性则确保系统在部分节点失效或网络分区时仍能正常运行，保证数据的可用性和一致性。分布式文件系统通过数据分片和复制机制实现高可用性和高可靠性，是大数据计算的基础设施之一。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195732,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195896,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式文件系统",
          "description": "分布式文件系统（Distributed File System）是大数据存储系统的重要组成部分，用于在多个节点上存储和管理数据。它提供高可用性和高可靠性的数据存储解决方案，支持大规模数据的存储和访问。分布式文件系统通过数据分片和复制机制，确保数据的安全性和可用性，是大数据计算的基础设施之一。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429263829,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195732,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837886,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 48,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 48,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 44,
            "avgCompletionRate": 12,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195732,
            "nodeName": null
          }
        },
        {
          "id": 4195842,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195896,
          "knowledgeGraphId": 29889,
          "nodeName": "分区容错性",
          "description": "分区容错性是指当系统中的一个分区不能与其他节点通信时，不影响系统其余部分的正常运行，或者部分系统数据的错误或丢失不影响系统的整体运作。这是CAP定理中的一个重要概念，强调在分布式系统中，系统需要能够处理网络分区的情况，以保证系统的可用性和一致性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694766,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 28,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195842,
            "nodeName": null
          }
        },
        {
          "id": 4195862,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195896,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式文件系统-以HDFS为例",
          "description": "分布式文件系统是一种将数据分布存储在多个节点上的文件系统，旨在提高数据的可靠性和访问速度。HDFS（Hadoop Distributed File System）是一个典型的分布式文件系统，它通过NameNode和DataNode的协作来管理和存储数据。NameNode负责管理文件系统的命名空间和元数据，而DataNode负责存储实际的数据块。HDFS的数据块默认大小为128MB，数据一旦写入便不可修改，以确保数据的一致性和完整性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824850,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 28,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195862,
            "nodeName": null
          }
        },
        {
          "id": 4195876,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195896,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式存储",
          "description": "分布式存储是大数据分析中的一个关键组成部分。它通过将数据分散存储在多个节点上，来提高数据存储的冗余性和可靠性，同时降低存储成本。常见的分布式文件系统包括HDFS、GFS和Colossus。分布式存储系统能够处理大规模数据，并且支持高效的数据访问和管理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929030,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 94,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 30,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195876,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429664669,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195896,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163720952,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 107,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 76,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195896,
        "nodeName": null
      }
    },
    {
      "id": 4195897,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195925,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS架构与机制",
      "description": "HDFS架构与机制：HDFS（Hadoop分布式文件系统）采用主从结构，包括一个主节点（NameNode）和多个从节点（DataNode）。NameNode负责管理文件系统的命名空间、文件到数据块的映射以及客户端的访问调度。DataNode负责存储文件数据块，并在NameNode的调度下进行数据块的创建、删除和复制。HDFS还包括一个次名称节点（Secondary NameNode），用于定期与主名称节点同步数据，并在主节点失效时提供恢复功能。HDFS支持一次写入，多次读取，确保数据的可靠性和高可用性。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195720,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195897,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS存储机制",
          "description": "HDFS（Hadoop分布式文件系统）是大数据存储的核心组件，负责将数据分块存储。每个数据块默认大小为64MB，可以配置为128MB。HDFS支持一次写入，多次读取，但不支持修改。数据块的分布式存储和复制机制确保了数据的可靠性和高可用性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681788,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 111,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195720,
            "nodeName": null
          }
        },
        {
          "id": 4195733,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195897,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS架构",
          "description": "HDFS（Hadoop Distributed File System）采用主从结构，包括一个主节点（NameNode）和多个从节点（DataNode）。NameNode负责管理文件系统的命名空间、文件到数据块的映射以及客户端的访问调度。DataNode负责存储文件数据块，并在NameNode的调度下进行数据块的创建、删除和复制。HDFS还包括一个次名称节点（Secondary NameNode），用于定期与主名称节点同步数据，并在主节点失效时提供恢复功能。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428864535,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195733,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007287,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 51,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 98,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 48,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195733,
            "nodeName": null
          }
        },
        {
          "id": 4195875,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195897,
          "knowledgeGraphId": 29889,
          "nodeName": "HDFS一次写入多次读取",
          "description": "HDFS（Hadoop分布式文件系统）设计为一次写入多次读取，不支持修改。这是因为在读块的同时写入数据会导致块大小变化，影响后续块的偏移量，进而导致泛洪现象，消耗大量资源。为了保证系统的稳定性和高效性，HDFS选择不支持修改操作。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163798799,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 25,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195875,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428693037,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195897,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902880,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 52,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 210,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 57,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195897,
        "nodeName": null
      }
    },
    {
      "id": 4195758,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195922,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式数据库",
      "description": "分布式数据库是构建于文件系统之上的数据库，能够实现数据的存储管理，并对上层计算引擎和应用软件提供数据快速查询功能和数据分析服务。它包括关系型数据库和非关系型数据库，关系型数据库如Oracle、MS SQL Server和MySQL，非关系型数据库如MongoDB、HBase等。分布式数据库在大数据计算中具有重要作用，尤其在处理超大规模数据量和非结构化数据时，关系型数据库面临扩展性和查询效率的挑战，而非关系型数据库则通过横向扩展和支持非结构化查询来解决这些问题。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429435529,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195758,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850906,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 125,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 50,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195758,
        "nodeName": null
      }
    },
    {
      "id": 4195759,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195922,
      "knowledgeGraphId": 29889,
      "nodeName": "NewSQL数据库",
      "description": "NewSQL数据库是一类新型的关系型数据库管理系统，旨在解决传统关系型数据库在扩展性和性能上的不足，同时保持ACID特性。NewSQL数据库支持强一致性和线性扩展，通常采用Paxos和Raft共识算法来支持多份副本，优化写能力。它们在数据存储层上采用LSM树结构，能够提供高效的读写性能。NewSQL数据库结合了NoSQL的扩展性和关系型数据库的事务支持，适用于在线事务处理（OLTP）场景。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206470,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195759,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007288,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 125,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 50,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195759,
        "nodeName": null
      }
    },
    {
      "id": 4195886,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195922,
      "knowledgeGraphId": 29889,
      "nodeName": "NoSQL数据库",
      "description": "NoSQL数据库是一类非关系型数据库，旨在处理大规模数据和高并发访问，常见的有HBase、MongoDB和Redis。NoSQL数据库支持横向扩展，能够处理非结构化和半结构化数据，读写性能高，成本低，易于部署。NoSQL数据库不需要预定义数据格式，采用无共享架构，支持异步复制，提供最终一致性。主要类型包括文档数据库、键值数据库、列存储数据库和图数据库。文档数据库以键值对形式存储数据，值部分为JSON或XML文档，适合半结构化数据。键值数据库通过键值对存储数据，适用于简单查询。列存储数据库基于列存储结构，支持高效的聚合查询。图数据库通过顶点和边表示数据及其关系，适用于处理高度相关的数据，如社交网络和推荐系统。",
      "position": 1,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195802,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "键值数据库",
          "description": "键值数据库基于键值对（key-value）来存储和查询数据。数据以键值对的形式存储，设计用于处理大量数据和高负载。键可以是字符串型，值可以是任何类型，如整数、字符、数组、列表、集合、JSON数据和BLOB二进制大对象等。底层结构通常使用哈希表对键进行索引和管理，以支持快速查询。然而，键值数据库不支持基于数据值的查询，适用于存储无模式数据，如购物车内容。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428807161,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195802,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902875,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 59,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 55,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 42,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195802,
            "nodeName": null
          }
        },
        {
          "id": 4195803,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "图数据库",
          "description": "图数据库将社会关系和其他数据描述为顶点和边，顶点表示实体（如个人、公司、账户等），边表示顶点之间的关系。图数据库直接定义并存储数据之间的关系，使得关系查询非常快速。图数据库适用于处理高度相关的数据，如社交网络、模式识别、依赖分析、推荐系统和路径查找等问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428464537,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195803,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785658,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 55,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 42,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195803,
            "nodeName": null
          }
        },
        {
          "id": 4195807,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "文档数据库",
          "description": "文档数据库是一种以键值对形式存储和检索数据的数据库，其中值部分以文档形式存储，常见格式为JSON或XML。文档数据库没有固定的模式，具有高度的灵活性，适合管理面向文档的数据或半结构化数据。它们通常用于内容管理系统（CMS）、博客平台、实时分析和电子商务应用，尤其适合后台有大量读写操作的网站。然而，文档数据库不适合需要对不同聚合结构进行复杂操作和查询的场景。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429320994,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195807,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733953,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 55,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 51,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195807,
            "nodeName": null
          }
        },
        {
          "id": 4195872,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "NoSQL数据库类型",
          "description": "NoSQL数据库类型包括文档存储、键值对存储、列存储和图数据库。文档存储数据库以键值对的形式存储数据，值部分以文档形式存储，常用格式为JSON或XML。键值对存储数据库通过键值对的方式存储数据，适用于简单查询。列存储数据库基于列存储结构，适合高压缩比和高效的聚合查询。图数据库通过点和边表示数据及其关系，适用于处理高度相关的数据。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163746822,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 24,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195872,
            "nodeName": null
          }
        },
        {
          "id": 4195808,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "列存储数据库",
          "description": "列存储数据库采用列存储结构，数据根据列进行检索、存储和管理。每一列单独处理，值是连续存储的，支持高压缩比和高效的聚合查询（如SUM、COUNT、AVERAGE、MEAN）。这种数据库适用于管理数据仓库、商业智能、客户关系管理等应用场景，但不适合实时删除或更新整个记录，也不支持数据表的JOIN操作。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206474,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195808,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837890,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 55,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 51,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195808,
            "nodeName": null
          }
        },
        {
          "id": 4195804,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "CAP定理",
          "description": "CAP定理是指在一个分布式系统中，不能同时满足一致性（Consistency）、可用性（Availability）和分区容忍性（Partition Tolerance）这三个要求，而最多只能满足其中的两个。CAP定理的C代表一致性，意思是在分布式环境中，多个存储节点的数据同时具有相同的数据值，所有的数据备份更新都要同步。A代表可用性，即客户端可以快速读取数据，在合理的时间内返回操作结果，保证每一个请求无论成功或失败都必须有响应。P代表分区容忍性，意思是当系统中的一个分区不能与其他节点通信时，不影响系统其余部分的正常运行，或者当部分系统的数据发生错误或丢失时，不影响整个系统的运作。根据CAP定理，一个分布式系统中数据的读写操作中只能满足两个，不能满足三个，这也导致了关系数据库和NoSQL数据库的区别。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429206473,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195804,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929027,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 47,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 73,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 45,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195804,
            "nodeName": null
          }
        },
        {
          "id": 4195805,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195886,
          "knowledgeGraphId": 29889,
          "nodeName": "BASE模型",
          "description": "BASE模型是NoSQL数据库中的事务模型，BASE是Basic Available（基本可用）、Soft State（软状态）和Eventual Consistency（最终一致性）的缩写。基本可用指的是当分布式系统的一部分因为有问题变得不可用时，其他部分仍然可以正常使用。软状态是相对于硬状态的一个术语，指状态可以在一段时间内不同步，有一定的滞后。最终一致性是指后续访问的操作暂时可能无法读取更新了的数据，但经过一个短暂的时间之后，最终还是必须要读取到更新的数据。BASE模型与传统关系型数据库的ACID模型不同，ACID模型强调的是原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability），而BASE模型则更适合分布式系统的特点。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429492740,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195805,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642426,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 73,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 45,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195805,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 7,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428693036,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 15,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195886,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968227,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 54,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 253,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 58,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195886,
        "nodeName": null
      }
    },
    {
      "id": 4195722,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195766,
      "knowledgeGraphId": 29889,
      "nodeName": "数据存储与处理平台",
      "description": "数据存储可以使用关系型数据库（如Cycle Server）、数据仓库（如Hadoop）、文档数据库（如MongoDB）和图形数据库（如Neo4j）等。数据处理平台包括Hadoop、Spark等，用于处理大规模数据。数据分析工具如TensorFlow、IBM Watson等可以对数据进行分析，分析后的数据可以使用可视化工具如Tableau进行展示。通过这些工具和平台，可以对数据进行全面的分析和处理，从而获得业务改进、收益分析、客户概况等有价值的信息。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811894,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 57,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 1,
        "nodeId": 4195722,
        "nodeName": null
      }
    },
    {
      "id": 4195888,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195800,
      "knowledgeGraphId": 29889,
      "nodeName": "MapReduce计算模型",
      "description": "MapReduce计算模型是大数据批处理计算的代表性模型，主要包括两个阶段：Map阶段和Reduce阶段。在Map阶段，数据从HDFS中读取并经过处理生成中间结果，这些中间结果被存储到HDFS中。接着在Reduce阶段，这些中间结果被进一步处理，生成最终的输出并存储到HDFS中。MapReduce通过在分布式环境下进行并行计算来提高处理效率，适用于处理大规模的结构化和非结构化数据。该模型通过将数据分割成多个小块，并在多个节点上并行处理这些小块，实现高效的数据处理。",
      "position": 0,
      "labelNameList": ["重点", "难点"],
      "children": [
        {
          "id": 4195719,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195888,
          "knowledgeGraphId": 29889,
          "nodeName": "MapReduce计算模型",
          "description": "MapReduce计算模型是大数据批处理计算的代表性模型，主要包括两个阶段：Map阶段和Reduce阶段。在Map阶段，数据从HDFS中读取并经过处理生成中间结果，这些中间结果被存储到HDFS中。接着在Reduce阶段，这些中间结果被进一步处理，生成最终的输出并存储到HDFS中。MapReduce通过在分布式环境下进行并行计算来提高处理效率，适用于处理大规模的结构化和非结构化数据。该模型通过将数据分割成多个小块，并在多个节点上并行处理这些小块，实现高效的数据处理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163889958,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 42,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 115,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195719,
            "nodeName": null
          }
        },
        {
          "id": 4195721,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195888,
          "knowledgeGraphId": 29889,
          "nodeName": "任务调度与资源管理",
          "description": "在MapReduce架构中，任务调度由Job Tracker和Task Tracker协同完成。Job Tracker负责监视资源使用情况和作业调度，Task Tracker定期向Job Tracker报告资源使用情况和任务进度。任务调度器（Task Scheduler）根据资源空闲情况选择适当的任务来使用这些资源。任务调度的有效性直接影响到整个计算过程的效率。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968220,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 42,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 111,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195721,
            "nodeName": null
          }
        },
        {
          "id": 4195873,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195888,
          "knowledgeGraphId": 29889,
          "nodeName": "MapReduce工作流程",
          "description": "MapReduce是一种用于处理大量数据的批处理计算模型。其工作流程包括将输入数据分割成多个split，每个split经过map阶段处理后，进行sort和copy操作。sort和copy后的数据进行merge操作，然后进入reduce阶段。reduce阶段处理后的结果分别输出为part 0和part 1，并存储到output HDFS中。最终，HDFS进行数据复制（replication）以保证数据的冗余和可靠性。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668729,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 25,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195873,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163603088,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 42,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 116,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 43,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195888,
        "nodeName": null
      }
    },
    {
      "id": 4195798,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195800,
      "knowledgeGraphId": 29889,
      "nodeName": "微量批处理系统",
      "description": "微量批处理系统是一种介于批处理和流处理之间的计算模型。它将数据以小批次的形式进行处理，虽然不是真正的实时处理，但接近于实时处理。Spark 是微量批处理系统的代表，通过将数据分成小批次进行处理，可以在一定程度上节省计算成本。微量批处理适用于需要频繁处理小批次数据的场景。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428350566,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195798,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733952,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 27,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 29,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195798,
        "nodeName": null
      }
    },
    {
      "id": 4195752,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195923,
      "knowledgeGraphId": 29889,
      "nodeName": "并行图计算模型",
      "description": "并行图计算模型（Graph parallel model）是一种用于处理大规模图数据的计算模型。它通过将图数据分割成多个子图，并在多个计算节点上并行处理这些子图来提高计算效率。常见的并行图计算框架包括Google Pregel、Apache Giraph等。该模型的关键技术包括锁步同步（Lock-step synchronization）、树状结构值聚合（Tree-based reduction）和消息合并（Message combining）。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [
        {
          "id": 4195753,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195752,
          "knowledgeGraphId": 29889,
          "nodeName": "超步(superstep)",
          "description": "超步是并行图计算模型中的一个关键概念。在每个超步中，处理单元首先接收前一个超步传递的所有消息，然后根据消息操纵本地数据，并将消息排队发送给其他处理单元。所有处理单元完成消息传递后，进入下一个超步。超步的执行过程包括计算和通信两个阶段，节点在计算阶段完成任务，在通信阶段发送和接收消息。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428921479,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195753,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863967,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 38,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 28,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195753,
            "nodeName": null
          }
        },
        {
          "id": 4195754,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195752,
          "knowledgeGraphId": 29889,
          "nodeName": "图分区与消息传递",
          "description": "图分区是并行图计算模型中的基本执行单元，每个分区包含大量节点，并由一个线程执行。消息传递系统用于在分区之间传递消息，节点通过消息传递来激活其他节点并进行计算。Pregel架构采用消息传递系统来创建大规模图形处理框架，减少网络通信开销，提高计算性能。消息传递系统包括两个消息队列，分别用于当前超步和下一个超步的消息传递。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149288,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195754,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163720949,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 37,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 28,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195754,
            "nodeName": null
          }
        },
        {
          "id": 4195882,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195752,
          "knowledgeGraphId": 29889,
          "nodeName": "BulkSynchronousParallel(BSP)",
          "description": "Bulk Synchronous Parallel（BSP）是一种并行计算模型，广泛应用于大数据处理系统中。BSP模型将计算过程分为多个超级步（Superstep），每个超级步包括计算、通信和同步三个阶段。各个计算节点在每个超级步中独立进行计算，并在超级步结束时进行全局同步。BSP模型的优点在于其简单的编程模型和良好的可扩展性，常用于图计算和大规模数据处理。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968226,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 23,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195882,
            "nodeName": null
          }
        },
        {
          "id": 4195884,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195752,
          "knowledgeGraphId": 29889,
          "nodeName": "GooglePregel架构",
          "description": "Google Pregel是一种专门用于大规模图计算的分布式计算框架。其架构包括Master节点和多个Worker节点，Master节点负责全局控制和协调，Worker节点负责具体的图计算任务。Pregel采用BSP模型进行计算，图数据被分割成多个分区（Graph Partition），每个分区包含顶点（Vertices）和出边（Edges-Out）。计算过程包括状态转移（State transition）、全局和局部聚合（Global/Local Aggregation）、消息传递（Message passing）等步骤。Pregel的持久化存储使用Google文件系统（GFS）。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668730,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 44,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 23,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195884,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428807159,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195752,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163655498,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 39,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 66,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 38,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195752,
        "nodeName": null
      }
    },
    {
      "id": 4195742,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195924,
      "knowledgeGraphId": 29889,
      "nodeName": "内存计算",
      "description": "内存计算是一种完全在计算机内存（如RAM）中进行运算的计算技术。通过消除访问硬盘驱动器或SSD时的常见延迟，内存计算大大提高了计算性能。内存计算通过将计算任务分成更小的任务，并分布到每台计算机的内存中并行运行，从而实现高效的计算。Spark是内存计算模型的一个典型代表，它通过内存缓存和优化查询执行，实现了对大规模数据的快速处理。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195848,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195742,
          "knowledgeGraphId": 29889,
          "nodeName": "流计算模型",
          "description": "流计算模型是一种用于处理动态流数据的计算模型。它通过持续接收和处理实时数据流来实现数据的快速处理和分析。流计算模型通常包括数据输入、内存处理和知识生成三个阶段。数据输入阶段负责接收实时数据流；内存处理阶段负责在内存中对数据进行快速处理；知识生成阶段负责将处理后的数据转化为有用的信息。流计算模型适用于需要实时处理和分析的数据场景，如金融交易监控、网络流量分析等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785662,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 4,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 25,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195848,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206469,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195742,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707863,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 51,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 74,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195742,
        "nodeName": null
      }
    },
    {
      "id": 4195874,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195924,
      "knowledgeGraphId": 29889,
      "nodeName": "计算引擎",
      "description": "计算引擎是大数据分析中的核心组件，用于执行各种计算任务。常见的计算引擎包括Hadoop、Spark和Storm等。这些引擎提供了高效的数据处理能力，支持不同的数据计算模型，如MapReduce、动态流数据处理和并行图计算等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968225,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 25,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195874,
        "nodeName": null
      }
    },
    {
      "id": 4195826,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195924,
      "knowledgeGraphId": 29889,
      "nodeName": "Spark架构",
      "description": "Spark的计算程序分为Driver和Executor两部分。Driver负责将应用程序的计算任务转换为有向无环图（DAG），并调度任务。Executor在Worker节点上运行，负责完成计算和数据存储。Driver通过SparkContext与Cluster Manager交互，Cluster Manager管理多个Worker节点，每个Worker节点上有Executor和Cache，Executor执行具体的任务。",
      "position": 1,
      "labelNameList": ["重点", "难点"],
      "children": [
        {
          "id": 4195743,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195826,
          "knowledgeGraphId": 29889,
          "nodeName": "弹性分布式数据集(RDD)",
          "description": "弹性分布式数据集（RDD）是Spark中用于分布式内存计算的核心数据结构。RDD是跨集群节点划分的元素集合，可以并行操作。RDD的创建可以从Hadoop文件系统或其他支持的文件系统中的原始大文件开始，或者从驱动程序中的现有Scala集合开始。RDD的操作分为转换（Transform）和动作（Action），转换操作不会立即计算结果，只有在动作操作时才会触发计算。RDD具有容错性，可以在节点故障时自动恢复数据。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428293243,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195743,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955180,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195743,
            "nodeName": null
          }
        },
        {
          "id": 4195744,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195826,
          "knowledgeGraphId": 29889,
          "nodeName": "惰性求值(LazyEvaluation)",
          "description": "惰性求值是Spark中RDD的一种特性，即RDD的转换操作不会立即执行，只有在遇到动作操作时才会触发计算。这种机制通过减少不必要的计算，优化了查询执行过程，从而提高了计算效率。惰性求值在节省计算开销方面发挥着重要作用，通过减少查询的数量来提供优化。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428464535,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195744,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616257,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 54,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195744,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429779014,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195826,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163889960,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 55,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 71,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 40,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195826,
        "nodeName": null
      }
    },
    {
      "id": 4195797,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195801,
      "knowledgeGraphId": 29889,
      "nodeName": "流处理计算模型",
      "description": "流处理计算模型是一种实时处理动态数据的计算模型。与传统的批处理不同，流处理针对的是动态、连续的数据流，要求实时性、快速响应和低延迟。流处理框架通常包括数据的实时采集、实时计算和实时查询服务。Storm 是一种原生的流处理系统，通过有向拓扑图（topology）实现并行计算，适用于需要实时分析和处理的场景。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428635517,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195797,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163942107,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 45,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 27,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 29,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195797,
        "nodeName": null
      }
    },
    {
      "id": 4195857,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195871,
      "knowledgeGraphId": 29889,
      "nodeName": "数据处理系统架构",
      "description": "数据处理系统架构包括多种计算模型，如大量数据批处理计算模型MapReduce、动态流数据Stream Computing model、结构化数据的大规模并发处理Large-scale concurrent processing (MPP)、内存计算模型In-memory Computing model和图计算模型Graph parallel model。这些模型各自适用于不同类型的数据处理需求，能够有效地处理和分析大数据。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642427,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 48,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 21,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195857,
        "nodeName": null
      }
    },
    {
      "id": 4195799,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195871,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式计算架构",
      "description": "分布式计算架构是大数据处理系统的基础，通常包括算法层、计算模型层、计算平台和引擎层。常见的大数据处理平台有 Hadoop、Spark、Storm 等。分布式系统中常用有向非循环图（DAG）来表征计算流程和计算模型，不同颜色的节点表示不同阶段的计算任务，单向箭头表示计算步骤的顺序和依赖关系。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195865,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195799,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式策略",
          "description": "分布式策略API使得在不同硬件配置上分发和训练模型变得容易，而无需更改模型定义。TensorFlow支持一系列硬件加速器，如CPU、GPU和TPU，训练工作负载可以分配到单节点/多加速器，以及多节点/多加速器配置，包括TPU Pods。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811899,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 21,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195865,
            "nodeName": null
          }
        },
        {
          "id": 4195887,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195799,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式计算",
          "description": "分布式计算是指使用一组廉价的服务器组成一个服务器集群来代替昂贵的高性能服务器，以实现高性能和高冗余性。分布式计算的思想是通过多个节点协同完成大数据存储和处理的任务，解决单个节点无法处理超大数据规模的问题。关键的硬件和软件突破使得分布式计算成为可能，降低了硬件成本，并通过自动化流程优化使用。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429378310,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195887,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163824851,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 207,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 92,
            "avgCompletionRate": 14,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195887,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429836593,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195799,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642425,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 54,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 235,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 93,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195799,
        "nodeName": null
      }
    },
    {
      "id": 4195774,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195871,
      "knowledgeGraphId": 29889,
      "nodeName": "特征工程与数据分析",
      "description": "数据清洗后，数据科学家进行特征工程，提取或构建具有代表性的关键特征，以支持进一步的模型和算法。然后，应用统计和数学模型或机器学习算法来发现模式、相关性和分类等，并将这些结果进行可视化，以便于理解和进一步分析。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428521565,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195774,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876924,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 22,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 106,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 76,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195774,
        "nodeName": null
      }
    },
    {
      "id": 4195737,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195898,
      "knowledgeGraphId": 29889,
      "nodeName": "无共享架构",
      "description": "无共享架构（Shared-nothing Architecture）是一种分布式计算架构，其中每个节点拥有独立的内存和磁盘，节点之间不共享任何资源。数据在节点之间水平分区，每个节点只处理自己磁盘上的数据。无共享架构通过减少资源争用和提高系统的可扩展性，适用于大规模数据处理和高并发查询的场景。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429320990,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195737,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837887,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 55,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 39,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195737,
        "nodeName": null
      }
    },
    {
      "id": 4195739,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195898,
      "knowledgeGraphId": 29889,
      "nodeName": "大规模并行处理",
      "description": "大规模并行处理（Massively Parallel Processing, MPP）是一种计算模型，采用完全并行的分布式架构，通过多个处理器并行处理同一个程序的不同部分。每个处理器运行自身的操作系统和内存，通过通讯接口进行协调工作。MPP系统通常采用无共享架构，即每个节点拥有独立的内存和磁盘，数据在节点之间水平分区。每个节点都是独立的，节点之间是对等的，整个系统中不存在单点瓶颈。MPP模型适用于需要高并发查询和数据处理的应用，如数据仓库和决策支持系统。其特点是不共享资源，每个节点只访问本地内存和存储，节点之间的信息交互通过节点互联网络实现。MPP架构能够提供高性能并行处理，适用于大规模数据场景，如数据仓库、科学计算等。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429320991,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195739,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876923,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 146,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195739,
        "nodeName": null
      }
    },
    {
      "id": 4195941,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195898,
      "knowledgeGraphId": 29889,
      "nodeName": "MPP数据库",
      "description": "MPP数据库是一种高性能数据库架构，采用无共享架构，将数据和处理分散到多个节点上并行执行，从而实现高性能的数据分析能力。大多数MPP数据库采用列式存储以提高分析查询效率，数据被分区分布在多个节点上，每个节点独立处理本地数据，协调节点负责查询规划、分发和结果汇总，节点间通过网络交换必要数据。MPP数据库适用于大数据分析、数据仓库、商业智能（BI）和复杂分析查询等场景，典型代表包括Greenplum等。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195847,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195941,
          "knowledgeGraphId": 29889,
          "nodeName": "数据分布与并行性",
          "description": "在MPP数据库中，数据分布是实现并行处理的关键。通过使用DISTRIBUTED by子句创建数据库表，数据自动分布在各个段数据库中。这种分布方式确保了数据处理的并行性，提高了查询和计算的效率。在Greenplum中，数据可以通过散列分布或循环分布进行分配，以优化不同类型的工作负载。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785661,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 22,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195847,
            "nodeName": null
          }
        },
        {
          "id": 4195846,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195941,
          "knowledgeGraphId": 29889,
          "nodeName": "Greenplum物理架构",
          "description": "Greenplum物理架构是一种基于MPP模型的数据库架构。它包括一个主主机和多个段主机，主主机存储关于段的元数据，而段主机存储实际的用户数据。主主机和段主机通过互连交换机进行通信，数据在各个段数据库中分布，以实现数据和处理的并行性。Greenplum支持散列分布和循环分布两种数据分布方式。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429035296,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195846,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163720950,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 25,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 39,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 37,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195846,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428236316,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195941,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759933,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 25,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 39,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 37,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195941,
        "nodeName": null
      }
    },
    {
      "id": 4195856,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195806,
      "knowledgeGraphId": 29889,
      "nodeName": "内存数据库-HANA",
      "description": "内存数据库HANA是一种高性能的数据处理系统，利用多核架构和并行扩展技术，实现了数据的快速处理和实时分析。HANA通过行存储和列存储、压缩、分区等技术，消除了冗余数据副本，简化了数据管理，减少了数据延迟，提高了数据实时性。其应用包括品牌情感分析、需求预测、产品推荐、个性化护理和欺诈检测等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616263,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 21,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195856,
        "nodeName": null
      }
    },
    {
      "id": 4195868,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195939,
      "knowledgeGraphId": 29889,
      "nodeName": "数据挖掘算法",
      "description": "数据挖掘算法包括分类（Classification）、聚类（Clustering）、关联分析（Correlation Analysis）和异常检测（Anomaly Detection）等。常见的数据挖掘算法有决策树、支持向量机（SVM）、人工神经网络（ANN）、朴素贝叶斯算法、K近邻算法（KNN）、ID3算法和C4.5算法等。这些算法用于从大量数据中提取有价值的信息和模式。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195912,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195868,
          "knowledgeGraphId": 29889,
          "nodeName": "深度学习技术",
          "description": "深度学习技术是机器学习的一个重要分支，基于人工神经网络的多层结构进行数据处理和预测。常见的深度学习模型包括卷积神经网络（CNN）、循环神经网络（RNN）和深度信念网络（DBN）等。深度学习技术通过模拟人脑神经元的工作原理，能够自动提取数据特征并进行分类或预测。它需要大量的数据和计算资源，通常在GPU上进行训练，以提供高准确率的结果。深度学习技术在图像识别、自然语言处理等领域有广泛应用。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 7,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428464544,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195912,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785665,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 55,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 134,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 46,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195912,
            "nodeName": null
          }
        },
        {
          "id": 4195913,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195868,
          "knowledgeGraphId": 29889,
          "nodeName": "机器学习基础",
          "description": "机器学习基础是大数据分析中的核心概念，涉及从数据中自动学习和识别模式的技术。机器学习分为监督学习、无监督学习和强化学习三大类。监督学习通过已标注的数据进行训练，常用于分类和回归任务；无监督学习则处理未标注的数据，常用于聚类和降维；强化学习通过与环境的交互来优化决策。常见算法包括线性回归、支持向量机、神经网络等。掌握机器学习基础有助于理解复杂的数据分析任务和构建智能系统。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429263839,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 10,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195913,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929031,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 53,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 559,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 62,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195913,
            "nodeName": null
          }
        },
        {
          "id": 4195909,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195868,
          "knowledgeGraphId": 29889,
          "nodeName": "关联规则挖掘",
          "description": "关联规则挖掘是一种用于发现数据集中项之间关系的技术。通过分析频繁项集，生成关联规则，帮助企业了解哪些商品经常一起购买，从而优化商品摆放和促销策略。关联规则由前件（如果）和后件（那么）组成，常用的度量指标包括支持度、置信度和提升度。支持度表示某个项集在数据集中出现的频率；置信度表示在前件发生的情况下，后件发生的概率；提升度衡量前件和后件之间的关联强度。通过这些指标，可以评估和筛选有价值的关联规则，帮助企业做出更明智的决策。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863969,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 86,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195909,
            "nodeName": null
          }
        },
        {
          "id": 4195910,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195868,
          "knowledgeGraphId": 29889,
          "nodeName": "降维与矩阵分解",
          "description": "降维与矩阵分解是大数据分析中的重要技术。降维技术如主成分分析（PCA）通过将高维数据转换为低维数据，保留主要特征，减少计算复杂度。矩阵分解技术如奇异值分解（SVD）将矩阵分解为左奇异矩阵、对角矩阵和右奇异矩阵，帮助计算数据的主成分。特征值和特征向量在PCA中尤为重要，特征值表示数据在特征向量方向上的方差大小，特征向量表示数据变化的主要方向。通过这些技术，我们可以更有效地理解和处理大数据。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694768,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 45,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 135,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 43,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195910,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428122087,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195868,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163603087,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 837,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 65,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195868,
        "nodeName": null
      }
    },
    {
      "id": 4195816,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195947,
      "knowledgeGraphId": 29889,
      "nodeName": "数据流图",
      "description": "数据流图是TensorFlow的核心概念之一，它描述了数据如何通过图或一系列处理节点移动的结构关系。图中的每个节点表示一个数学运算，节点之间的每个连接或边是一个多维数据数组，称为张量（Tensor）。这种图结构使得TensorFlow能够高效地进行大规模并行计算。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428350567,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195816,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785660,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 79,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195816,
        "nodeName": null
      }
    },
    {
      "id": 4195817,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195947,
      "knowledgeGraphId": 29889,
      "nodeName": "EagerExecution",
      "description": "Eager Execution是TensorFlow 2.0中的一个重要特性，它允许即时执行操作，而不是构建计算图后再执行。这使得调试和原型设计更加直观和方便。Eager Execution通过简化代码结构和提供即时反馈，极大地提高了开发效率。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428921481,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195817,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681791,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 79,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195817,
        "nodeName": null
      }
    },
    {
      "id": 4195818,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195947,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式策略API",
      "description": "分布式策略API是TensorFlow 2.0中的一个功能，旨在简化在不同硬件上进行分布式训练的过程。它支持在多种硬件加速器（如CPU、GPU和TPU）上配置和分发训练任务，甚至可以在多节点的多加速器配置上运行。这使得大规模机器学习任务的训练变得更加高效和灵活。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429836596,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195818,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681792,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 79,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195818,
        "nodeName": null
      }
    },
    {
      "id": 4195824,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195931,
      "knowledgeGraphId": 29889,
      "nodeName": "社交网络分析",
      "description": "社交网络分析（Social Network Analysis, SNA）是通过使用网络和图论来调查社会结构的过程。它结合了分析社会关系的工具和解释这些社会互动中出现的结构的理论。社交网络分析可以帮助识别本地和全球的模式，定位有影响力的个体，并检查网络的动态。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195827,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195824,
          "knowledgeGraphId": 29889,
          "nodeName": "力导向图",
          "description": "力导向图（Force-Directed Graph）是一种用于社交网络可视化的重要方法。它通过假设节点之间存在力和拟合，目标是使整个系统稳定或者能量最低。常见的力导向图绘制算法包括Force atlas算法、Fruchterman-Reingold算法和Yifan Hu算法。这些算法利用电磁学原理，考虑了图的美观性，使得节点和边的布局更加合理和易于理解。力导向图在大数据分析中具有重要应用，能够有效地展示复杂网络结构，帮助分析和理解社交网络中的关系和模式。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428749878,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195827,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876928,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 71,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195827,
            "nodeName": null
          }
        },
        {
          "id": 4195883,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195824,
          "knowledgeGraphId": 29889,
          "nodeName": "Fruchterman-Reingold算法",
          "description": "Fruchterman-Reingold算法是社交网络可视化中最常用的算法之一。该算法利用电磁学原理，通过斥力和引力的平衡生成圆形图。斥力公式为f_a(d) = d^2 / k，引力公式为f_r(d) = -k^2 / d。最终目标是使整个系统达到稳定状态或能量最低，从而使节点分布更加均匀，减少边的交叉。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163720951,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 18,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195883,
            "nodeName": null
          }
        },
        {
          "id": 4195825,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195824,
          "knowledgeGraphId": 29889,
          "nodeName": "社交网络度量指标",
          "description": "社交网络分析中常用的度量指标包括节点和边缘的度量（如平均聚类系数、特征向量中心性、平均路径长度等）以及网络的度量（如平均度、平均加权度、网络直径、图密度、最短路径、模块化程度等）。这些指标帮助量化和描述社交网络的结构和特性。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429092267,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195825,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616262,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195825,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428749877,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195824,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955183,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 71,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195824,
        "nodeName": null
      }
    },
    {
      "id": 4195943,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195931,
      "knowledgeGraphId": 29889,
      "nodeName": "推荐系统",
      "description": "推荐系统通过分析用户的历史行为和物品特征，生成个性化的推荐列表。主要有基于用户的协同过滤算法、基于物品的协同过滤算法和基于内容的过滤算法。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195828,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195943,
          "knowledgeGraphId": 29889,
          "nodeName": "矩阵分解",
          "description": "矩阵分解是一种用于推荐系统的技术，通过将用户-物品评分矩阵分解为两个低维矩阵，即用户特征矩阵和物品特征矩阵，从而预测用户对未评分物品的评分。常见的矩阵分解方法包括隐语义模型（LFM）和奇异值分解（SVD）。矩阵分解的目标是最小化预测评分与实际评分之间的误差，同时加入正则化项以防止过拟合。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681793,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 23,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195828,
            "nodeName": null
          }
        },
        {
          "id": 4195829,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195943,
          "knowledgeGraphId": 29889,
          "nodeName": "隐语义模型",
          "description": "隐语义模型是一种基于矩阵分解的推荐算法，通过将用户-物品评分矩阵分解为用户隐语义矩阵和物品隐语义矩阵，来发现评分矩阵中的潜在模式。隐语义模型不依赖于物品的显性特征，而是通过数据中的潜在模式来进行推荐。常见的隐语义模型包括基于SVD的模型和基于梯度下降的优化模型。",
          "position": 3,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428578391,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195829,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163798798,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 82,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195829,
            "nodeName": null
          }
        },
        {
          "id": 4195831,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195943,
          "knowledgeGraphId": 29889,
          "nodeName": "协同过滤",
          "description": "协同过滤是一种推荐系统算法，主要分为基于邻域和基于模型两种类型。基于邻域的协同过滤包括基于用户的协同过滤和基于物品的协同过滤。基于用户的协同过滤通过计算用户之间的相似度来推荐物品，而基于物品的协同过滤则通过计算物品之间的相似度来推荐物品。基于模型的协同过滤包括隐语义模型和图模型等。协同过滤通过计算用户或物品之间的相似度来进行推荐，常用的相似度计算方法包括Jaccard相似度、余弦相似度、欧氏距离和皮尔森距离。",
          "position": 4,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429721986,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195831,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955184,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 83,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195831,
            "nodeName": null
          }
        },
        {
          "id": 4195852,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195943,
          "knowledgeGraphId": 29889,
          "nodeName": "相似度计算",
          "description": "相似度计算是推荐系统中的关键步骤，用于衡量用户或物品之间的相似程度。常用的相似度计算方法包括Jaccard相似度、余弦相似度、欧氏距离和皮尔森距离。在基于用户的协同过滤中，相似度计算用于确定用户之间的相似度；在基于物品的协同过滤中，相似度计算用于确定物品之间的相似度。相似度计算的结果直接影响推荐的准确性和效果。",
          "position": 5,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902878,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 24,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195852,
            "nodeName": null
          }
        },
        {
          "id": 4195833,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195943,
          "knowledgeGraphId": 29889,
          "nodeName": "基于内容的过滤",
          "description": "基于内容的过滤是一种推荐系统算法，通过分析物品的内容特征来进行推荐。该算法首先提取物品的结构化特征和非结构化特征，然后通过用户过去喜欢或不喜欢的物品特征来学习用户的偏好特征，建立用户档案。最后，通过比较用户档案与候选物品的特征，推荐相关性最高的物品给用户。基于内容的过滤不依赖于其他用户的行为数据，而是通过物品本身的属性来进行推荐。这种方法能够有效地推荐与用户历史偏好相似的物品，适用于物品特征丰富且用户偏好明确的场景。",
          "position": 6,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 3,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429320995,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195833,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902877,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 84,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195833,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 5,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429664673,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195943,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981289,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 166,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195943,
        "nodeName": null
      }
    },
    {
      "id": 4195839,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195914,
      "knowledgeGraphId": 29889,
      "nodeName": "全量数据取代样本数据",
      "description": "在大数据分析中，全量数据的使用取代了传统的样本数据。通过手机监测温湿度、定位空间位置、监测大气环境化学和PM2.5功能传感设备，移动监测终端增加了测量的空间覆盖范围，产生了海量的数据。这些数据可以用于分析雾霾的成因，做出预测。全量数据的使用使得分析更加全面和准确。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694765,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 72,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195839,
        "nodeName": null
      }
    },
    {
      "id": 4195840,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195914,
      "knowledgeGraphId": 29889,
      "nodeName": "相关性取代因果关系",
      "description": "在大数据时代，分析的重点从因果关系转向了相关性。计算机擅长处理和分析数据之间的相关性，而不是因果关系。通过分析沃尔玛购物清单中的数据，发现飓风来临时手电筒和蛋挞的销量都会增加，这种相关性分析帮助商家优化商品摆放和销售策略。大数据时代最大的变化是摒弃了对因果关系的渴望，转而关注数据之间的相关性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707868,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195840,
        "nodeName": null
      }
    },
    {
      "id": 4195838,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195915,
      "knowledgeGraphId": 29889,
      "nodeName": "科学研究第四范式",
      "description": "科学研究的第四范式是数据密集型范式，它与第三范式的计算模拟不同，第四范式是基于大量已知数据进行分析和总结，产生新的理论。通过处理和分析海量数据，科学家可以发现以前未知的规律和理论。这种方法颠覆了传统的因果关系思维，转而关注数据之间的相关性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968224,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 67,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195838,
        "nodeName": null
      }
    },
    {
      "id": 4195837,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195916,
      "knowledgeGraphId": 29889,
      "nodeName": "商务智能的演变",
      "description": "商务智能的演变可以分为三个阶段：1990年代的商务智能报告、联机分析处理OLAP和数据仓库；2000年代的交互式商务智能和内存数据库RDBMS，以及大数据的批处理和分布式数据存储；2010年代的大数据实时处理和单一视图。每个阶段都有其代表性技术和工具，例如1990年代的Business Objects、SAS、Informatics、Cognos等SQL Reporting Tools，2000年代的QliqView、Tableau、HANA，Hadoop/Spark，HBase/Cassandra，以及2010年代的Graph Databases。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007291,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 4,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 40,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195837,
        "nodeName": null
      }
    },
    {
      "id": 4195881,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195916,
      "knowledgeGraphId": 29889,
      "nodeName": "BI商务智能报告",
      "description": "BI商务智能报告是指通过对治理后的数据进行分析和展示，生成各种图表和数据指标，以支持企业的决策和运营。报告中需要屏蔽敏感数据，并将治理后的数据迁移到企业数据仓库（EDW）中，以确保数据的安全性和合规性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163746823,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 46,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195881,
        "nodeName": null
      }
    },
    {
      "id": 4195762,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195917,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据分析能力的培养",
      "description": "面对大数据时代的发展，每个人都应该学习从大数据角度分析问题，用大数据的方法解决问题。这需要我们具备大数据的能力和素质。大数据分析课程可以帮助大家建立大数据的知识体系，深入理解大数据分析中的概念、原理、平台和技术，通过实验实现大数据理论知识的实际运用，提升解决大数据工程问题的能力。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824844,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 0,
        "nodeId": 4195762,
        "nodeName": null
      }
    },
    {
      "id": 4195724,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195920,
      "knowledgeGraphId": 29889,
      "nodeName": "互联网数据收集与挑战",
      "description": "互联网数据包括门户网站、政府公开信息、社交媒体、电子商务、公共数据等。收集互联网数据时需要注意不同网站的结构和水平不同，爬虫策略的差异，以及数据的真实性和质量问题。网络爬虫在收集数据时可能带来服务器带宽消耗、DDoS攻击和数据窃取等负面影响。Web应用防火墙（WAF）提供了反爬虫策略，如识别User Agent、验证浏览器有效性、限制访问频率等，以保护网站免受爬虫攻击。互联网数据形式多样，包括文本、表格、音频、视频等，增加了数据收集的难度。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 3,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850905,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 66,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 0,
        "avgCompletionRate": 0,
        "hasLearnResource": 0,
        "hasQuestion": 1,
        "nodeId": 4195724,
        "nodeName": null
      }
    },
    {
      "id": 4195919,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195920,
      "knowledgeGraphId": 29889,
      "nodeName": "网络爬虫技术",
      "description": "网络爬虫爬取策略包括深度优先、广度优先、部分PageRank策略和OPIC（在线页面重要性计算）。深度优先策略是指爬虫从一个种子URL开始，沿着每个链接深入抓取，直到没有新的链接为止，然后回溯到上一个链接继续抓取。广度优先策略是指爬虫从一个种子URL开始，抓取所有直接链接的页面，然后再抓取这些页面的链接。部分PageRank策略根据页面的重要性来决定抓取顺序，重要性高的页面优先抓取。OPIC策略为每个网页分配相同的“金币”，每当一个页面被下载时，其“金币”会平均分配到该网页中包含的链接页面，待爬队列中的链接按“金币”排序。",
      "position": 1,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195756,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195919,
          "knowledgeGraphId": 29889,
          "nodeName": "网络爬虫爬取策略",
          "description": "网络爬虫爬取策略包括深度优先、广度优先、部分PageRank策略和OPIC（在线页面重要性计算）。深度优先策略是指爬虫从一个种子URL开始，沿着每个链接深入抓取，直到没有新的链接为止，然后回溯到上一个链接继续抓取。广度优先策略是指爬虫从一个种子URL开始，抓取所有直接链接的页面，然后再抓取这些页面的链接。部分PageRank策略根据页面的重要性来决定抓取顺序，重要性高的页面优先抓取。OPIC策略为每个网页分配相同的“金币”，每当一个页面被下载时，其“金币”会平均分配到该网页中包含的链接页面，待爬队列中的链接按“金币”排序。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759926,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 54,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195756,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163629244,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 54,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195919,
        "nodeName": null
      }
    },
    {
      "id": 4195918,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195920,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式爬虫架构",
      "description": "分布式网络爬虫架构包括主从架构（Master-Slave）、对等架构（Peer-to-Peer）和混合架构（Mix）。主从架构中，Master节点负责任务分配和协调，Slave节点负责具体的爬取任务，扩展时只需更新Master节点，但Master节点压力大，易造成瓶颈。对等架构中，所有节点之间进行通信，扩展时需更新所有节点，没有Master节点，不会出现单点热点，Slave节点数量限制小。混合架构中，Master节点之间进行通信，Slave节点数量限制小，但实现难度较大。",
      "position": 2,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195757,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195918,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式网络爬虫架构",
          "description": "分布式网络爬虫架构包括主从架构（Master-Slave）、对等架构（Peer-to-Peer）和混合架构（Mix）。主从架构中，Master节点负责任务分配和协调，Slave节点负责具体的爬取任务，扩展时只需更新Master节点，但Master节点压力大，易造成瓶颈。对等架构中，所有节点之间进行通信，扩展时需更新所有节点，没有Master节点，不会出现单点热点，Slave节点数量限制小。混合架构中，Master节点之间进行通信，Slave节点数量限制小，但实现难度较大。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 4,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 431721402,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195757,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981284,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 80,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 58,
            "avgCompletionRate": 17,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195757,
            "nodeName": null
          }
        }
      ],
      "level": 3,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431425638,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195918,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163994363,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 80,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 58,
        "avgCompletionRate": 17,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195918,
        "nodeName": null
      }
    },
    {
      "id": 4195869,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195741,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据定义、特征、生命周期等",
      "description": "大数据基本概念包括对大数据的定义、特征、生命周期和处理流程的理解。大数据通常指的是体量巨大、类型多样、处理速度快的数据集合。其特征包括数据量大（Volume）、数据类型多样（Variety）、数据处理速度快（Velocity）和数据价值密度低（Value）。大数据的生命周期涵盖数据的生成、采集、存储、处理、分析和应用等多个阶段。大数据处理流程则包括数据获取、数据预处理、数据存储、数据处理和数据分析等步骤。",
      "position": 0,
      "labelNameList": ["重点", "难点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707869,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 18,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 76,
        "avgCompletionRate": 16,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195869,
        "nodeName": null
      }
    },
    {
      "id": 4195821,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195899,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的种类",
      "description": "大数据的种类指的是数据的多样性，包括结构化数据、半结构化数据和非结构化数据。结构化数据如关系数据，半结构化数据如XML，非结构化数据如文本数据、图表数据等。单个应用程序可以生成和收集多种类型的数据，这些数据需要链接在一起以提取有价值的知识。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902876,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 47,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195821,
        "nodeName": null
      }
    },
    {
      "id": 4195855,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195899,
      "knowledgeGraphId": 29889,
      "nodeName": "数据类型比例",
      "description": "根据Gartner的统计，企业数据中80%是非结构化数据，20%是结构化数据。非结构化数据包括网站信息、技术白皮书、电子邮件、会议纪要等，而结构化数据则包括ID、Forename、Surname、Age等字段的表格数据。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824849,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 14,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 54,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195855,
        "nodeName": null
      }
    },
    {
      "id": 4195889,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195900,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的规模与速度",
      "description": "大数据的规模与速度是大数据分析中的两个关键因素。大数据的规模指的是数据量的巨大增长，从2009年的0.8 ZB到2020年的35.2 ZB，增长了44倍，预计到2025年将达到175 ZB。这种指数级增长对数据存储和处理提出了巨大挑战。大数据的速度指的是数据生成和处理的速度，随着数据生成速度的加快，实时数据分析变得越来越重要，例如电子促销和健康检测需要快速处理和反应，以便及时做出决策。数据的快速生成和处理能力是大数据分析中的关键因素。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195819,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195889,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的规模",
          "description": "大数据的规模指的是数据量的巨大增长。从2009年到2020年，全球数据量从0.8 ZB增长到35.2 ZB，增长了44倍。根据IDC《数据时代2025》报告，到2025年，全球数据量预计将达到175 ZB。这种数据量的指数级增长对数据存储和处理提出了巨大的挑战。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707867,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 94,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 47,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195819,
            "nodeName": null
          }
        },
        {
          "id": 4195820,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195889,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的速度",
          "description": "大数据的速度指的是数据生成和处理的速度。随着数据生成速度的加快，实时数据分析变得越来越重要。例如，电子促销和健康检测都需要快速处理和反应，以便及时做出决策。数据的快速生成和处理能力是大数据分析中的一个关键因素。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163876927,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 83,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 47,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195820,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642429,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 89,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 47,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195889,
        "nodeName": null
      }
    },
    {
      "id": 4195890,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195900,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的五大特征",
      "description": "大数据具有五个主要特征：规模（Volume）、速度（Velocity）、种类（Variety）、真伪（Veracity）和价值（Value）。规模指的是数据的庞大数量，随着时间的推移，数据量呈指数级增长。速度指的是数据生成和处理的速度，实时数据处理和分析变得至关重要。种类指的是数据的多样性，包括结构化和非结构化数据。真伪指的是数据的准确性和可信度，需要过滤和处理不必要的信息。价值指的是从数据中提取的潜在价值，数据必须是可靠的、有用的，才能支持数据分析和处理。",
      "position": 0,
      "labelNameList": ["重点", "难点"],
      "children": [
        {
          "id": 4195740,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "大数据的特征",
          "description": "大数据具有五个主要特征：规模（Volume）、速度（Velocity）、种类（Variety）、真伪（Veracity）和价值（Value）。规模指的是数据的庞大数量；速度指的是数据生成和处理的速度；种类指的是数据的多样性，包括结构化和非结构化数据；真伪指的是数据的准确性和可信度；价值指的是从数据中提取的潜在价值。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428807156,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195740,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915905,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 83,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 181,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 154,
            "avgCompletionRate": 22,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195740,
            "nodeName": null
          }
        },
        {
          "id": 4195755,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "网络大数据特征",
          "description": "网络大数据具有多元异构、及时性、社会性、交互性、突发性和高噪声等特征。多元异构指互联网的数据来自于多个不同的数据源，不同的数据源的数据结构不同。及时性是指当事情发生时，可以立即发布。社会性是指网络大数据可以直接反映社会情况。交互性是指网民可以发布信息并回复和转发别人的信息。突发性是指一些新闻传播会导致短时间内产生大量新的网络数据。高噪声是指互联网的数据质量不高，充满了脏数据，价值密度低。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 430658464,
            "gmtCreate": 1760665956000,
            "gmtModified": 1760665956000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 65,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195755,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968223,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 72,
            "questionJoinCount": 14,
            "avgLearnedTimeCount": 80,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 58,
            "avgCompletionRate": 17,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195755,
            "nodeName": null
          }
        },
        {
          "id": 4195811,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "Volume",
          "description": "Volume指的是数据的规模和容量。随着时间的推移，数据的规模呈指数级增长，从2009年的0.5个Zettabyte增长到2020年的35个Zettabyte。数据的来源多种多样，包括物联网设备、社交媒体、视频、金融交易和客户日志等。到2025年，全球数据预计将达到175个Zettabyte。Volume是大数据的一个重要特征，反映了数据量的巨大和不断增长的趋势。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429435533,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195811,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163616261,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 160,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 88,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195811,
            "nodeName": null
          }
        },
        {
          "id": 4195812,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "Variety",
          "description": "Variety指的是数据的多样性。数据来源和形式多种多样，包括电子表格、数据库、照片、音频文件、视频、文本文件、PDF、关系型数据库、半结构化数据、图表数据、社交网络数据、语义网络数据等。多样性对数据的存储和分析提出了挑战，需要将不同类型的数据连接在一起，以提取有用的信息。Variety是大数据的一个重要特征，反映了数据形式的多样性和复杂性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429836595,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195812,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163681790,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 160,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 88,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195812,
            "nodeName": null
          }
        },
        {
          "id": 4195813,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "Velocity",
          "description": "Velocity指的是数据生成和处理的速度。随着传感器、社交网络媒体、应用程序和网络日志等的普及，数据生成的速度越来越快。实时数据处理和分析变得至关重要，以便及时做出决策。例如，电子营销需要根据用户的位置和购买历史快速推荐促销信息，医疗保健监测需要及时响应异常行为。Velocity是大数据的一个重要特征，反映了数据生成和处理的高速度要求。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428236307,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195813,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163746821,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 160,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 88,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195813,
            "nodeName": null
          }
        },
        {
          "id": 4195814,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "Veracity",
          "description": "Veracity指的是数据的真实性和可信度。由于数据的不一致、不完整、歧义、延迟、欺骗和模型近似等原因，数据可能存在不确定性。需要过滤掉不必要的信息，处理有用的数据，以确保数据的可靠性。Veracity是大数据的一个重要特征，反映了数据质量和可信度的重要性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429035295,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195814,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785659,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 160,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 88,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195814,
            "nodeName": null
          }
        },
        {
          "id": 4195815,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195890,
          "knowledgeGraphId": 29889,
          "nodeName": "Value",
          "description": "Value指的是数据的价值。无论数据的生成速度有多快，数量有多大，数据必须是可靠的、有用的，才能支持数据分析和处理。质量差的数据可能导致公司收入损失。数据科学家需要将原始数据转换成有用的信息，清理数据集，提取最有用的数据进行分析和模式识别。Value是大数据的一个重要特征，反映了数据的实际应用价值。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428521567,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195815,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163707866,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 160,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 88,
            "avgCompletionRate": 21,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195815,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 7,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431366376,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 75,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195890,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785663,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 82,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 421,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 175,
        "avgCompletionRate": 20,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195890,
        "nodeName": null
      }
    },
    {
      "id": 4195717,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195716,
      "knowledgeGraphId": 29889,
      "nodeName": "数据密集型科学发现",
      "description": "数据密集型科学发现是第四研究范式的核心理念。它强调利用大量的数据进行分析和总结，从而得出科学结论。这种方法不同于传统的科学研究范式，它不再依赖于简化模型和假设，而是通过全面的数据分析揭示复杂现象的本质。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429549915,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195717,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163850904,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 78,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 167,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 91,
        "avgCompletionRate": 25,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195717,
        "nodeName": null
      }
    },
    {
      "id": 4195777,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195775,
      "knowledgeGraphId": 29889,
      "nodeName": "深网数据采集",
      "description": "深网数据采集包括两个阶段：查询接口的识别和自动填写表格执行查询。首先需要识别深网对外公布的接口，然后通过自动填写表格获取数据。对于特定网站，可以手动编写或提供爬虫脚本获取数据，但这种方法扩展性较差。构建通用的深网爬虫需要特殊设计，包括查询界面的识别、HTML表单解析、自动发现深网数据资源、表单自动填充、页面分类器和表单分类器的构建等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428978160,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195777,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733951,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 84,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 15,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195777,
        "nodeName": null
      }
    },
    {
      "id": 4195707,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195911,
      "knowledgeGraphId": 29889,
      "nodeName": "增量数据提取",
      "description": "增量数据提取是一种数据抽取方法，每次仅提取自上次提取以来在原数据库中新增或修改的记录。常见的增量数据提取方法包括日志对比、时间戳、触发器和全表对比。增量提取的优点是减少了数据冗余，降低了对业务系统的影响。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195843,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195707,
          "knowledgeGraphId": 29889,
          "nodeName": "增量提取方法",
          "description": "增量提取的方法有四种：1. 日志对比，通过数据库日志评估变化的数据，使用CDC组件识别自上次提取以来发生更改的数据；2. 时间戳，在更新记录数据的同时添加和修改时间戳字段值，通过比较系统时间和时间戳的值来捕捉变化的数据；3. 触发器，在数据表上创建触发器，每当源表数据发生变化时，通过触发器将变化的数据写入临时表；4. 全表对比，通过对比源表和MD5临时表中的数据来识别变化的数据。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163655500,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 50,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 42,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195843,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431307445,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195707,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707862,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 69,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 175,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 77,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195707,
        "nodeName": null
      }
    },
    {
      "id": 4195880,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195903,
      "knowledgeGraphId": 29889,
      "nodeName": "数据管理的过程",
      "description": "数据管理的过程包括对数据进行发现和画像、用元数据来管理和丰富数据集以及为业务分析解析和准备数据。通过这些步骤，可以确保数据的质量和可用性，为后续的商务智能报告和数据分析提供可靠的数据基础。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837891,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 46,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195880,
        "nodeName": null
      }
    },
    {
      "id": 4195749,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195904,
      "knowledgeGraphId": 29889,
      "nodeName": "数据规约",
      "description": "数据规约是指通过技术手段减少数据集的规模，同时保持数据集的完整性和分析结果的质量。数据规约的目的是提高数据分析的效率，减少处理时间。常见的数据规约技术包括降维和数据量减少。降维方法有属性子集选择、主成分分析和小波变换；数据量减少方法有无参数和有参数的约减方法，如数据立方体聚合、聚类、抽样和直方图等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428635514,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195749,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968222,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 82,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195749,
        "nodeName": null
      }
    },
    {
      "id": 4195750,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195904,
      "knowledgeGraphId": 29889,
      "nodeName": "属性子集选择",
      "description": "属性子集选择是数据归约的一种方法，通过选择相关属性子集来减少数据维度。常用的方法包括向前选择法、向后选择法和逐步向后删除法。向前选择法从一个空属性集开始，每次从原来属性集合中选择一个当前最优的属性添加到当前属性子集中，直到满足一定的约束为止。向后选择法从包含所有变量的模型开始，每次去掉最没有意义的变量，直到到达终止条件或者没有可剔除的变量为止。逐步向后删除法从一个全属性集开始，每次从当前属性子集中选择一个当前最差的属性并将其消去，直到无法选择出最差属性为止或满足一定阈值约束为止。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694763,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 31,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195750,
        "nodeName": null
      }
    },
    {
      "id": 4195751,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195904,
      "knowledgeGraphId": 29889,
      "nodeName": "数据压缩",
      "description": "数据压缩是数据归约的一种技术，通过数据编码或者变换，得到原始数据的压缩表示。数据压缩技术包括无损压缩和有损压缩。无损压缩可以不丢失任何信息地还原压缩数据，例如字符串压缩。有损压缩只能重新构造原数据的近似表示，例如音频/视频压缩。主成分分析（PCA）是一种常用的数据压缩方法，通过将数据从多维空间投影到低维空间，实现数据压缩。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902874,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 31,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195751,
        "nodeName": null
      }
    },
    {
      "id": 4195718,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195905,
      "knowledgeGraphId": 29889,
      "nodeName": "多数据源数据质量",
      "description": "多数据源的数据质量问题主要包括命名冲突、结构冲突和数据内容冲突。命名冲突是指不同数据对象采用相同的名字或同一数据对象采用不同的名字。结构冲突是指不同数据源中同一数据对象的表示方式不同，例如日期格式的不同（dd/mm/yyyy、yyyy/mm/dd、mm/dd/yyyy），以及不同数据集中同一对象的属性粒度、组成结构、数据类型和完整性约束的不同。数据内容冲突包括记录重复、记录冲突以及不同数据源之间的数据值表示不同等问题。这些问题需要通过数据集成和数据清洗来解决。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149283,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195718,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694762,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 47,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 69,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 70,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195718,
        "nodeName": null
      }
    },
    {
      "id": 4195715,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195906,
      "knowledgeGraphId": 29889,
      "nodeName": "单数据源的数据质量问题",
      "description": "单数据源的数据质量问题包括模型层面和实力层面的问题。模型层面的问题依赖于设计模型对数据完整性的约束，例如日期格式的统一性。实力层面的问题包括数据输入错误、属性值错误、属性之间的不一致以及记录之间的不一致等。这些问题需要通过数据清洗来解决。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206467,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195715,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876922,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 67,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 14,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195715,
        "nodeName": null
      }
    },
    {
      "id": 4195844,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195906,
      "knowledgeGraphId": 29889,
      "nodeName": "单一数据源模型层数据质量问题",
      "description": "单一数据源模型层的数据质量问题主要依赖于设计模式对数据的完整性约束。数据库的完整性约束决定了哪些数据值是可以被接受的。例如，表示日期的数据需要约束日期的格式和类型，确保数据库中所有日期数据的格式统一，如dd/mm/yyyy、yyyy/mm/dd、mm/dd/yyyy。然而，对于文件和web数据这些没有统一约束的数据源来说，数据值错误和不一致的可能性大大增加。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824847,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 36,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 2,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195844,
        "nodeName": null
      }
    },
    {
      "id": 4195845,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195906,
      "knowledgeGraphId": 29889,
      "nodeName": "单一数据源实例层数据质量问题",
      "description": "单一数据源实例层的数据质量问题是模式设计层面无法避免的，例如数据输入的错误等。实例层面的数据质量问题包括拼写错误、冗余和重复记录、属性值冲突等。例如，在一个数据表中，同一个日期可能会以不同的格式出现（如19/05/1974、05/19/1974），这会导致数据的不一致和错误。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824848,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 34,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 2,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195845,
        "nodeName": null
      }
    },
    {
      "id": 4195714,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195907,
      "knowledgeGraphId": 29889,
      "nodeName": "数据质量问题分类",
      "description": "数据质量问题可以按照数据源的数量和数据问题出现的阶段进行分类。按照数据源的数量，可以分为单数据源和多数据源。按照数据问题出现的阶段，可以分为模型层面和实力层面。模型层面的问题可以通过改善模型设计、模型转换和模型集成来解决，而实力层面的问题则需要在数据清洗过程中解决。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429607269,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195714,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785654,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 18,
        "avgLearnedTimeCount": 67,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 60,
        "avgCompletionRate": 14,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195714,
        "nodeName": null
      }
    },
    {
      "id": 4195772,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195870,
      "knowledgeGraphId": 29889,
      "nodeName": "数据存储与数据清洗",
      "description": "在获取数据后，需要对数据进行转换以便于进一步存储和处理。由于大数据的性质，通常需要分布式的数据存储解决方案。接下来，数据科学家需要清理数据，删除错误数据、冗余数据和其他脏数据，以确保数据质量。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429607272,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195772,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824845,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 106,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 76,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195772,
        "nodeName": null
      }
    },
    {
      "id": 4195791,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195902,
      "knowledgeGraphId": 29889,
      "nodeName": "缺失值处理",
      "description": "缺失值处理是指在数据集中处理缺失数据的过程。缺失值可能由于设备异常或数据输入时被忽略而产生。处理缺失值的方法包括忽略记录、使用默认值、使用属性的平均值、使用相似样本的平均值或预测缺失值的最可能值。通过这些方法，可以确保数据的完整性，从而不影响后续的数据分析。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428350565,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195791,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163994361,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 85,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 62,
        "avgCompletionRate": 13,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195791,
        "nodeName": null
      }
    },
    {
      "id": 4195792,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195902,
      "knowledgeGraphId": 29889,
      "nodeName": "重复记录清洗",
      "description": "重复记录清洗是指在数据集中去除重复记录的过程。重复记录可能由于整合多个数据源或数据输入时的重复输入而产生。处理重复记录的方法包括删除完全重复的记录、增加冗余属性来标识不同的重复记录，并通过比较相关属性的相似度来判断记录是否重复。清洗重复记录可以提高数据分析的精度和速度。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429664665,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195792,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876925,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 67,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 85,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 62,
        "avgCompletionRate": 13,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195792,
        "nodeName": null
      }
    },
    {
      "id": 4195793,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195902,
      "knowledgeGraphId": 29889,
      "nodeName": "噪声数据清洗",
      "description": "噪声数据清洗是指在数据集中剔除由随机错误或偏差引起的孤立数据的过程。噪声数据会影响数据分析的结果。处理噪声数据的方法包括分箱算法、聚类算法和回归算法。分箱算法通过将数据分割成多个箱子并对每个箱子内的数据进行平滑处理；聚类算法通过将相似的数据对象分组并剔除不在类范围内的异常值；回归算法通过拟合函数对数据进行平滑处理。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195822,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195793,
          "knowledgeGraphId": 29889,
          "nodeName": "分箱算法",
          "description": "分箱算法是一种处理噪声数据的技术，通过将数据按照一定规则分入不同的箱子中进行处理。分箱方法包括等深分箱、等宽分箱和用户自定义间隔分箱。分箱后可以对数据进行平滑处理，如平均平滑、边界值平滑和中值平滑，以减少数据的波动和噪声。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163798797,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 38,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195822,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428179359,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195793,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616260,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 155,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 73,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195793,
        "nodeName": null
      }
    },
    {
      "id": 4195849,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195902,
      "knowledgeGraphId": 29889,
      "nodeName": "数据清洗和建模",
      "description": "数据清洗和建模是大数据分析中的关键步骤。数据清洗包括从多个数据源中提取数据，处理缺失记录、缺失值范围和不同级别的数据质量问题，通过合并或删除重复数据项来消除数据错误。数据建模则是为实体建立一个抽象的模型，定义数据属性和取值范围，确保数据的一致性和时效性。数据清洗和建模可以手动完成，也可以使用软件工具完成。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007292,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 25,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195849,
        "nodeName": null
      }
    },
    {
      "id": 4195851,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195731,
      "knowledgeGraphId": 29889,
      "nodeName": "数据源包装器",
      "description": "数据源包装器是统一数据访问层架构中的一个重要组件，负责连接统一数据访问层和异构数据源。它的作用是将来自不同数据源（如CRM、ERP、financials、Social Media、Exhaust Data、logs、files等）的数据进行包装和转换，使其能够被统一数据访问层的其他组件（如数据转换引擎、数据服务引擎等）处理，从而实现数据的统一检索和服务。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681794,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 25,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195851,
        "nodeName": null
      }
    },
    {
      "id": 4195858,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195809,
      "knowledgeGraphId": 29889,
      "nodeName": "基于列存储的表",
      "description": "基于列存储的表具有扫描速度快、无需索引、动态视图、动态计算等优势。通过压缩技术，列存储表能够减少对主存的访问，提高数据处理效率。使用SAP HANA，表数据可以达到5倍的压缩比，进一步提升了数据处理性能和存储效率。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733954,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 21,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195858,
        "nodeName": null
      }
    },
    {
      "id": 4195734,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195895,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS数据写入过程",
      "description": "HDFS的数据写入过程包括以下步骤：1. 客户端调用create函数创建文件；2. NameNode执行检查并记录新文件；3. 分布式文件系统返回一个FSDataOutputStream供客户端写数据；4. 数据被拆分为数据包并写入内部队列；5. DataStreamer请求NameNode分配数据块并通过管道传输数据包；6. 数据包在管道中的各个DataNode之间传输并存储；7. 客户端完成写入并调用close函数，等待所有数据包确认后通知NameNode文件写入完成。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428807155,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195734,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785656,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 98,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 48,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195734,
        "nodeName": null
      }
    },
    {
      "id": 4195735,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195895,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS数据读取过程",
      "description": "HDFS的数据读取过程包括以下步骤：1. 客户端调用open函数打开文件；2. NameNode返回文件数据块所在的DataNode地址；3. 客户端调用read方法读取数据块；4. 数据以数据包形式从DataNode流回客户端；5. 到达块末尾时，客户端关闭与DataNode的连接并找到下一个数据块的最佳DataNode；6. 客户端完成读取并调用close函数。如果在读取过程中遇到错误，客户端会尝试从下一个最近的DataNode读取数据，并将失败的DataNode反馈给NameNode。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429664660,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195735,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863966,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 98,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 48,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195735,
        "nodeName": null
      }
    },
    {
      "id": 4195732,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195896,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式文件系统",
      "description": "分布式文件系统（Distributed File System）是大数据存储系统的重要组成部分，用于在多个节点上存储和管理数据。它提供高可用性和高可靠性的数据存储解决方案，支持大规模数据的存储和访问。分布式文件系统通过数据分片和复制机制，确保数据的安全性和可用性，是大数据计算的基础设施之一。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429263829,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195732,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837886,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 48,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 48,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 44,
        "avgCompletionRate": 12,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195732,
        "nodeName": null
      }
    },
    {
      "id": 4195842,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195896,
      "knowledgeGraphId": 29889,
      "nodeName": "分区容错性",
      "description": "分区容错性是指当系统中的一个分区不能与其他节点通信时，不影响系统其余部分的正常运行，或者部分系统数据的错误或丢失不影响系统的整体运作。这是CAP定理中的一个重要概念，强调在分布式系统中，系统需要能够处理网络分区的情况，以保证系统的可用性和一致性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694766,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 28,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195842,
        "nodeName": null
      }
    },
    {
      "id": 4195862,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195896,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式文件系统-以HDFS为例",
      "description": "分布式文件系统是一种将数据分布存储在多个节点上的文件系统，旨在提高数据的可靠性和访问速度。HDFS（Hadoop Distributed File System）是一个典型的分布式文件系统，它通过NameNode和DataNode的协作来管理和存储数据。NameNode负责管理文件系统的命名空间和元数据，而DataNode负责存储实际的数据块。HDFS的数据块默认大小为128MB，数据一旦写入便不可修改，以确保数据的一致性和完整性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824850,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 28,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195862,
        "nodeName": null
      }
    },
    {
      "id": 4195876,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195896,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式存储",
      "description": "分布式存储是大数据分析中的一个关键组成部分。它通过将数据分散存储在多个节点上，来提高数据存储的冗余性和可靠性，同时降低存储成本。常见的分布式文件系统包括HDFS、GFS和Colossus。分布式存储系统能够处理大规模数据，并且支持高效的数据访问和管理。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929030,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 94,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 30,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195876,
        "nodeName": null
      }
    },
    {
      "id": 4195720,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195897,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS存储机制",
      "description": "HDFS（Hadoop分布式文件系统）是大数据存储的核心组件，负责将数据分块存储。每个数据块默认大小为64MB，可以配置为128MB。HDFS支持一次写入，多次读取，但不支持修改。数据块的分布式存储和复制机制确保了数据的可靠性和高可用性。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681788,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 111,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195720,
        "nodeName": null
      }
    },
    {
      "id": 4195733,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195897,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS架构",
      "description": "HDFS（Hadoop Distributed File System）采用主从结构，包括一个主节点（NameNode）和多个从节点（DataNode）。NameNode负责管理文件系统的命名空间、文件到数据块的映射以及客户端的访问调度。DataNode负责存储文件数据块，并在NameNode的调度下进行数据块的创建、删除和复制。HDFS还包括一个次名称节点（Secondary NameNode），用于定期与主名称节点同步数据，并在主节点失效时提供恢复功能。",
      "position": 0,
      "labelNameList": ["重点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428864535,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195733,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007287,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 51,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 98,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 48,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195733,
        "nodeName": null
      }
    },
    {
      "id": 4195875,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195897,
      "knowledgeGraphId": 29889,
      "nodeName": "HDFS一次写入多次读取",
      "description": "HDFS（Hadoop分布式文件系统）设计为一次写入多次读取，不支持修改。这是因为在读块的同时写入数据会导致块大小变化，影响后续块的偏移量，进而导致泛洪现象，消耗大量资源。为了保证系统的稳定性和高效性，HDFS选择不支持修改操作。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163798799,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 25,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195875,
        "nodeName": null
      }
    },
    {
      "id": 4195802,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "键值数据库",
      "description": "键值数据库基于键值对（key-value）来存储和查询数据。数据以键值对的形式存储，设计用于处理大量数据和高负载。键可以是字符串型，值可以是任何类型，如整数、字符、数组、列表、集合、JSON数据和BLOB二进制大对象等。底层结构通常使用哈希表对键进行索引和管理，以支持快速查询。然而，键值数据库不支持基于数据值的查询，适用于存储无模式数据，如购物车内容。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428807161,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195802,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902875,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 59,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 55,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 42,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195802,
        "nodeName": null
      }
    },
    {
      "id": 4195803,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "图数据库",
      "description": "图数据库将社会关系和其他数据描述为顶点和边，顶点表示实体（如个人、公司、账户等），边表示顶点之间的关系。图数据库直接定义并存储数据之间的关系，使得关系查询非常快速。图数据库适用于处理高度相关的数据，如社交网络、模式识别、依赖分析、推荐系统和路径查找等问题。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428464537,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195803,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785658,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 55,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 42,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195803,
        "nodeName": null
      }
    },
    {
      "id": 4195807,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "文档数据库",
      "description": "文档数据库是一种以键值对形式存储和检索数据的数据库，其中值部分以文档形式存储，常见格式为JSON或XML。文档数据库没有固定的模式，具有高度的灵活性，适合管理面向文档的数据或半结构化数据。它们通常用于内容管理系统（CMS）、博客平台、实时分析和电子商务应用，尤其适合后台有大量读写操作的网站。然而，文档数据库不适合需要对不同聚合结构进行复杂操作和查询的场景。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429320994,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195807,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733953,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 55,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 51,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195807,
        "nodeName": null
      }
    },
    {
      "id": 4195872,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "NoSQL数据库类型",
      "description": "NoSQL数据库类型包括文档存储、键值对存储、列存储和图数据库。文档存储数据库以键值对的形式存储数据，值部分以文档形式存储，常用格式为JSON或XML。键值对存储数据库通过键值对的方式存储数据，适用于简单查询。列存储数据库基于列存储结构，适合高压缩比和高效的聚合查询。图数据库通过点和边表示数据及其关系，适用于处理高度相关的数据。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163746822,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 24,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195872,
        "nodeName": null
      }
    },
    {
      "id": 4195808,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "列存储数据库",
      "description": "列存储数据库采用列存储结构，数据根据列进行检索、存储和管理。每一列单独处理，值是连续存储的，支持高压缩比和高效的聚合查询（如SUM、COUNT、AVERAGE、MEAN）。这种数据库适用于管理数据仓库、商业智能、客户关系管理等应用场景，但不适合实时删除或更新整个记录，也不支持数据表的JOIN操作。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206474,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195808,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837890,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 55,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 51,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195808,
        "nodeName": null
      }
    },
    {
      "id": 4195804,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "CAP定理",
      "description": "CAP定理是指在一个分布式系统中，不能同时满足一致性（Consistency）、可用性（Availability）和分区容忍性（Partition Tolerance）这三个要求，而最多只能满足其中的两个。CAP定理的C代表一致性，意思是在分布式环境中，多个存储节点的数据同时具有相同的数据值，所有的数据备份更新都要同步。A代表可用性，即客户端可以快速读取数据，在合理的时间内返回操作结果，保证每一个请求无论成功或失败都必须有响应。P代表分区容忍性，意思是当系统中的一个分区不能与其他节点通信时，不影响系统其余部分的正常运行，或者当部分系统的数据发生错误或丢失时，不影响整个系统的运作。根据CAP定理，一个分布式系统中数据的读写操作中只能满足两个，不能满足三个，这也导致了关系数据库和NoSQL数据库的区别。",
      "position": 2,
      "labelNameList": ["重点", "难点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429206473,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195804,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929027,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 47,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 73,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 45,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195804,
        "nodeName": null
      }
    },
    {
      "id": 4195805,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195886,
      "knowledgeGraphId": 29889,
      "nodeName": "BASE模型",
      "description": "BASE模型是NoSQL数据库中的事务模型，BASE是Basic Available（基本可用）、Soft State（软状态）和Eventual Consistency（最终一致性）的缩写。基本可用指的是当分布式系统的一部分因为有问题变得不可用时，其他部分仍然可以正常使用。软状态是相对于硬状态的一个术语，指状态可以在一段时间内不同步，有一定的滞后。最终一致性是指后续访问的操作暂时可能无法读取更新了的数据，但经过一个短暂的时间之后，最终还是必须要读取到更新的数据。BASE模型与传统关系型数据库的ACID模型不同，ACID模型强调的是原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability），而BASE模型则更适合分布式系统的特点。",
      "position": 3,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429492740,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195805,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642426,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 73,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 45,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195805,
        "nodeName": null
      }
    },
    {
      "id": 4195719,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195888,
      "knowledgeGraphId": 29889,
      "nodeName": "MapReduce计算模型",
      "description": "MapReduce计算模型是大数据批处理计算的代表性模型，主要包括两个阶段：Map阶段和Reduce阶段。在Map阶段，数据从HDFS中读取并经过处理生成中间结果，这些中间结果被存储到HDFS中。接着在Reduce阶段，这些中间结果被进一步处理，生成最终的输出并存储到HDFS中。MapReduce通过在分布式环境下进行并行计算来提高处理效率，适用于处理大规模的结构化和非结构化数据。该模型通过将数据分割成多个小块，并在多个节点上并行处理这些小块，实现高效的数据处理。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163889958,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 42,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 115,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195719,
        "nodeName": null
      }
    },
    {
      "id": 4195721,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195888,
      "knowledgeGraphId": 29889,
      "nodeName": "任务调度与资源管理",
      "description": "在MapReduce架构中，任务调度由Job Tracker和Task Tracker协同完成。Job Tracker负责监视资源使用情况和作业调度，Task Tracker定期向Job Tracker报告资源使用情况和任务进度。任务调度器（Task Scheduler）根据资源空闲情况选择适当的任务来使用这些资源。任务调度的有效性直接影响到整个计算过程的效率。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968220,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 42,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 111,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195721,
        "nodeName": null
      }
    },
    {
      "id": 4195873,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195888,
      "knowledgeGraphId": 29889,
      "nodeName": "MapReduce工作流程",
      "description": "MapReduce是一种用于处理大量数据的批处理计算模型。其工作流程包括将输入数据分割成多个split，每个split经过map阶段处理后，进行sort和copy操作。sort和copy后的数据进行merge操作，然后进入reduce阶段。reduce阶段处理后的结果分别输出为part 0和part 1，并存储到output HDFS中。最终，HDFS进行数据复制（replication）以保证数据的冗余和可靠性。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668729,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 25,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195873,
        "nodeName": null
      }
    },
    {
      "id": 4195753,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195752,
      "knowledgeGraphId": 29889,
      "nodeName": "超步(superstep)",
      "description": "超步是并行图计算模型中的一个关键概念。在每个超步中，处理单元首先接收前一个超步传递的所有消息，然后根据消息操纵本地数据，并将消息排队发送给其他处理单元。所有处理单元完成消息传递后，进入下一个超步。超步的执行过程包括计算和通信两个阶段，节点在计算阶段完成任务，在通信阶段发送和接收消息。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428921479,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195753,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863967,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 38,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 28,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195753,
        "nodeName": null
      }
    },
    {
      "id": 4195754,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195752,
      "knowledgeGraphId": 29889,
      "nodeName": "图分区与消息传递",
      "description": "图分区是并行图计算模型中的基本执行单元，每个分区包含大量节点，并由一个线程执行。消息传递系统用于在分区之间传递消息，节点通过消息传递来激活其他节点并进行计算。Pregel架构采用消息传递系统来创建大规模图形处理框架，减少网络通信开销，提高计算性能。消息传递系统包括两个消息队列，分别用于当前超步和下一个超步的消息传递。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149288,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195754,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163720949,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 37,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 28,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195754,
        "nodeName": null
      }
    },
    {
      "id": 4195882,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195752,
      "knowledgeGraphId": 29889,
      "nodeName": "BulkSynchronousParallel(BSP)",
      "description": "Bulk Synchronous Parallel（BSP）是一种并行计算模型，广泛应用于大数据处理系统中。BSP模型将计算过程分为多个超级步（Superstep），每个超级步包括计算、通信和同步三个阶段。各个计算节点在每个超级步中独立进行计算，并在超级步结束时进行全局同步。BSP模型的优点在于其简单的编程模型和良好的可扩展性，常用于图计算和大规模数据处理。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968226,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 23,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195882,
        "nodeName": null
      }
    },
    {
      "id": 4195884,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195752,
      "knowledgeGraphId": 29889,
      "nodeName": "GooglePregel架构",
      "description": "Google Pregel是一种专门用于大规模图计算的分布式计算框架。其架构包括Master节点和多个Worker节点，Master节点负责全局控制和协调，Worker节点负责具体的图计算任务。Pregel采用BSP模型进行计算，图数据被分割成多个分区（Graph Partition），每个分区包含顶点（Vertices）和出边（Edges-Out）。计算过程包括状态转移（State transition）、全局和局部聚合（Global/Local Aggregation）、消息传递（Message passing）等步骤。Pregel的持久化存储使用Google文件系统（GFS）。",
      "position": 3,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668730,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 44,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 23,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195884,
        "nodeName": null
      }
    },
    {
      "id": 4195848,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195742,
      "knowledgeGraphId": 29889,
      "nodeName": "流计算模型",
      "description": "流计算模型是一种用于处理动态流数据的计算模型。它通过持续接收和处理实时数据流来实现数据的快速处理和分析。流计算模型通常包括数据输入、内存处理和知识生成三个阶段。数据输入阶段负责接收实时数据流；内存处理阶段负责在内存中对数据进行快速处理；知识生成阶段负责将处理后的数据转化为有用的信息。流计算模型适用于需要实时处理和分析的数据场景，如金融交易监控、网络流量分析等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785662,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 4,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 25,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195848,
        "nodeName": null
      }
    },
    {
      "id": 4195743,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195826,
      "knowledgeGraphId": 29889,
      "nodeName": "弹性分布式数据集(RDD)",
      "description": "弹性分布式数据集（RDD）是Spark中用于分布式内存计算的核心数据结构。RDD是跨集群节点划分的元素集合，可以并行操作。RDD的创建可以从Hadoop文件系统或其他支持的文件系统中的原始大文件开始，或者从驱动程序中的现有Scala集合开始。RDD的操作分为转换（Transform）和动作（Action），转换操作不会立即计算结果，只有在动作操作时才会触发计算。RDD具有容错性，可以在节点故障时自动恢复数据。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428293243,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195743,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955180,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195743,
        "nodeName": null
      }
    },
    {
      "id": 4195744,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195826,
      "knowledgeGraphId": 29889,
      "nodeName": "惰性求值(LazyEvaluation)",
      "description": "惰性求值是Spark中RDD的一种特性，即RDD的转换操作不会立即执行，只有在遇到动作操作时才会触发计算。这种机制通过减少不必要的计算，优化了查询执行过程，从而提高了计算效率。惰性求值在节省计算开销方面发挥着重要作用，通过减少查询的数量来提供优化。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428464535,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195744,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616257,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 54,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195744,
        "nodeName": null
      }
    },
    {
      "id": 4195865,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195799,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式策略",
      "description": "分布式策略API使得在不同硬件配置上分发和训练模型变得容易，而无需更改模型定义。TensorFlow支持一系列硬件加速器，如CPU、GPU和TPU，训练工作负载可以分配到单节点/多加速器，以及多节点/多加速器配置，包括TPU Pods。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811899,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 21,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195865,
        "nodeName": null
      }
    },
    {
      "id": 4195887,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195799,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式计算",
      "description": "分布式计算是指使用一组廉价的服务器组成一个服务器集群来代替昂贵的高性能服务器，以实现高性能和高冗余性。分布式计算的思想是通过多个节点协同完成大数据存储和处理的任务，解决单个节点无法处理超大数据规模的问题。关键的硬件和软件突破使得分布式计算成为可能，降低了硬件成本，并通过自动化流程优化使用。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195768,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195887,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式计算",
          "description": "分布式计算是指使用一组廉价的服务器组成一个服务器集群来代替昂贵的高性能服务器，以实现高性能和高冗余性。分布式计算的思想是通过多个节点协同完成大数据存储和处理的任务，解决单个节点无法处理超大数据规模的问题。关键的硬件和软件突破使得分布式计算成为可能，降低了硬件成本，并通过自动化流程优化使用。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429664663,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195768,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929025,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 52,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 177,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 78,
            "avgCompletionRate": 19,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195768,
            "nodeName": null
          }
        },
        {
          "id": 4195877,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195887,
          "knowledgeGraphId": 29889,
          "nodeName": "分布式处理",
          "description": "分布式处理是大数据分析中的另一个重要组成部分。它通过将计算任务分散到多个节点上进行并行处理，从而提高计算效率和处理能力。常见的分布式处理框架包括Hadoop的MapReduce、Spark和Storm等。分布式处理系统能够处理大规模数据分析任务，并且支持多种计算模型，如批处理、流处理和图计算。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642428,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 94,
            "questionJoinCount": 17,
            "avgLearnedTimeCount": 30,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 49,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195877,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429378310,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195887,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163824851,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 207,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 92,
        "avgCompletionRate": 14,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195887,
        "nodeName": null
      }
    },
    {
      "id": 4195847,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195941,
      "knowledgeGraphId": 29889,
      "nodeName": "数据分布与并行性",
      "description": "在MPP数据库中，数据分布是实现并行处理的关键。通过使用DISTRIBUTED by子句创建数据库表，数据自动分布在各个段数据库中。这种分布方式确保了数据处理的并行性，提高了查询和计算的效率。在Greenplum中，数据可以通过散列分布或循环分布进行分配，以优化不同类型的工作负载。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785661,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 22,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195847,
        "nodeName": null
      }
    },
    {
      "id": 4195846,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195941,
      "knowledgeGraphId": 29889,
      "nodeName": "Greenplum物理架构",
      "description": "Greenplum物理架构是一种基于MPP模型的数据库架构。它包括一个主主机和多个段主机，主主机存储关于段的元数据，而段主机存储实际的用户数据。主主机和段主机通过互连交换机进行通信，数据在各个段数据库中分布，以实现数据和处理的并行性。Greenplum支持散列分布和循环分布两种数据分布方式。",
      "position": 1,
      "labelNameList": ["难点"],
      "children": [
        {
          "id": 4195738,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195846,
          "knowledgeGraphId": 29889,
          "nodeName": "Greenplum",
          "description": "Greenplum是一种典型的大规模并行处理（MPP）数据库系统，采用无共享架构。数据被划分到多个服务器或节点上，每个服务器拥有独立的内存和处理器来处理本地数据。Greenplum通过分布式存储和并行处理实现高效的数据查询和分析。主节点负责与客户端交互并管理集群，从节点存储数据分区并执行查询处理。Greenplum支持数据的容错和高可用性，通过镜像方案确保数据的持久性和可用性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428635513,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195738,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981283,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 25,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 39,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195738,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429035296,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195846,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163720950,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 25,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 39,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 37,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195846,
        "nodeName": null
      }
    },
    {
      "id": 4195912,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195868,
      "knowledgeGraphId": 29889,
      "nodeName": "深度学习技术",
      "description": "深度学习技术是机器学习的一个重要分支，基于人工神经网络的多层结构进行数据处理和预测。常见的深度学习模型包括卷积神经网络（CNN）、循环神经网络（RNN）和深度信念网络（DBN）等。深度学习技术通过模拟人脑神经元的工作原理，能够自动提取数据特征并进行分类或预测。它需要大量的数据和计算资源，通常在GPU上进行训练，以提供高准确率的结果。深度学习技术在图像识别、自然语言处理等领域有广泛应用。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [
        {
          "id": 4195778,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "卷积神经网络",
          "description": "卷积神经网络（Convolutional Neural Network, CNN）是一种深度学习模型，特别适用于图像识别和处理。它通过卷积层、池化层和全连接层的组合，能够自动提取图像的特征，并进行分类。在课程中，卷积神经网络被用来识别手写数字，通过输入28x28像素的图像，输出一个0到9的数字。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955181,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 86,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195778,
            "nodeName": null
          }
        },
        {
          "id": 4195779,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "激活函数",
          "description": "激活函数是神经网络中的一个重要组件，用于将神经元的输入转换为输出。常见的激活函数包括Sigmoid函数和ReLU函数。Sigmoid函数将输入值压缩到0到1之间，而ReLU函数则是取输入值和0的最大值。激活函数的选择会影响神经网络的训练效果和性能。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759927,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 86,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195779,
            "nodeName": null
          }
        },
        {
          "id": 4195780,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "权重和偏置",
          "description": "权重和偏置是神经网络中的可调参数。权重决定了输入数据对神经元输出的影响程度，而偏置则是一个额外的参数，用于调整激活函数的输入值。通过调整权重和偏置，神经网络可以学习到输入数据的特征，从而进行准确的分类或预测。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 164007290,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 86,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 30,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195780,
            "nodeName": null
          }
        },
        {
          "id": 4195783,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "深度学习",
          "description": "深度学习是机器学习的一个子领域，基于人工神经网络的多层结构进行学习和预测。深度学习模仿人脑神经元的工作原理，常见的深度学习模型包括卷积神经网络（CNN）、循环神经网络（RNN）和深度信念网络（DBN）等。深度学习需要大量数据和计算资源，通常在GPU上进行训练，能够提供高准确率的预测结果。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429263831,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195783,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163994359,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 47,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 37,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195783,
            "nodeName": null
          }
        },
        {
          "id": 4195863,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "TensorFlow架构",
          "description": "TensorFlow架构包括Python、Golang、Java等语言接口，通过编译生成图（DAG）并运行，核心部分使用C++实现。数据流图描述了数据如何通过图（DAG）移动，每个节点代表一个数学运算，节点之间的连接是多维数据数组（张量）。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811898,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 21,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195863,
            "nodeName": null
          }
        },
        {
          "id": 4195864,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "TensorFlow2.0架构",
          "description": "TensorFlow 2.0架构注重简单和易用性，包含训练和部署两个主要部分。训练部分包括数据读取与预处理（tf.data, feature columns）、TensorFlow Hub、tf.keras、预置估计器和分布策略（CPU、GPU、TPU）。部署部分包括SavedModel、TensorFlow Serving（云端和本地）、TensorFlow Lite（Android、iOS、Raspberry Pi）、TensorFlow.js（浏览器和Node服务器）以及其他语言绑定（C, Java, Go, C#, Rust, R等）。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929029,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 57,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 1,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 21,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195864,
            "nodeName": null
          }
        },
        {
          "id": 4195867,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195912,
          "knowledgeGraphId": 29889,
          "nodeName": "深度学习算法",
          "description": "深度学习算法是以人脑的神经元为模型的算法，主要包括循环神经网络（RNN）、卷积神经网络（CNN）和深度信念网络。深度学习算法通过特征提取和分类来处理数据，通常需要大量数据进行训练，训练时间较长，并且对硬件要求较高（需要GPU）。深度学习算法的准确度较高，并且具有多种超参数调优方式。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733955,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 22,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195867,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 7,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428464544,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195912,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785665,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 55,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 134,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 46,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195912,
        "nodeName": null
      }
    },
    {
      "id": 4195913,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195868,
      "knowledgeGraphId": 29889,
      "nodeName": "机器学习基础",
      "description": "机器学习基础是大数据分析中的核心概念，涉及从数据中自动学习和识别模式的技术。机器学习分为监督学习、无监督学习和强化学习三大类。监督学习通过已标注的数据进行训练，常用于分类和回归任务；无监督学习则处理未标注的数据，常用于聚类和降维；强化学习通过与环境的交互来优化决策。常见算法包括线性回归、支持向量机、神经网络等。掌握机器学习基础有助于理解复杂的数据分析任务和构建智能系统。",
      "position": 1,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195891,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195913,
          "knowledgeGraphId": 29889,
          "nodeName": "机器学习工具与技术",
          "description": "机器学习工具与技术是大数据分析中的重要组成部分，涵盖了从数据预处理、特征工程到模型训练和评估的整个流程。常用的工具包括Spark MLlib、Scikit-learn、TensorFlow和Keras等，这些工具提供了丰富的算法库和高效的计算框架，支持大规模数据处理和分布式计算。技术方面，机器学习Pipeline可以帮助构建和管理复杂的工作流，模型持久化则确保了模型的可重用性和跨平台部署能力。通过这些工具与技术，数据科学家能够高效地进行大数据分析和机器学习任务。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 4,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429549921,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195891,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837892,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 50,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 146,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 43,
            "avgCompletionRate": 4,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195891,
            "nodeName": null
          }
        },
        {
          "id": 4195892,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195913,
          "knowledgeGraphId": 29889,
          "nodeName": "监督学习与分类",
          "description": "监督学习是一种机器学习方法，通过提供输入数据及其对应的标签来训练模型，使其能够对新数据进行分类或预测。常见的监督学习算法包括线性回归、逻辑回归、支持向量机、神经网络和决策树等。在分类任务中，监督学习模型通过学习训练数据中的特征和标签之间的关系，能够对未知数据进行准确分类。监督学习在现实场景中应用广泛，如产品推荐、客户细分和疾病诊断等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 10,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429492744,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195892,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968228,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 51,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 244,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 37,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195892,
            "nodeName": null
          }
        },
        {
          "id": 4195908,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195913,
          "knowledgeGraphId": 29889,
          "nodeName": "聚类分析",
          "description": "聚类分析是一种无监督学习方法，旨在将数据对象分组到不同的类中。通过聚类分析，可以发现数据中的异常值，这些异常值被视为噪声数据。聚类方法无需任何先验知识，直接形成簇并描述簇，同一个聚类中的所有对象都是相似的，而不同簇中的对象则非常不同。常见的聚类算法包括K均值聚类、层次聚类和DBSCAN等，这些算法能够有效地揭示数据的内在结构和模式。聚类分析在市场细分、图像处理和生物信息学等领域有广泛应用。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163994362,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 115,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 53,
            "avgCompletionRate": 8,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195908,
            "nodeName": null
          }
        },
        {
          "id": 4195932,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195913,
          "knowledgeGraphId": 29889,
          "nodeName": "统计分析与回归",
          "description": "统计分析与回归是大数据分析中的重要方法。统计分析通过描述性统计和推断性统计来总结和解释数据特征。回归分析则用于建立自变量（X）与因变量（Y）之间的关系模型。线性回归是最常见的回归方法，通过计算均值、绘制回归线、计算斜率和截距，得到回归方程：Y = b0 + b1 * X。回归方程帮助我们预测和解释数据趋势，相关性分析则用于发现数据间的潜在关系。结合统计分析与回归，可以更全面地理解和利用数据。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981288,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 54,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195932,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429263839,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 10,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195913,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929031,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 53,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 559,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 62,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195913,
        "nodeName": null
      }
    },
    {
      "id": 4195909,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195868,
      "knowledgeGraphId": 29889,
      "nodeName": "关联规则挖掘",
      "description": "关联规则挖掘是一种用于发现数据集中项之间关系的技术。通过分析频繁项集，生成关联规则，帮助企业了解哪些商品经常一起购买，从而优化商品摆放和促销策略。关联规则由前件（如果）和后件（那么）组成，常用的度量指标包括支持度、置信度和提升度。支持度表示某个项集在数据集中出现的频率；置信度表示在前件发生的情况下，后件发生的概率；提升度衡量前件和后件之间的关联强度。通过这些指标，可以评估和筛选有价值的关联规则，帮助企业做出更明智的决策。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195747,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195909,
          "knowledgeGraphId": 29889,
          "nodeName": "Apriori算法",
          "description": "Apriori算法是一种经典的关联规则挖掘算法，基于频繁项集的概念。算法通过迭代生成频繁项集，并利用剪枝技术减少候选项集的数量。Apriori算法的核心思想是，如果一个项集是频繁的，那么它的所有子集也是频繁的。算法的主要步骤包括生成候选项集、计算支持度、剪枝和生成关联规则。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163902873,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 86,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195747,
            "nodeName": null
          }
        },
        {
          "id": 4195748,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195909,
          "knowledgeGraphId": 29889,
          "nodeName": "支持度、置信度和提升度",
          "description": "支持度、置信度和提升度是关联规则挖掘中的三个重要度量指标。支持度表示某个项集在数据集中出现的频率；置信度表示在前件发生的情况下，后件发生的概率；提升度衡量前件和后件之间的关联强度。通过这些指标，可以评估和筛选有价值的关联规则，帮助企业做出更明智的决策。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668726,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 86,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195748,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863969,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 86,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195909,
        "nodeName": null
      }
    },
    {
      "id": 4195910,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195868,
      "knowledgeGraphId": 29889,
      "nodeName": "降维与矩阵分解",
      "description": "降维与矩阵分解是大数据分析中的重要技术。降维技术如主成分分析（PCA）通过将高维数据转换为低维数据，保留主要特征，减少计算复杂度。矩阵分解技术如奇异值分解（SVD）将矩阵分解为左奇异矩阵、对角矩阵和右奇异矩阵，帮助计算数据的主成分。特征值和特征向量在PCA中尤为重要，特征值表示数据在特征向量方向上的方差大小，特征向量表示数据变化的主要方向。通过这些技术，我们可以更有效地理解和处理大数据。",
      "position": 3,
      "labelNameList": ["难点"],
      "children": [
        {
          "id": 4195725,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195910,
          "knowledgeGraphId": 29889,
          "nodeName": "主成分分析(PCA)",
          "description": "主成分分析（Principal Component Analysis, PCA）是一种数据降维技术，用于将高维数据转换为低维数据，同时尽可能保留数据的主要特征。在K近邻算法中，PCA可以用于对数据进行预处理，将数据从高维空间映射到低维空间，从而减少计算复杂度并提高分类效果。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 1,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163603085,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 45,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 134,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 34,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195725,
            "nodeName": null
          }
        },
        {
          "id": 4195745,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195910,
          "knowledgeGraphId": 29889,
          "nodeName": "奇异值分解(SVD)",
          "description": "奇异值分解 (SVD) 是一种矩阵分解技术，用于将一个矩阵分解为三个矩阵的乘积：一个左奇异矩阵、一个对角矩阵和一个右奇异矩阵。在 PCA 中，SVD 被用来计算数据的主成分。通过对数据矩阵进行 SVD 分解，我们可以得到主成分的特征向量（即奇异向量）和特征值（即奇异值）。这些特征向量和特征值帮助我们理解数据的结构和变化。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163642423,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 105,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 40,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195745,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694768,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 45,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 135,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 43,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195910,
        "nodeName": null
      }
    },
    {
      "id": 4195827,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195824,
      "knowledgeGraphId": 29889,
      "nodeName": "力导向图",
      "description": "力导向图（Force-Directed Graph）是一种用于社交网络可视化的重要方法。它通过假设节点之间存在力和拟合，目标是使整个系统稳定或者能量最低。常见的力导向图绘制算法包括Force atlas算法、Fruchterman-Reingold算法和Yifan Hu算法。这些算法利用电磁学原理，考虑了图的美观性，使得节点和边的布局更加合理和易于理解。力导向图在大数据分析中具有重要应用，能够有效地展示复杂网络结构，帮助分析和理解社交网络中的关系和模式。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428749878,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195827,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876928,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 71,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195827,
        "nodeName": null
      }
    },
    {
      "id": 4195883,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195824,
      "knowledgeGraphId": 29889,
      "nodeName": "Fruchterman-Reingold算法",
      "description": "Fruchterman-Reingold算法是社交网络可视化中最常用的算法之一。该算法利用电磁学原理，通过斥力和引力的平衡生成圆形图。斥力公式为f_a(d) = d^2 / k，引力公式为f_r(d) = -k^2 / d。最终目标是使整个系统达到稳定状态或能量最低，从而使节点分布更加均匀，减少边的交叉。",
      "position": 1,
      "labelNameList": ["难点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163720951,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 18,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195883,
        "nodeName": null
      }
    },
    {
      "id": 4195825,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195824,
      "knowledgeGraphId": 29889,
      "nodeName": "社交网络度量指标",
      "description": "社交网络分析中常用的度量指标包括节点和边缘的度量（如平均聚类系数、特征向量中心性、平均路径长度等）以及网络的度量（如平均度、平均加权度、网络直径、图密度、最短路径、模块化程度等）。这些指标帮助量化和描述社交网络的结构和特性。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429092267,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195825,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616262,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195825,
        "nodeName": null
      }
    },
    {
      "id": 4195828,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195943,
      "knowledgeGraphId": 29889,
      "nodeName": "矩阵分解",
      "description": "矩阵分解是一种用于推荐系统的技术，通过将用户-物品评分矩阵分解为两个低维矩阵，即用户特征矩阵和物品特征矩阵，从而预测用户对未评分物品的评分。常见的矩阵分解方法包括隐语义模型（LFM）和奇异值分解（SVD）。矩阵分解的目标是最小化预测评分与实际评分之间的误差，同时加入正则化项以防止过拟合。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681793,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 23,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195828,
        "nodeName": null
      }
    },
    {
      "id": 4195829,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195943,
      "knowledgeGraphId": 29889,
      "nodeName": "隐语义模型",
      "description": "隐语义模型是一种基于矩阵分解的推荐算法，通过将用户-物品评分矩阵分解为用户隐语义矩阵和物品隐语义矩阵，来发现评分矩阵中的潜在模式。隐语义模型不依赖于物品的显性特征，而是通过数据中的潜在模式来进行推荐。常见的隐语义模型包括基于SVD的模型和基于梯度下降的优化模型。",
      "position": 3,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428578391,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195829,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163798798,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 82,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195829,
        "nodeName": null
      }
    },
    {
      "id": 4195831,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195943,
      "knowledgeGraphId": 29889,
      "nodeName": "协同过滤",
      "description": "协同过滤是一种推荐系统算法，主要分为基于邻域和基于模型两种类型。基于邻域的协同过滤包括基于用户的协同过滤和基于物品的协同过滤。基于用户的协同过滤通过计算用户之间的相似度来推荐物品，而基于物品的协同过滤则通过计算物品之间的相似度来推荐物品。基于模型的协同过滤包括隐语义模型和图模型等。协同过滤通过计算用户或物品之间的相似度来进行推荐，常用的相似度计算方法包括Jaccard相似度、余弦相似度、欧氏距离和皮尔森距离。",
      "position": 4,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195942,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195831,
          "knowledgeGraphId": 29889,
          "nodeName": "基于用户的协同过滤",
          "description": "基于用户的协同过滤，是一种通过分析用户历史行为数据来发现相似用户群体，并基于相似用户的偏好向目标用户推荐物品的推荐算法。其核心思想是“相似用户喜欢的物品你也可能喜欢”。计算步骤主要包括：首先收集用户-物品的交互数据（如评分、点击、购买记录）构建用户-物品评分矩阵；然后计算目标用户与其他用户之间的相似度（常用皮尔逊相关系数、余弦相似度或杰卡德相似度等方法）；接着筛选出与目标用户最相似的K个近邻用户；最后根据相似用户的加权评分预测目标用户对未交互物品的评分，并推荐预测评分最高的物品。例如用户A和用户B的相似度为0.8，用户B对物品X的评分为5分，则可将物品X推荐给用户A。该方法的优势是直观易懂，但面临用户兴趣变化和稀疏性问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 429149301,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195942,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163863971,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 83,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195942,
            "nodeName": null
          }
        },
        {
          "id": 4195944,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195831,
          "knowledgeGraphId": 29889,
          "nodeName": "基于物品的协同过滤",
          "description": "基于物品的协同过滤，是一种推荐算法，其核心思想是通过计算物品之间的相似度，为用户推荐与其历史偏好物品相似的物品。具体步骤为：首先收集用户-物品交互数据（如评分、点击、购买记录）构建用户-物品矩阵，然后计算物品之间的相似度（常用余弦相似度或皮尔逊相关系数），对于目标用户未交互过的物品，基于其已交互物品的评分及这些物品与目标物品的相似度进行加权预测，最后按预测得分排序生成推荐列表。例如用户A喜欢物品1和物品2，而物品3与物品1相似度高，物品4与物品2相似度高，则系统可能推荐物品3和物品4。该方法的优势在于物品相似度相对稳定，计算效率较高，适合物品数量相对稳定的场景。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428236317,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195944,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837893,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 39,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 83,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 41,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195944,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429721986,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195831,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955184,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 83,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195831,
        "nodeName": null
      }
    },
    {
      "id": 4195852,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195943,
      "knowledgeGraphId": 29889,
      "nodeName": "相似度计算",
      "description": "相似度计算是推荐系统中的关键步骤，用于衡量用户或物品之间的相似程度。常用的相似度计算方法包括Jaccard相似度、余弦相似度、欧氏距离和皮尔森距离。在基于用户的协同过滤中，相似度计算用于确定用户之间的相似度；在基于物品的协同过滤中，相似度计算用于确定物品之间的相似度。相似度计算的结果直接影响推荐的准确性和效果。",
      "position": 5,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902878,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 24,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195852,
        "nodeName": null
      }
    },
    {
      "id": 4195833,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195943,
      "knowledgeGraphId": 29889,
      "nodeName": "基于内容的过滤",
      "description": "基于内容的过滤是一种推荐系统算法，通过分析物品的内容特征来进行推荐。该算法首先提取物品的结构化特征和非结构化特征，然后通过用户过去喜欢或不喜欢的物品特征来学习用户的偏好特征，建立用户档案。最后，通过比较用户档案与候选物品的特征，推荐相关性最高的物品给用户。基于内容的过滤不依赖于其他用户的行为数据，而是通过物品本身的属性来进行推荐。这种方法能够有效地推荐与用户历史偏好相似的物品，适用于物品特征丰富且用户偏好明确的场景。",
      "position": 6,
      "labelNameList": ["重点"],
      "children": [
        {
          "id": 4195860,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195833,
          "knowledgeGraphId": 29889,
          "nodeName": "档案学习",
          "description": "档案学习（Profile Learning）是基于内容推荐系统的第二步。它指的是通过分析用户的历史行为数据（如浏览记录、评分记录等），学习并构建用户的兴趣档案。这些档案可以帮助推荐系统更好地理解用户的偏好，从而提供更个性化的推荐。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929028,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 24,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195860,
            "nodeName": null
          }
        },
        {
          "id": 4195861,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195833,
          "knowledgeGraphId": 29889,
          "nodeName": "生成推荐",
          "description": "生成推荐（Recommendation Generation）是基于内容推荐系统的第三步。基于物品表示和用户档案，推荐系统生成个性化的推荐列表。这一步通常涉及使用各种算法（如协同过滤、矩阵分解等）来匹配用户的兴趣与物品特征，从而推荐用户可能感兴趣的物品。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955185,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 24,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195861,
            "nodeName": null
          }
        },
        {
          "id": 4195859,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195833,
          "knowledgeGraphId": 29889,
          "nodeName": "物品表示",
          "description": "物品表示（Item Representation）是基于内容推荐系统的第一步。它涉及将推荐系统中的物品（如电影、书籍等）转化为计算机可以处理的形式。这通常包括提取物品的特征，如文本描述、标签、用户评分等，以便后续的推荐算法能够利用这些特征进行分析和推荐。",
          "position": 2,
          "labelNameList": null,
          "children": null,
          "level": 5,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163942110,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 61,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 3,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 24,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195859,
            "nodeName": null
          }
        }
      ],
      "level": 4,
      "childCount": 3,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429320995,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195833,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902877,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 84,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195833,
        "nodeName": null
      }
    },
    {
      "id": 4195756,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195919,
      "knowledgeGraphId": 29889,
      "nodeName": "网络爬虫爬取策略",
      "description": "网络爬虫爬取策略包括深度优先、广度优先、部分PageRank策略和OPIC（在线页面重要性计算）。深度优先策略是指爬虫从一个种子URL开始，沿着每个链接深入抓取，直到没有新的链接为止，然后回溯到上一个链接继续抓取。广度优先策略是指爬虫从一个种子URL开始，抓取所有直接链接的页面，然后再抓取这些页面的链接。部分PageRank策略根据页面的重要性来决定抓取顺序，重要性高的页面优先抓取。OPIC策略为每个网页分配相同的“金币”，每当一个页面被下载时，其“金币”会平均分配到该网页中包含的链接页面，待爬队列中的链接按“金币”排序。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759926,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 54,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195756,
        "nodeName": null
      }
    },
    {
      "id": 4195757,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195918,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式网络爬虫架构",
      "description": "分布式网络爬虫架构包括主从架构（Master-Slave）、对等架构（Peer-to-Peer）和混合架构（Mix）。主从架构中，Master节点负责任务分配和协调，Slave节点负责具体的爬取任务，扩展时只需更新Master节点，但Master节点压力大，易造成瓶颈。对等架构中，所有节点之间进行通信，扩展时需更新所有节点，没有Master节点，不会出现单点热点，Slave节点数量限制小。混合架构中，Master节点之间进行通信，Slave节点数量限制小，但实现难度较大。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 4,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 431721402,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195757,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981284,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 80,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 58,
        "avgCompletionRate": 17,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195757,
        "nodeName": null
      }
    },
    {
      "id": 4195819,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195889,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的规模",
      "description": "大数据的规模指的是数据量的巨大增长。从2009年到2020年，全球数据量从0.8 ZB增长到35.2 ZB，增长了44倍。根据IDC《数据时代2025》报告，到2025年，全球数据量预计将达到175 ZB。这种数据量的指数级增长对数据存储和处理提出了巨大的挑战。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707867,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 94,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 47,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195819,
        "nodeName": null
      }
    },
    {
      "id": 4195820,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195889,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的速度",
      "description": "大数据的速度指的是数据生成和处理的速度。随着数据生成速度的加快，实时数据分析变得越来越重要。例如，电子促销和健康检测都需要快速处理和反应，以便及时做出决策。数据的快速生成和处理能力是大数据分析中的一个关键因素。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163876927,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 83,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 47,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195820,
        "nodeName": null
      }
    },
    {
      "id": 4195740,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "大数据的特征",
      "description": "大数据具有五个主要特征：规模（Volume）、速度（Velocity）、种类（Variety）、真伪（Veracity）和价值（Value）。规模指的是数据的庞大数量；速度指的是数据生成和处理的速度；种类指的是数据的多样性，包括结构化和非结构化数据；真伪指的是数据的准确性和可信度；价值指的是从数据中提取的潜在价值。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428807156,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195740,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915905,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 83,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 181,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 154,
        "avgCompletionRate": 22,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195740,
        "nodeName": null
      }
    },
    {
      "id": 4195755,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "网络大数据特征",
      "description": "网络大数据具有多元异构、及时性、社会性、交互性、突发性和高噪声等特征。多元异构指互联网的数据来自于多个不同的数据源，不同的数据源的数据结构不同。及时性是指当事情发生时，可以立即发布。社会性是指网络大数据可以直接反映社会情况。交互性是指网民可以发布信息并回复和转发别人的信息。突发性是指一些新闻传播会导致短时间内产生大量新的网络数据。高噪声是指互联网的数据质量不高，充满了脏数据，价值密度低。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 430658464,
        "gmtCreate": 1760665956000,
        "gmtModified": 1760665956000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 65,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195755,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968223,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 72,
        "questionJoinCount": 14,
        "avgLearnedTimeCount": 80,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 58,
        "avgCompletionRate": 17,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195755,
        "nodeName": null
      }
    },
    {
      "id": 4195811,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "Volume",
      "description": "Volume指的是数据的规模和容量。随着时间的推移，数据的规模呈指数级增长，从2009年的0.5个Zettabyte增长到2020年的35个Zettabyte。数据的来源多种多样，包括物联网设备、社交媒体、视频、金融交易和客户日志等。到2025年，全球数据预计将达到175个Zettabyte。Volume是大数据的一个重要特征，反映了数据量的巨大和不断增长的趋势。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429435533,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195811,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163616261,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 160,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 88,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195811,
        "nodeName": null
      }
    },
    {
      "id": 4195812,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "Variety",
      "description": "Variety指的是数据的多样性。数据来源和形式多种多样，包括电子表格、数据库、照片、音频文件、视频、文本文件、PDF、关系型数据库、半结构化数据、图表数据、社交网络数据、语义网络数据等。多样性对数据的存储和分析提出了挑战，需要将不同类型的数据连接在一起，以提取有用的信息。Variety是大数据的一个重要特征，反映了数据形式的多样性和复杂性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429836595,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195812,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163681790,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 160,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 88,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195812,
        "nodeName": null
      }
    },
    {
      "id": 4195813,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "Velocity",
      "description": "Velocity指的是数据生成和处理的速度。随着传感器、社交网络媒体、应用程序和网络日志等的普及，数据生成的速度越来越快。实时数据处理和分析变得至关重要，以便及时做出决策。例如，电子营销需要根据用户的位置和购买历史快速推荐促销信息，医疗保健监测需要及时响应异常行为。Velocity是大数据的一个重要特征，反映了数据生成和处理的高速度要求。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428236307,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195813,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163746821,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 160,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 88,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195813,
        "nodeName": null
      }
    },
    {
      "id": 4195814,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "Veracity",
      "description": "Veracity指的是数据的真实性和可信度。由于数据的不一致、不完整、歧义、延迟、欺骗和模型近似等原因，数据可能存在不确定性。需要过滤掉不必要的信息，处理有用的数据，以确保数据的可靠性。Veracity是大数据的一个重要特征，反映了数据质量和可信度的重要性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429035295,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195814,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785659,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 160,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 88,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195814,
        "nodeName": null
      }
    },
    {
      "id": 4195815,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195890,
      "knowledgeGraphId": 29889,
      "nodeName": "Value",
      "description": "Value指的是数据的价值。无论数据的生成速度有多快，数量有多大，数据必须是可靠的、有用的，才能支持数据分析和处理。质量差的数据可能导致公司收入损失。数据科学家需要将原始数据转换成有用的信息，清理数据集，提取最有用的数据进行分析和模式识别。Value是大数据的一个重要特征，反映了数据的实际应用价值。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428521567,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195815,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163707866,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 160,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 88,
        "avgCompletionRate": 21,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195815,
        "nodeName": null
      }
    },
    {
      "id": 4195843,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195707,
      "knowledgeGraphId": 29889,
      "nodeName": "增量提取方法",
      "description": "增量提取的方法有四种：1. 日志对比，通过数据库日志评估变化的数据，使用CDC组件识别自上次提取以来发生更改的数据；2. 时间戳，在更新记录数据的同时添加和修改时间戳字段值，通过比较系统时间和时间戳的值来捕捉变化的数据；3. 触发器，在数据表上创建触发器，每当源表数据发生变化时，通过触发器将变化的数据写入临时表；4. 全表对比，通过对比源表和MD5临时表中的数据来识别变化的数据。",
      "position": 0,
      "labelNameList": ["难点", "重点"],
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163655500,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 50,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 42,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195843,
        "nodeName": null
      }
    },
    {
      "id": 4195822,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195793,
      "knowledgeGraphId": 29889,
      "nodeName": "分箱算法",
      "description": "分箱算法是一种处理噪声数据的技术，通过将数据按照一定规则分入不同的箱子中进行处理。分箱方法包括等深分箱、等宽分箱和用户自定义间隔分箱。分箱后可以对数据进行平滑处理，如平均平滑、边界值平滑和中值平滑，以减少数据的波动和噪声。",
      "position": 0,
      "labelNameList": ["难点"],
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163798797,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 38,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195822,
        "nodeName": null
      }
    },
    {
      "id": 4195768,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195887,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式计算",
      "description": "分布式计算是指使用一组廉价的服务器组成一个服务器集群来代替昂贵的高性能服务器，以实现高性能和高冗余性。分布式计算的思想是通过多个节点协同完成大数据存储和处理的任务，解决单个节点无法处理超大数据规模的问题。关键的硬件和软件突破使得分布式计算成为可能，降低了硬件成本，并通过自动化流程优化使用。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429664663,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195768,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929025,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 52,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 177,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 78,
        "avgCompletionRate": 19,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195768,
        "nodeName": null
      }
    },
    {
      "id": 4195877,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195887,
      "knowledgeGraphId": 29889,
      "nodeName": "分布式处理",
      "description": "分布式处理是大数据分析中的另一个重要组成部分。它通过将计算任务分散到多个节点上进行并行处理，从而提高计算效率和处理能力。常见的分布式处理框架包括Hadoop的MapReduce、Spark和Storm等。分布式处理系统能够处理大规模数据分析任务，并且支持多种计算模型，如批处理、流处理和图计算。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642428,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 94,
        "questionJoinCount": 17,
        "avgLearnedTimeCount": 30,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 49,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195877,
        "nodeName": null
      }
    },
    {
      "id": 4195738,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195846,
      "knowledgeGraphId": 29889,
      "nodeName": "Greenplum",
      "description": "Greenplum是一种典型的大规模并行处理（MPP）数据库系统，采用无共享架构。数据被划分到多个服务器或节点上，每个服务器拥有独立的内存和处理器来处理本地数据。Greenplum通过分布式存储和并行处理实现高效的数据查询和分析。主节点负责与客户端交互并管理集群，从节点存储数据分区并执行查询处理。Greenplum支持数据的容错和高可用性，通过镜像方案确保数据的持久性和可用性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428635513,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195738,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981283,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 25,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 39,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195738,
        "nodeName": null
      }
    },
    {
      "id": 4195778,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "卷积神经网络",
      "description": "卷积神经网络（Convolutional Neural Network, CNN）是一种深度学习模型，特别适用于图像识别和处理。它通过卷积层、池化层和全连接层的组合，能够自动提取图像的特征，并进行分类。在课程中，卷积神经网络被用来识别手写数字，通过输入28x28像素的图像，输出一个0到9的数字。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955181,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 86,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195778,
        "nodeName": null
      }
    },
    {
      "id": 4195779,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "激活函数",
      "description": "激活函数是神经网络中的一个重要组件，用于将神经元的输入转换为输出。常见的激活函数包括Sigmoid函数和ReLU函数。Sigmoid函数将输入值压缩到0到1之间，而ReLU函数则是取输入值和0的最大值。激活函数的选择会影响神经网络的训练效果和性能。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759927,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 86,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195779,
        "nodeName": null
      }
    },
    {
      "id": 4195780,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "权重和偏置",
      "description": "权重和偏置是神经网络中的可调参数。权重决定了输入数据对神经元输出的影响程度，而偏置则是一个额外的参数，用于调整激活函数的输入值。通过调整权重和偏置，神经网络可以学习到输入数据的特征，从而进行准确的分类或预测。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 164007290,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 86,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 30,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195780,
        "nodeName": null
      }
    },
    {
      "id": 4195783,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "深度学习",
      "description": "深度学习是机器学习的一个子领域，基于人工神经网络的多层结构进行学习和预测。深度学习模仿人脑神经元的工作原理，常见的深度学习模型包括卷积神经网络（CNN）、循环神经网络（RNN）和深度信念网络（DBN）等。深度学习需要大量数据和计算资源，通常在GPU上进行训练，能够提供高准确率的预测结果。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429263831,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195783,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163994359,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 47,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 37,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195783,
        "nodeName": null
      }
    },
    {
      "id": 4195863,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "TensorFlow架构",
      "description": "TensorFlow架构包括Python、Golang、Java等语言接口，通过编译生成图（DAG）并运行，核心部分使用C++实现。数据流图描述了数据如何通过图（DAG）移动，每个节点代表一个数学运算，节点之间的连接是多维数据数组（张量）。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811898,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 21,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195863,
        "nodeName": null
      }
    },
    {
      "id": 4195864,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "TensorFlow2.0架构",
      "description": "TensorFlow 2.0架构注重简单和易用性，包含训练和部署两个主要部分。训练部分包括数据读取与预处理（tf.data, feature columns）、TensorFlow Hub、tf.keras、预置估计器和分布策略（CPU、GPU、TPU）。部署部分包括SavedModel、TensorFlow Serving（云端和本地）、TensorFlow Lite（Android、iOS、Raspberry Pi）、TensorFlow.js（浏览器和Node服务器）以及其他语言绑定（C, Java, Go, C#, Rust, R等）。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929029,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 57,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 1,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 21,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195864,
        "nodeName": null
      }
    },
    {
      "id": 4195867,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195912,
      "knowledgeGraphId": 29889,
      "nodeName": "深度学习算法",
      "description": "深度学习算法是以人脑的神经元为模型的算法，主要包括循环神经网络（RNN）、卷积神经网络（CNN）和深度信念网络。深度学习算法通过特征提取和分类来处理数据，通常需要大量数据进行训练，训练时间较长，并且对硬件要求较高（需要GPU）。深度学习算法的准确度较高，并且具有多种超参数调优方式。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733955,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 22,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195867,
        "nodeName": null
      }
    },
    {
      "id": 4195891,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195913,
      "knowledgeGraphId": 29889,
      "nodeName": "机器学习工具与技术",
      "description": "机器学习工具与技术是大数据分析中的重要组成部分，涵盖了从数据预处理、特征工程到模型训练和评估的整个流程。常用的工具包括Spark MLlib、Scikit-learn、TensorFlow和Keras等，这些工具提供了丰富的算法库和高效的计算框架，支持大规模数据处理和分布式计算。技术方面，机器学习Pipeline可以帮助构建和管理复杂的工作流，模型持久化则确保了模型的可重用性和跨平台部署能力。通过这些工具与技术，数据科学家能够高效地进行大数据分析和机器学习任务。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195832,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195891,
          "knowledgeGraphId": 29889,
          "nodeName": "机器学习Pipeline",
          "description": "机器学习Pipeline是一个构建在数据框架之上的统一的高级API，帮助用户创建和调用机器学习工作流。Pipeline包括一系列按特定顺序运行的阶段（Pipeline Stage），每个阶段可以是Transformer（特征转换器）或Estimator（预测器）。Pipeline的主要步骤包括数据加载和清理、特征提取、模型训练、模型评估和参数调优。通过Pipeline，用户可以确保训练和测试数据经过相同的特征处理步骤，从而提高模型的可靠性和可重复性。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428521569,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195832,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811897,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 31,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 35,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195832,
            "nodeName": null
          }
        },
        {
          "id": 4195834,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195891,
          "knowledgeGraphId": 29889,
          "nodeName": "模型持久化",
          "description": "模型持久化是指将训练好的模型和Pipeline保存到磁盘，以便以后使用。Spark MLlib提供了模型导入导出的功能，支持跨Scala、Java和Python的持久化操作。持久化的模型可以在不同的环境中加载和使用，例如在Hadoop、Kubernetes或云平台上运行。通过模型持久化，数据科学家可以将训练好的模型交给数据工程师进行大规模部署和监控，从而实现模型的高效应用和管理。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428464538,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195834,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668728,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 35,
            "avgCompletionRate": 6,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195834,
            "nodeName": null
          }
        },
        {
          "id": 4195854,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195891,
          "knowledgeGraphId": 29889,
          "nodeName": "MLlib算法",
          "description": "MLlib支持多种机器学习算法，包括分类（如逻辑回归、朴素贝叶斯）、回归（如广义线性回归、生存回归）、决策树、随机森林、梯度提升树、推荐（如交替最小二乘法ALS）、聚类（如K-means、高斯混合模型GMMs）和主题建模（如潜在狄利克雷分配LDA）。这些算法可以用于各种大数据分析任务，提供高效的解决方案。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163694767,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 51,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 22,
            "avgCompletionRate": 2,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195854,
            "nodeName": null
          }
        },
        {
          "id": 4195866,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195891,
          "knowledgeGraphId": 29889,
          "nodeName": "机器学习算法",
          "description": "机器学习算法是一种通过统计分析技术进行模式识别的技术。它通常使用决策树等算法来处理数据，并且可以在监督或无监督的情况下进行学习。机器学习算法的训练时间较短，硬件依赖较低，可以在较少的数据上进行训练，但其准确度相对较低。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163603086,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 58,
            "questionJoinCount": 11,
            "avgLearnedTimeCount": 0,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 22,
            "avgCompletionRate": 3,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195866,
            "nodeName": null
          }
        }
      ],
      "level": 5,
      "childCount": 4,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429549921,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195891,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837892,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 50,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 146,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 43,
        "avgCompletionRate": 4,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195891,
        "nodeName": null
      }
    },
    {
      "id": 4195892,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195913,
      "knowledgeGraphId": 29889,
      "nodeName": "监督学习与分类",
      "description": "监督学习是一种机器学习方法，通过提供输入数据及其对应的标签来训练模型，使其能够对新数据进行分类或预测。常见的监督学习算法包括线性回归、逻辑回归、支持向量机、神经网络和决策树等。在分类任务中，监督学习模型通过学习训练数据中的特征和标签之间的关系，能够对未知数据进行准确分类。监督学习在现实场景中应用广泛，如产品推荐、客户细分和疾病诊断等。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195726,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "K近邻算法",
          "description": "K近邻算法（K-Nearest Neighbors, KNN）是一种用于分类数据的简单方法。其基本思想是通过计算新数据点与已知类别数据点之间的距离，找到距离最近的K个邻居，并根据这些邻居的类别来决定新数据点的类别。K值的选择对算法的效果有重要影响，较小的K值可能会导致分类结果受噪声影响，而较大的K值则可能会使少数类别的数据被多数类别的数据所掩盖。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929023,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 30,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195726,
            "nodeName": null
          }
        },
        {
          "id": 4195727,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "训练数据与测试数据",
          "description": "在机器学习和数据挖掘中，训练数据是指已知类别的数据集，用于训练模型；测试数据是指未知类别的数据集，用于评估模型的性能。在K近邻算法中，训练数据用于构建初始的分类模型，而测试数据则用于验证模型的分类效果。通过调整K值并使用部分训练数据作为测试数据，可以找到最优的K值。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163889959,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 30,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 11,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195727,
            "nodeName": null
          }
        },
        {
          "id": 4195728,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "支持向量机(SVM)",
          "description": "支持向量机（Support Vector Machine, SVM）是一种用于分类和回归分析的监督学习模型。SVM通过在高维空间中找到一个最佳的分离超平面来实现分类。这个超平面最大化了不同类别之间的间隔（即“最大间隔分类器”），从而提高分类的准确性。SVM还可以通过使用核函数（如多项式核和径向基核）将数据从低维空间映射到高维空间，以处理非线性分类问题。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163915903,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195728,
            "nodeName": null
          }
        },
        {
          "id": 4195729,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "软间隔分类器",
          "description": "软间隔分类器（Soft Margin Classifier）是一种允许一定程度误分类的支持向量机模型。通过引入软间隔，模型在训练数据中允许一些误分类，以便在面对新数据时具有更好的泛化能力。这种方法是对偏差-方差权衡的一个应用，即通过增加模型的偏差来减少其方差，从而提高模型在新数据上的表现。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163629242,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195729,
            "nodeName": null
          }
        },
        {
          "id": 4195730,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "核函数与核技巧",
          "description": "核函数（Kernel Function）是一种用于将数据从低维空间映射到高维空间的数学工具，从而使得在高维空间中找到一个线性可分的超平面成为可能。常见的核函数包括多项式核和径向基核。核技巧（Kernel Trick）则是指在不显式地进行高维映射的情况下，直接计算数据点在高维空间中的内积，从而减少计算复杂度。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163981282,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 95,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 32,
            "avgCompletionRate": 9,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195730,
            "nodeName": null
          }
        },
        {
          "id": 4195781,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "监督学习",
          "description": "监督学习是一种机器学习方法，通过提供输入数据及其对应的标签来训练模型，使其能够对新数据进行分类或预测。常见的监督学习算法包括线性回归、逻辑回归、支持向量机、神经网络和决策树等。监督学习在现实场景中应用广泛，如产品推荐、客户细分和疾病诊断等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428407482,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195781,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163837888,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 51,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 47,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 37,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195781,
            "nodeName": null
          }
        },
        {
          "id": 4195782,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "无监督学习",
          "description": "无监督学习是一种机器学习方法，不需要提供标签数据，模型通过分析数据的内在结构进行分类或聚类。常见的无监督学习算法包括K均值聚类、主成分分析（PCA）和异常检测等。无监督学习主要用于发现数据中的模式和结构，如顾客购买习惯分析、细菌行为模式识别和网络攻击检测等。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": {
            "id": 428407483,
            "gmtCreate": 1760586432000,
            "gmtModified": 1760586432000,
            "memberId": 1465951180,
            "completionRate": 0,
            "learnedTimeCount": 5,
            "mocKgInfoId": 29889,
            "masteryRate": 0,
            "nodeId": 4195782,
            "nodeName": null,
            "realName": null,
            "nickName": null
          },
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759928,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 51,
            "questionJoinCount": 10,
            "avgLearnedTimeCount": 47,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 37,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195782,
            "nodeName": null
          }
        },
        {
          "id": 4195794,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "朴素贝叶斯分类算法",
          "description": "朴素贝叶斯分类算法是一种基于贝叶斯定理的概率分类方法。它假设特征之间是相互独立的，即一个特征的出现与其他特征的出现没有关系。尽管这种假设在实际应用中可能并不成立，但朴素贝叶斯分类算法在许多实际问题中表现良好，尤其是在文本分类和垃圾邮件过滤等任务中。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163785657,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 72,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195794,
            "nodeName": null
          }
        },
        {
          "id": 4195795,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "先验概率",
          "description": "先验概率是指在没有观察到任何数据之前，对某个事件发生概率的初步估计。在朴素贝叶斯分类算法中，先验概率通常是根据训练数据中的分类比例来估计的。例如，如果在训练数据中有67%的消息是正常消息，那么先验概率可以设定为0.67。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163929026,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 72,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195795,
            "nodeName": null
          }
        },
        {
          "id": 4195796,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195892,
          "knowledgeGraphId": 29889,
          "nodeName": "加法平滑",
          "description": "加法平滑是一种处理零概率问题的方法。在朴素贝叶斯分类算法中，如果某个单词在训练数据的某一类中从未出现过，那么其概率为零，这会导致整个概率计算结果为零。为了解决这个问题，可以在每个单词的计数中加上一个常数（通常为1），以确保所有单词的概率都大于零。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163811896,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 72,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195796,
            "nodeName": null
          }
        }
      ],
      "level": 5,
      "childCount": 10,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429492744,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195892,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968228,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 51,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 244,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 37,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195892,
        "nodeName": null
      }
    },
    {
      "id": 4195908,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195913,
      "knowledgeGraphId": 29889,
      "nodeName": "聚类分析",
      "description": "聚类分析是一种无监督学习方法，旨在将数据对象分组到不同的类中。通过聚类分析，可以发现数据中的异常值，这些异常值被视为噪声数据。聚类方法无需任何先验知识，直接形成簇并描述簇，同一个聚类中的所有对象都是相似的，而不同簇中的对象则非常不同。常见的聚类算法包括K均值聚类、层次聚类和DBSCAN等，这些算法能够有效地揭示数据的内在结构和模式。聚类分析在市场细分、图像处理和生物信息学等领域有广泛应用。",
      "position": 1,
      "labelNameList": null,
      "children": [
        {
          "id": 4195788,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195908,
          "knowledgeGraphId": 29889,
          "nodeName": "K均值聚类算法",
          "description": "K均值聚类算法是一种常用的无监督学习算法，用于将数据集划分为K个簇。其基本步骤包括：选择簇的数量K，随机选择K个初始数据点作为初始簇中心，计算每个数据点到各簇中心的距离，并将数据点分配到最近的簇，计算每个簇的均值作为新的簇中心，重复上述步骤直到簇中心不再变化。通过这种迭代过程，K均值聚类算法能够有效地将数据点分组。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163759929,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 45,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195788,
            "nodeName": null
          }
        },
        {
          "id": 4195823,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195908,
          "knowledgeGraphId": 29889,
          "nodeName": "聚类算法",
          "description": "聚类算法是一种无监督学习方法，用于将数据对象分组到不同的类中。通过聚类分析，可以发现数据中的异常值，这些异常值被视为噪声数据。聚类方法无需任何先验知识，直接形成簇并描述簇，同一个聚类中的所有对象都是相似的，而不同簇中的对象则非常不同。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163942108,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 60,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 70,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 38,
            "avgCompletionRate": 5,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195823,
            "nodeName": null
          }
        }
      ],
      "level": 5,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163994362,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 115,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 53,
        "avgCompletionRate": 8,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195908,
        "nodeName": null
      }
    },
    {
      "id": 4195932,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195913,
      "knowledgeGraphId": 29889,
      "nodeName": "统计分析与回归",
      "description": "统计分析与回归是大数据分析中的重要方法。统计分析通过描述性统计和推断性统计来总结和解释数据特征。回归分析则用于建立自变量（X）与因变量（Y）之间的关系模型。线性回归是最常见的回归方法，通过计算均值、绘制回归线、计算斜率和截距，得到回归方程：Y = b0 + b1 * X。回归方程帮助我们预测和解释数据趋势，相关性分析则用于发现数据间的潜在关系。结合统计分析与回归，可以更全面地理解和利用数据。",
      "position": 2,
      "labelNameList": null,
      "children": [
        {
          "id": 4195711,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195932,
          "knowledgeGraphId": 29889,
          "nodeName": "线性回归",
          "description": "线性回归是一种用于预测因变量（Y）与自变量（X）之间关系的统计方法。通过计算自变量和因变量的均值，绘制回归线，并计算斜率（b1）和截距（b0），从而得到回归方程：Y = b0 + b1 * X。在课程中，通过具体的例子和详细的计算步骤，讲解了如何计算斜率和截距，并最终得到回归方程。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 2,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163733949,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 54,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195711,
            "nodeName": null
          }
        }
      ],
      "level": 5,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981288,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 54,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195932,
        "nodeName": null
      }
    },
    {
      "id": 4195747,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195909,
      "knowledgeGraphId": 29889,
      "nodeName": "Apriori算法",
      "description": "Apriori算法是一种经典的关联规则挖掘算法，基于频繁项集的概念。算法通过迭代生成频繁项集，并利用剪枝技术减少候选项集的数量。Apriori算法的核心思想是，如果一个项集是频繁的，那么它的所有子集也是频繁的。算法的主要步骤包括生成候选项集、计算支持度、剪枝和生成关联规则。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163902873,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 86,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195747,
        "nodeName": null
      }
    },
    {
      "id": 4195748,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195909,
      "knowledgeGraphId": 29889,
      "nodeName": "支持度、置信度和提升度",
      "description": "支持度、置信度和提升度是关联规则挖掘中的三个重要度量指标。支持度表示某个项集在数据集中出现的频率；置信度表示在前件发生的情况下，后件发生的概率；提升度衡量前件和后件之间的关联强度。通过这些指标，可以评估和筛选有价值的关联规则，帮助企业做出更明智的决策。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668726,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 86,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195748,
        "nodeName": null
      }
    },
    {
      "id": 4195725,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195910,
      "knowledgeGraphId": 29889,
      "nodeName": "主成分分析(PCA)",
      "description": "主成分分析（Principal Component Analysis, PCA）是一种数据降维技术，用于将高维数据转换为低维数据，同时尽可能保留数据的主要特征。在K近邻算法中，PCA可以用于对数据进行预处理，将数据从高维空间映射到低维空间，从而减少计算复杂度并提高分类效果。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195746,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195725,
          "knowledgeGraphId": 29889,
          "nodeName": "特征值和特征向量",
          "description": "特征值和特征向量是线性代数中的重要概念，在 PCA 中尤为重要。特征值表示数据在对应特征向量方向上的方差大小，特征向量则表示数据变化的主要方向。在 PCA 中，我们通过计算数据的协方差矩阵并进行特征值分解，得到一组特征值和特征向量。特征值越大，说明该特征向量方向上的数据变化越大。通过选择最大的特征值对应的特征向量，我们可以找到数据的主成分。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 6,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163968221,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 104,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 31,
            "avgCompletionRate": 7,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195746,
            "nodeName": null
          }
        }
      ],
      "level": 5,
      "childCount": 1,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163603085,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 45,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 134,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 34,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195725,
        "nodeName": null
      }
    },
    {
      "id": 4195745,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195910,
      "knowledgeGraphId": 29889,
      "nodeName": "奇异值分解(SVD)",
      "description": "奇异值分解 (SVD) 是一种矩阵分解技术，用于将一个矩阵分解为三个矩阵的乘积：一个左奇异矩阵、一个对角矩阵和一个右奇异矩阵。在 PCA 中，SVD 被用来计算数据的主成分。通过对数据矩阵进行 SVD 分解，我们可以得到主成分的特征向量（即奇异向量）和特征值（即奇异值）。这些特征向量和特征值帮助我们理解数据的结构和变化。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163642423,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 105,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 40,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195745,
        "nodeName": null
      }
    },
    {
      "id": 4195942,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195831,
      "knowledgeGraphId": 29889,
      "nodeName": "基于用户的协同过滤",
      "description": "基于用户的协同过滤，是一种通过分析用户历史行为数据来发现相似用户群体，并基于相似用户的偏好向目标用户推荐物品的推荐算法。其核心思想是“相似用户喜欢的物品你也可能喜欢”。计算步骤主要包括：首先收集用户-物品的交互数据（如评分、点击、购买记录）构建用户-物品评分矩阵；然后计算目标用户与其他用户之间的相似度（常用皮尔逊相关系数、余弦相似度或杰卡德相似度等方法）；接着筛选出与目标用户最相似的K个近邻用户；最后根据相似用户的加权评分预测目标用户对未交互物品的评分，并推荐预测评分最高的物品。例如用户A和用户B的相似度为0.8，用户B对物品X的评分为5分，则可将物品X推荐给用户A。该方法的优势是直观易懂，但面临用户兴趣变化和稀疏性问题。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 429149301,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195942,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163863971,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 83,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195942,
        "nodeName": null
      }
    },
    {
      "id": 4195944,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195831,
      "knowledgeGraphId": 29889,
      "nodeName": "基于物品的协同过滤",
      "description": "基于物品的协同过滤，是一种推荐算法，其核心思想是通过计算物品之间的相似度，为用户推荐与其历史偏好物品相似的物品。具体步骤为：首先收集用户-物品交互数据（如评分、点击、购买记录）构建用户-物品矩阵，然后计算物品之间的相似度（常用余弦相似度或皮尔逊相关系数），对于目标用户未交互过的物品，基于其已交互物品的评分及这些物品与目标物品的相似度进行加权预测，最后按预测得分排序生成推荐列表。例如用户A喜欢物品1和物品2，而物品3与物品1相似度高，物品4与物品2相似度高，则系统可能推荐物品3和物品4。该方法的优势在于物品相似度相对稳定，计算效率较高，适合物品数量相对稳定的场景。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428236317,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195944,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837893,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 39,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 83,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 41,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195944,
        "nodeName": null
      }
    },
    {
      "id": 4195860,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195833,
      "knowledgeGraphId": 29889,
      "nodeName": "档案学习",
      "description": "档案学习（Profile Learning）是基于内容推荐系统的第二步。它指的是通过分析用户的历史行为数据（如浏览记录、评分记录等），学习并构建用户的兴趣档案。这些档案可以帮助推荐系统更好地理解用户的偏好，从而提供更个性化的推荐。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929028,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 24,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195860,
        "nodeName": null
      }
    },
    {
      "id": 4195861,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195833,
      "knowledgeGraphId": 29889,
      "nodeName": "生成推荐",
      "description": "生成推荐（Recommendation Generation）是基于内容推荐系统的第三步。基于物品表示和用户档案，推荐系统生成个性化的推荐列表。这一步通常涉及使用各种算法（如协同过滤、矩阵分解等）来匹配用户的兴趣与物品特征，从而推荐用户可能感兴趣的物品。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955185,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 24,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195861,
        "nodeName": null
      }
    },
    {
      "id": 4195859,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195833,
      "knowledgeGraphId": 29889,
      "nodeName": "物品表示",
      "description": "物品表示（Item Representation）是基于内容推荐系统的第一步。它涉及将推荐系统中的物品（如电影、书籍等）转化为计算机可以处理的形式。这通常包括提取物品的特征，如文本描述、标签、用户评分等，以便后续的推荐算法能够利用这些特征进行分析和推荐。",
      "position": 2,
      "labelNameList": null,
      "children": [],
      "level": 5,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163942110,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 61,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 3,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 24,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195859,
        "nodeName": null
      }
    },
    {
      "id": 4195832,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195891,
      "knowledgeGraphId": 29889,
      "nodeName": "机器学习Pipeline",
      "description": "机器学习Pipeline是一个构建在数据框架之上的统一的高级API，帮助用户创建和调用机器学习工作流。Pipeline包括一系列按特定顺序运行的阶段（Pipeline Stage），每个阶段可以是Transformer（特征转换器）或Estimator（预测器）。Pipeline的主要步骤包括数据加载和清理、特征提取、模型训练、模型评估和参数调优。通过Pipeline，用户可以确保训练和测试数据经过相同的特征处理步骤，从而提高模型的可靠性和可重复性。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428521569,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195832,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811897,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 31,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 35,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195832,
        "nodeName": null
      }
    },
    {
      "id": 4195834,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195891,
      "knowledgeGraphId": 29889,
      "nodeName": "模型持久化",
      "description": "模型持久化是指将训练好的模型和Pipeline保存到磁盘，以便以后使用。Spark MLlib提供了模型导入导出的功能，支持跨Scala、Java和Python的持久化操作。持久化的模型可以在不同的环境中加载和使用，例如在Hadoop、Kubernetes或云平台上运行。通过模型持久化，数据科学家可以将训练好的模型交给数据工程师进行大规模部署和监控，从而实现模型的高效应用和管理。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428464538,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195834,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668728,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 35,
        "avgCompletionRate": 6,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195834,
        "nodeName": null
      }
    },
    {
      "id": 4195854,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195891,
      "knowledgeGraphId": 29889,
      "nodeName": "MLlib算法",
      "description": "MLlib支持多种机器学习算法，包括分类（如逻辑回归、朴素贝叶斯）、回归（如广义线性回归、生存回归）、决策树、随机森林、梯度提升树、推荐（如交替最小二乘法ALS）、聚类（如K-means、高斯混合模型GMMs）和主题建模（如潜在狄利克雷分配LDA）。这些算法可以用于各种大数据分析任务，提供高效的解决方案。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163694767,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 51,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 22,
        "avgCompletionRate": 2,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195854,
        "nodeName": null
      }
    },
    {
      "id": 4195866,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195891,
      "knowledgeGraphId": 29889,
      "nodeName": "机器学习算法",
      "description": "机器学习算法是一种通过统计分析技术进行模式识别的技术。它通常使用决策树等算法来处理数据，并且可以在监督或无监督的情况下进行学习。机器学习算法的训练时间较短，硬件依赖较低，可以在较少的数据上进行训练，但其准确度相对较低。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163603086,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 58,
        "questionJoinCount": 11,
        "avgLearnedTimeCount": 0,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 22,
        "avgCompletionRate": 3,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195866,
        "nodeName": null
      }
    },
    {
      "id": 4195726,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "K近邻算法",
      "description": "K近邻算法（K-Nearest Neighbors, KNN）是一种用于分类数据的简单方法。其基本思想是通过计算新数据点与已知类别数据点之间的距离，找到距离最近的K个邻居，并根据这些邻居的类别来决定新数据点的类别。K值的选择对算法的效果有重要影响，较小的K值可能会导致分类结果受噪声影响，而较大的K值则可能会使少数类别的数据被多数类别的数据所掩盖。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929023,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 30,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195726,
        "nodeName": null
      }
    },
    {
      "id": 4195727,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "训练数据与测试数据",
      "description": "在机器学习和数据挖掘中，训练数据是指已知类别的数据集，用于训练模型；测试数据是指未知类别的数据集，用于评估模型的性能。在K近邻算法中，训练数据用于构建初始的分类模型，而测试数据则用于验证模型的分类效果。通过调整K值并使用部分训练数据作为测试数据，可以找到最优的K值。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163889959,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 30,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 11,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195727,
        "nodeName": null
      }
    },
    {
      "id": 4195728,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "支持向量机(SVM)",
      "description": "支持向量机（Support Vector Machine, SVM）是一种用于分类和回归分析的监督学习模型。SVM通过在高维空间中找到一个最佳的分离超平面来实现分类。这个超平面最大化了不同类别之间的间隔（即“最大间隔分类器”），从而提高分类的准确性。SVM还可以通过使用核函数（如多项式核和径向基核）将数据从低维空间映射到高维空间，以处理非线性分类问题。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163915903,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195728,
        "nodeName": null
      }
    },
    {
      "id": 4195729,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "软间隔分类器",
      "description": "软间隔分类器（Soft Margin Classifier）是一种允许一定程度误分类的支持向量机模型。通过引入软间隔，模型在训练数据中允许一些误分类，以便在面对新数据时具有更好的泛化能力。这种方法是对偏差-方差权衡的一个应用，即通过增加模型的偏差来减少其方差，从而提高模型在新数据上的表现。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163629242,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195729,
        "nodeName": null
      }
    },
    {
      "id": 4195730,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "核函数与核技巧",
      "description": "核函数（Kernel Function）是一种用于将数据从低维空间映射到高维空间的数学工具，从而使得在高维空间中找到一个线性可分的超平面成为可能。常见的核函数包括多项式核和径向基核。核技巧（Kernel Trick）则是指在不显式地进行高维映射的情况下，直接计算数据点在高维空间中的内积，从而减少计算复杂度。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163981282,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 95,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 32,
        "avgCompletionRate": 9,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195730,
        "nodeName": null
      }
    },
    {
      "id": 4195781,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "监督学习",
      "description": "监督学习是一种机器学习方法，通过提供输入数据及其对应的标签来训练模型，使其能够对新数据进行分类或预测。常见的监督学习算法包括线性回归、逻辑回归、支持向量机、神经网络和决策树等。监督学习在现实场景中应用广泛，如产品推荐、客户细分和疾病诊断等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428407482,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195781,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163837888,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 51,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 47,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 37,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195781,
        "nodeName": null
      }
    },
    {
      "id": 4195782,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "无监督学习",
      "description": "无监督学习是一种机器学习方法，不需要提供标签数据，模型通过分析数据的内在结构进行分类或聚类。常见的无监督学习算法包括K均值聚类、主成分分析（PCA）和异常检测等。无监督学习主要用于发现数据中的模式和结构，如顾客购买习惯分析、细菌行为模式识别和网络攻击检测等。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": {
        "id": 428407483,
        "gmtCreate": 1760586432000,
        "gmtModified": 1760586432000,
        "memberId": 1465951180,
        "completionRate": 0,
        "learnedTimeCount": 5,
        "mocKgInfoId": 29889,
        "masteryRate": 0,
        "nodeId": 4195782,
        "nodeName": null,
        "realName": null,
        "nickName": null
      },
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759928,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 51,
        "questionJoinCount": 10,
        "avgLearnedTimeCount": 47,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 37,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195782,
        "nodeName": null
      }
    },
    {
      "id": 4195794,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "朴素贝叶斯分类算法",
      "description": "朴素贝叶斯分类算法是一种基于贝叶斯定理的概率分类方法。它假设特征之间是相互独立的，即一个特征的出现与其他特征的出现没有关系。尽管这种假设在实际应用中可能并不成立，但朴素贝叶斯分类算法在许多实际问题中表现良好，尤其是在文本分类和垃圾邮件过滤等任务中。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163785657,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 72,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195794,
        "nodeName": null
      }
    },
    {
      "id": 4195795,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "先验概率",
      "description": "先验概率是指在没有观察到任何数据之前，对某个事件发生概率的初步估计。在朴素贝叶斯分类算法中，先验概率通常是根据训练数据中的分类比例来估计的。例如，如果在训练数据中有67%的消息是正常消息，那么先验概率可以设定为0.67。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163929026,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 72,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195795,
        "nodeName": null
      }
    },
    {
      "id": 4195796,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195892,
      "knowledgeGraphId": 29889,
      "nodeName": "加法平滑",
      "description": "加法平滑是一种处理零概率问题的方法。在朴素贝叶斯分类算法中，如果某个单词在训练数据的某一类中从未出现过，那么其概率为零，这会导致整个概率计算结果为零。为了解决这个问题，可以在每个单词的计数中加上一个常数（通常为1），以确保所有单词的概率都大于零。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163811896,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 72,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195796,
        "nodeName": null
      }
    },
    {
      "id": 4195788,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195908,
      "knowledgeGraphId": 29889,
      "nodeName": "K均值聚类算法",
      "description": "K均值聚类算法是一种常用的无监督学习算法，用于将数据集划分为K个簇。其基本步骤包括：选择簇的数量K，随机选择K个初始数据点作为初始簇中心，计算每个数据点到各簇中心的距离，并将数据点分配到最近的簇，计算每个簇的均值作为新的簇中心，重复上述步骤直到簇中心不再变化。通过这种迭代过程，K均值聚类算法能够有效地将数据点分组。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195789,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195788,
          "knowledgeGraphId": 29889,
          "nodeName": "选择最佳K值",
          "description": "选择最佳K值是K均值聚类算法中的一个重要步骤。通常可以通过尝试不同的K值并比较每个K值下的簇内总变异量来确定最佳K值。绘制K值与簇内总变异量的关系图（肘部图），可以观察到在某个K值之后，簇内总变异量的减少速度显著减缓，这个K值对应的点即为肘部点，通常被认为是最佳K值。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 7,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163955182,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 45,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195789,
            "nodeName": null
          }
        },
        {
          "id": 4195790,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195788,
          "knowledgeGraphId": 29889,
          "nodeName": "欧几里得距离",
          "description": "欧几里得距离是K均值聚类算法中常用的距离度量方法。对于二维数据，欧几里得距离是两个点之间的直线距离，计算公式为√((x2-x1)² + (y2-y1)²)。对于三维数据，计算公式为√((x2-x1)² + (y2-y1)² + (z2-z1)²)。对于更高维的数据，公式类似。欧几里得距离能够有效地衡量数据点之间的相似性。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 7,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163668727,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 0,
            "questionJoinCount": 0,
            "avgLearnedTimeCount": 45,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 33,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 0,
            "nodeId": 4195790,
            "nodeName": null
          }
        }
      ],
      "level": 6,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163759929,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 45,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195788,
        "nodeName": null
      }
    },
    {
      "id": 4195823,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195908,
      "knowledgeGraphId": 29889,
      "nodeName": "聚类算法",
      "description": "聚类算法是一种无监督学习方法，用于将数据对象分组到不同的类中。通过聚类分析，可以发现数据中的异常值，这些异常值被视为噪声数据。聚类方法无需任何先验知识，直接形成簇并描述簇，同一个聚类中的所有对象都是相似的，而不同簇中的对象则非常不同。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163942108,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 60,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 70,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 38,
        "avgCompletionRate": 5,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195823,
        "nodeName": null
      }
    },
    {
      "id": 4195711,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195932,
      "knowledgeGraphId": 29889,
      "nodeName": "线性回归",
      "description": "线性回归是一种用于预测因变量（Y）与自变量（X）之间关系的统计方法。通过计算自变量和因变量的均值，绘制回归线，并计算斜率（b1）和截距（b0），从而得到回归方程：Y = b0 + b1 * X。在课程中，通过具体的例子和详细的计算步骤，讲解了如何计算斜率和截距，并最终得到回归方程。",
      "position": 0,
      "labelNameList": null,
      "children": [
        {
          "id": 4195708,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195711,
          "knowledgeGraphId": 29889,
          "nodeName": "均值计算",
          "description": "均值计算是线性回归中的一个重要步骤。首先计算自变量（X）和因变量（Y）的均值，然后利用这些均值来绘制回归线。均值计算的公式为：均值 = 所有观测值之和 / 观测值的数量。在课程中，通过具体的例子，详细讲解了如何计算自变量和因变量的均值，并利用这些均值来绘制回归线。",
          "position": 0,
          "labelNameList": null,
          "children": null,
          "level": 7,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163603084,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 54,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195708,
            "nodeName": null
          }
        },
        {
          "id": 4195710,
          "knowledgeCount": null,
          "questionCount": null,
          "parentId": 4195711,
          "knowledgeGraphId": 29889,
          "nodeName": "回归方程",
          "description": "回归方程是线性回归分析的最终结果，用于描述自变量（X）和因变量（Y）之间的关系。回归方程的形式为：Y = b0 + b1 * X，其中b0是截距，b1是斜率。在课程中，通过具体的例子，详细讲解了如何通过计算斜率和截距来得到回归方程，并解释了回归方程在数据分析中的应用。",
          "position": 1,
          "labelNameList": null,
          "children": null,
          "level": 7,
          "childCount": 0,
          "createTime": "2025-09-16 10:59:46",
          "updateTime": "2025-09-16 10:59:46",
          "mocKgNodeMemberStatisticsDto": null,
          "mocKgNodeAvgStatisticsDto": {
            "id": 163994358,
            "gmtCreate": 1761370943000,
            "gmtModified": 1761370943000,
            "avgMasteryRate": 56,
            "questionJoinCount": 12,
            "avgLearnedTimeCount": 54,
            "mocKgInfoId": 29889,
            "targetType": 1,
            "targetId": 1475722449,
            "learnCount": 36,
            "avgCompletionRate": 10,
            "hasLearnResource": 1,
            "hasQuestion": 1,
            "nodeId": 4195710,
            "nodeName": null
          }
        }
      ],
      "level": 6,
      "childCount": 2,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163733949,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 54,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195711,
        "nodeName": null
      }
    },
    {
      "id": 4195746,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195725,
      "knowledgeGraphId": 29889,
      "nodeName": "特征值和特征向量",
      "description": "特征值和特征向量是线性代数中的重要概念，在 PCA 中尤为重要。特征值表示数据在对应特征向量方向上的方差大小，特征向量则表示数据变化的主要方向。在 PCA 中，我们通过计算数据的协方差矩阵并进行特征值分解，得到一组特征值和特征向量。特征值越大，说明该特征向量方向上的数据变化越大。通过选择最大的特征值对应的特征向量，我们可以找到数据的主成分。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 6,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163968221,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 104,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 31,
        "avgCompletionRate": 7,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195746,
        "nodeName": null
      }
    },
    {
      "id": 4195789,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195788,
      "knowledgeGraphId": 29889,
      "nodeName": "选择最佳K值",
      "description": "选择最佳K值是K均值聚类算法中的一个重要步骤。通常可以通过尝试不同的K值并比较每个K值下的簇内总变异量来确定最佳K值。绘制K值与簇内总变异量的关系图（肘部图），可以观察到在某个K值之后，簇内总变异量的减少速度显著减缓，这个K值对应的点即为肘部点，通常被认为是最佳K值。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 7,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163955182,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 45,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195789,
        "nodeName": null
      }
    },
    {
      "id": 4195790,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195788,
      "knowledgeGraphId": 29889,
      "nodeName": "欧几里得距离",
      "description": "欧几里得距离是K均值聚类算法中常用的距离度量方法。对于二维数据，欧几里得距离是两个点之间的直线距离，计算公式为√((x2-x1)² + (y2-y1)²)。对于三维数据，计算公式为√((x2-x1)² + (y2-y1)² + (z2-z1)²)。对于更高维的数据，公式类似。欧几里得距离能够有效地衡量数据点之间的相似性。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 7,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163668727,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 0,
        "questionJoinCount": 0,
        "avgLearnedTimeCount": 45,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 33,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 0,
        "nodeId": 4195790,
        "nodeName": null
      }
    },
    {
      "id": 4195708,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195711,
      "knowledgeGraphId": 29889,
      "nodeName": "均值计算",
      "description": "均值计算是线性回归中的一个重要步骤。首先计算自变量（X）和因变量（Y）的均值，然后利用这些均值来绘制回归线。均值计算的公式为：均值 = 所有观测值之和 / 观测值的数量。在课程中，通过具体的例子，详细讲解了如何计算自变量和因变量的均值，并利用这些均值来绘制回归线。",
      "position": 0,
      "labelNameList": null,
      "children": [],
      "level": 7,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163603084,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 54,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195708,
        "nodeName": null
      }
    },
    {
      "id": 4195710,
      "knowledgeCount": null,
      "questionCount": null,
      "parentId": 4195711,
      "knowledgeGraphId": 29889,
      "nodeName": "回归方程",
      "description": "回归方程是线性回归分析的最终结果，用于描述自变量（X）和因变量（Y）之间的关系。回归方程的形式为：Y = b0 + b1 * X，其中b0是截距，b1是斜率。在课程中，通过具体的例子，详细讲解了如何通过计算斜率和截距来得到回归方程，并解释了回归方程在数据分析中的应用。",
      "position": 1,
      "labelNameList": null,
      "children": [],
      "level": 7,
      "childCount": 0,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46",
      "mocKgNodeMemberStatisticsDto": null,
      "mocKgNodeAvgStatisticsDto": {
        "id": 163994358,
        "gmtCreate": 1761370943000,
        "gmtModified": 1761370943000,
        "avgMasteryRate": 56,
        "questionJoinCount": 12,
        "avgLearnedTimeCount": 54,
        "mocKgInfoId": 29889,
        "targetType": 1,
        "targetId": 1475722449,
        "learnCount": 36,
        "avgCompletionRate": 10,
        "hasLearnResource": 1,
        "hasQuestion": 1,
        "nodeId": 4195710,
        "nodeName": null
      }
    }
  ],
  "mocKgRelationDtoList": [
    {
      "id": 6274626,
      "fromNodeId": 4195886,
      "toNodeId": 4195802,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274627,
      "fromNodeId": 4195886,
      "toNodeId": 4195803,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274628,
      "fromNodeId": 4195886,
      "toNodeId": 4195807,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274629,
      "fromNodeId": 4195886,
      "toNodeId": 4195872,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274630,
      "fromNodeId": 4195887,
      "toNodeId": 4195768,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274631,
      "fromNodeId": 4195888,
      "toNodeId": 4195719,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274632,
      "fromNodeId": 4195889,
      "toNodeId": 4195819,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274633,
      "fromNodeId": 4195889,
      "toNodeId": 4195820,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274634,
      "fromNodeId": 4195890,
      "toNodeId": 4195740,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274635,
      "fromNodeId": 4195890,
      "toNodeId": 4195755,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274636,
      "fromNodeId": 4195890,
      "toNodeId": 4195811,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274637,
      "fromNodeId": 4195890,
      "toNodeId": 4195812,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274638,
      "fromNodeId": 4195890,
      "toNodeId": 4195813,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274639,
      "fromNodeId": 4195890,
      "toNodeId": 4195814,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274640,
      "fromNodeId": 4195890,
      "toNodeId": 4195815,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274641,
      "fromNodeId": 4195891,
      "toNodeId": 4195832,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274642,
      "fromNodeId": 4195891,
      "toNodeId": 4195834,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274643,
      "fromNodeId": 4195891,
      "toNodeId": 4195854,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274644,
      "fromNodeId": 4195891,
      "toNodeId": 4195866,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274645,
      "fromNodeId": 4195892,
      "toNodeId": 4195726,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274646,
      "fromNodeId": 4195892,
      "toNodeId": 4195727,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274647,
      "fromNodeId": 4195892,
      "toNodeId": 4195728,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274648,
      "fromNodeId": 4195892,
      "toNodeId": 4195729,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274649,
      "fromNodeId": 4195892,
      "toNodeId": 4195730,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274650,
      "fromNodeId": 4195892,
      "toNodeId": 4195781,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274651,
      "fromNodeId": 4195892,
      "toNodeId": 4195782,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274652,
      "fromNodeId": 4195892,
      "toNodeId": 4195794,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274653,
      "fromNodeId": 4195892,
      "toNodeId": 4195795,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274654,
      "fromNodeId": 4195892,
      "toNodeId": 4195796,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274655,
      "fromNodeId": 4195893,
      "toNodeId": 4195736,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274656,
      "fromNodeId": 4195893,
      "toNodeId": 4195767,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274657,
      "fromNodeId": 4195893,
      "toNodeId": 4195841,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274658,
      "fromNodeId": 4195895,
      "toNodeId": 4195734,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274659,
      "fromNodeId": 4195895,
      "toNodeId": 4195735,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274660,
      "fromNodeId": 4195896,
      "toNodeId": 4195732,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274661,
      "fromNodeId": 4195896,
      "toNodeId": 4195842,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274662,
      "fromNodeId": 4195896,
      "toNodeId": 4195862,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274663,
      "fromNodeId": 4195896,
      "toNodeId": 4195876,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274664,
      "fromNodeId": 4195897,
      "toNodeId": 4195720,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274665,
      "fromNodeId": 4195897,
      "toNodeId": 4195733,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274666,
      "fromNodeId": 4195897,
      "toNodeId": 4195875,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274667,
      "fromNodeId": 4195898,
      "toNodeId": 4195737,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274668,
      "fromNodeId": 4195898,
      "toNodeId": 4195739,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274669,
      "fromNodeId": 4195899,
      "toNodeId": 4195821,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274670,
      "fromNodeId": 4195899,
      "toNodeId": 4195855,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274671,
      "fromNodeId": 4195900,
      "toNodeId": 4195890,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274672,
      "fromNodeId": 4195900,
      "toNodeId": 4195889,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274673,
      "fromNodeId": 4195901,
      "toNodeId": 4195870,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274674,
      "fromNodeId": 4195902,
      "toNodeId": 4195791,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274675,
      "fromNodeId": 4195902,
      "toNodeId": 4195792,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274676,
      "fromNodeId": 4195902,
      "toNodeId": 4195793,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274677,
      "fromNodeId": 4195902,
      "toNodeId": 4195849,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274678,
      "fromNodeId": 4195903,
      "toNodeId": 4195880,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274679,
      "fromNodeId": 4195904,
      "toNodeId": 4195749,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274680,
      "fromNodeId": 4195904,
      "toNodeId": 4195750,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274681,
      "fromNodeId": 4195904,
      "toNodeId": 4195751,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274682,
      "fromNodeId": 4195905,
      "toNodeId": 4195718,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274683,
      "fromNodeId": 4195906,
      "toNodeId": 4195715,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274684,
      "fromNodeId": 4195906,
      "toNodeId": 4195844,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274685,
      "fromNodeId": 4195906,
      "toNodeId": 4195845,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274686,
      "fromNodeId": 4195907,
      "toNodeId": 4195714,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274687,
      "fromNodeId": 4195908,
      "toNodeId": 4195788,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274688,
      "fromNodeId": 4195908,
      "toNodeId": 4195823,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274689,
      "fromNodeId": 4195909,
      "toNodeId": 4195747,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274690,
      "fromNodeId": 4195909,
      "toNodeId": 4195748,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274691,
      "fromNodeId": 4195910,
      "toNodeId": 4195725,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274692,
      "fromNodeId": 4195910,
      "toNodeId": 4195745,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274693,
      "fromNodeId": 4195912,
      "toNodeId": 4195778,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274694,
      "fromNodeId": 4195912,
      "toNodeId": 4195779,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274695,
      "fromNodeId": 4195912,
      "toNodeId": 4195780,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274696,
      "fromNodeId": 4195912,
      "toNodeId": 4195783,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274697,
      "fromNodeId": 4195912,
      "toNodeId": 4195863,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274698,
      "fromNodeId": 4195912,
      "toNodeId": 4195864,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274699,
      "fromNodeId": 4195912,
      "toNodeId": 4195867,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274700,
      "fromNodeId": 4195913,
      "toNodeId": 4195892,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274701,
      "fromNodeId": 4195913,
      "toNodeId": 4195891,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274702,
      "fromNodeId": 4195914,
      "toNodeId": 4195839,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274703,
      "fromNodeId": 4195914,
      "toNodeId": 4195840,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274704,
      "fromNodeId": 4195915,
      "toNodeId": 4195838,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274705,
      "fromNodeId": 4195916,
      "toNodeId": 4195837,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274706,
      "fromNodeId": 4195916,
      "toNodeId": 4195881,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274707,
      "fromNodeId": 4195917,
      "toNodeId": 4195762,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274708,
      "fromNodeId": 4195918,
      "toNodeId": 4195757,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274709,
      "fromNodeId": 4195919,
      "toNodeId": 4195756,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274710,
      "fromNodeId": 4195920,
      "toNodeId": 4195724,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274711,
      "fromNodeId": 4195921,
      "toNodeId": 4195775,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274712,
      "fromNodeId": 4195921,
      "toNodeId": 4195776,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274713,
      "fromNodeId": 4195922,
      "toNodeId": 4195758,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274714,
      "fromNodeId": 4195922,
      "toNodeId": 4195759,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274715,
      "fromNodeId": 4195923,
      "toNodeId": 4195752,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274716,
      "fromNodeId": 4195924,
      "toNodeId": 4195742,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274717,
      "fromNodeId": 4195924,
      "toNodeId": 4195874,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274718,
      "fromNodeId": 4195925,
      "toNodeId": 4195897,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274719,
      "fromNodeId": 4195925,
      "toNodeId": 4195896,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274720,
      "fromNodeId": 4195925,
      "toNodeId": 4195895,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274721,
      "fromNodeId": 4195926,
      "toNodeId": 4195763,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274722,
      "fromNodeId": 4195926,
      "toNodeId": 4195836,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274723,
      "fromNodeId": 4195927,
      "toNodeId": 4195741,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274724,
      "fromNodeId": 4195927,
      "toNodeId": 4195760,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274725,
      "fromNodeId": 4195927,
      "toNodeId": 4195761,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274726,
      "fromNodeId": 4195927,
      "toNodeId": 4195770,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274727,
      "fromNodeId": 4195927,
      "toNodeId": 4195771,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274728,
      "fromNodeId": 4195927,
      "toNodeId": 4195787,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274729,
      "fromNodeId": 4195928,
      "toNodeId": 4195900,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274730,
      "fromNodeId": 4195928,
      "toNodeId": 4195899,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274731,
      "fromNodeId": 4195929,
      "toNodeId": 4195716,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274732,
      "fromNodeId": 4195929,
      "toNodeId": 4195878,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274733,
      "fromNodeId": 4195930,
      "toNodeId": 4195907,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274734,
      "fromNodeId": 4195930,
      "toNodeId": 4195906,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274735,
      "fromNodeId": 4195930,
      "toNodeId": 4195905,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274736,
      "fromNodeId": 4195930,
      "toNodeId": 4195904,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274737,
      "fromNodeId": 4195930,
      "toNodeId": 4195903,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274738,
      "fromNodeId": 4195933,
      "toNodeId": 4195769,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274739,
      "fromNodeId": 4195933,
      "toNodeId": 4195830,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274740,
      "fromNodeId": 4195934,
      "toNodeId": 4195920,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274741,
      "fromNodeId": 4195934,
      "toNodeId": 4195917,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274742,
      "fromNodeId": 4195934,
      "toNodeId": 4195916,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274743,
      "fromNodeId": 4195934,
      "toNodeId": 4195915,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274744,
      "fromNodeId": 4195934,
      "toNodeId": 4195914,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274745,
      "fromNodeId": 4195936,
      "toNodeId": 4195924,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274746,
      "fromNodeId": 4195936,
      "toNodeId": 4195923,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274747,
      "fromNodeId": 4195937,
      "toNodeId": 4195929,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274748,
      "fromNodeId": 4195937,
      "toNodeId": 4195928,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274749,
      "fromNodeId": 4195937,
      "toNodeId": 4195927,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274750,
      "fromNodeId": 4195937,
      "toNodeId": 4195926,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274751,
      "fromNodeId": 4195938,
      "toNodeId": 4195930,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274752,
      "fromNodeId": 4195809,
      "toNodeId": 4195858,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274753,
      "fromNodeId": 4195886,
      "toNodeId": 4195808,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274754,
      "fromNodeId": 4195941,
      "toNodeId": 4195847,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274755,
      "fromNodeId": 4195941,
      "toNodeId": 4195846,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274756,
      "fromNodeId": 4195752,
      "toNodeId": 4195753,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274757,
      "fromNodeId": 4195752,
      "toNodeId": 4195754,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274758,
      "fromNodeId": 4195752,
      "toNodeId": 4195882,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274759,
      "fromNodeId": 4195752,
      "toNodeId": 4195884,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274760,
      "fromNodeId": 4195888,
      "toNodeId": 4195721,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274761,
      "fromNodeId": 4195888,
      "toNodeId": 4195873,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274762,
      "fromNodeId": 4195887,
      "toNodeId": 4195877,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274763,
      "fromNodeId": 4195938,
      "toNodeId": 4195901,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274764,
      "fromNodeId": 4195901,
      "toNodeId": 4195902,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274765,
      "fromNodeId": 4195793,
      "toNodeId": 4195822,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274766,
      "fromNodeId": 4195931,
      "toNodeId": 4195824,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274767,
      "fromNodeId": 4195921,
      "toNodeId": 4195885,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274768,
      "fromNodeId": 4195824,
      "toNodeId": 4195827,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274769,
      "fromNodeId": 4195824,
      "toNodeId": 4195883,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274770,
      "fromNodeId": 4195824,
      "toNodeId": 4195825,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274771,
      "fromNodeId": 4195833,
      "toNodeId": 4195860,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274772,
      "fromNodeId": 4195833,
      "toNodeId": 4195861,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274773,
      "fromNodeId": 4195931,
      "toNodeId": 4195943,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274774,
      "fromNodeId": 4195788,
      "toNodeId": 4195789,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274775,
      "fromNodeId": 4195788,
      "toNodeId": 4195790,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274776,
      "fromNodeId": 4195725,
      "toNodeId": 4195746,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274777,
      "fromNodeId": 4195711,
      "toNodeId": 4195708,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274778,
      "fromNodeId": 4195711,
      "toNodeId": 4195710,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274779,
      "fromNodeId": 4195893,
      "toNodeId": 4195850,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274780,
      "fromNodeId": 4195901,
      "toNodeId": 4195713,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274781,
      "fromNodeId": 4195870,
      "toNodeId": 4195772,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274782,
      "fromNodeId": 4195901,
      "toNodeId": 4195709,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274783,
      "fromNodeId": 4195945,
      "toNodeId": 4195784,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274784,
      "fromNodeId": 4195945,
      "toNodeId": 4195785,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274785,
      "fromNodeId": 4195945,
      "toNodeId": 4195786,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274786,
      "fromNodeId": 4195775,
      "toNodeId": 4195777,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274787,
      "fromNodeId": 4195921,
      "toNodeId": 4195712,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274788,
      "fromNodeId": 4195731,
      "toNodeId": 4195851,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274789,
      "fromNodeId": 4195935,
      "toNodeId": 4195879,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274790,
      "fromNodeId": 4195945,
      "toNodeId": 4195723,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274791,
      "fromNodeId": 4195921,
      "toNodeId": 4195773,
      "relationType": 1,
      "position": 4,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274792,
      "fromNodeId": 4195707,
      "toNodeId": 4195843,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274793,
      "fromNodeId": 4195921,
      "toNodeId": 4195911,
      "relationType": 1,
      "position": 5,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274794,
      "fromNodeId": 4195911,
      "toNodeId": 4195707,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274795,
      "fromNodeId": 4195927,
      "toNodeId": 4195835,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274796,
      "fromNodeId": 4195741,
      "toNodeId": 4195869,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274797,
      "fromNodeId": 4195716,
      "toNodeId": 4195717,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274798,
      "fromNodeId": 4195926,
      "toNodeId": 4195764,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274799,
      "fromNodeId": 4195926,
      "toNodeId": 4195765,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274800,
      "fromNodeId": 4195946,
      "toNodeId": 4195945,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274801,
      "fromNodeId": 4195946,
      "toNodeId": 4195921,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274802,
      "fromNodeId": 4195935,
      "toNodeId": 4195893,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274803,
      "fromNodeId": 4195935,
      "toNodeId": 4195894,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274804,
      "fromNodeId": 4195935,
      "toNodeId": 4195925,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274805,
      "fromNodeId": 4195935,
      "toNodeId": 4195922,
      "relationType": 1,
      "position": 4,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274806,
      "fromNodeId": 4195893,
      "toNodeId": 4195731,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274807,
      "fromNodeId": 4195886,
      "toNodeId": 4195804,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274808,
      "fromNodeId": 4195886,
      "toNodeId": 4195805,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274809,
      "fromNodeId": 4195935,
      "toNodeId": 4195766,
      "relationType": 1,
      "position": 5,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274810,
      "fromNodeId": 4195766,
      "toNodeId": 4195722,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274811,
      "fromNodeId": 4195922,
      "toNodeId": 4195886,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274812,
      "fromNodeId": 4195894,
      "toNodeId": 4195809,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274813,
      "fromNodeId": 4195894,
      "toNodeId": 4195810,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274814,
      "fromNodeId": 4195894,
      "toNodeId": 4195853,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274815,
      "fromNodeId": 4195936,
      "toNodeId": 4195800,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274816,
      "fromNodeId": 4195936,
      "toNodeId": 4195801,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274817,
      "fromNodeId": 4195936,
      "toNodeId": 4195871,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274818,
      "fromNodeId": 4195936,
      "toNodeId": 4195898,
      "relationType": 1,
      "position": 4,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274819,
      "fromNodeId": 4195936,
      "toNodeId": 4195806,
      "relationType": 1,
      "position": 5,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274820,
      "fromNodeId": 4195871,
      "toNodeId": 4195857,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274821,
      "fromNodeId": 4195800,
      "toNodeId": 4195888,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274822,
      "fromNodeId": 4195801,
      "toNodeId": 4195797,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274823,
      "fromNodeId": 4195800,
      "toNodeId": 4195798,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274824,
      "fromNodeId": 4195799,
      "toNodeId": 4195865,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274825,
      "fromNodeId": 4195799,
      "toNodeId": 4195887,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274826,
      "fromNodeId": 4195933,
      "toNodeId": 4195947,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274827,
      "fromNodeId": 4195947,
      "toNodeId": 4195816,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274828,
      "fromNodeId": 4195947,
      "toNodeId": 4195817,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274829,
      "fromNodeId": 4195947,
      "toNodeId": 4195818,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274830,
      "fromNodeId": 4195924,
      "toNodeId": 4195826,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274831,
      "fromNodeId": 4195826,
      "toNodeId": 4195743,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274832,
      "fromNodeId": 4195826,
      "toNodeId": 4195744,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274833,
      "fromNodeId": 4195742,
      "toNodeId": 4195848,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274834,
      "fromNodeId": 4195898,
      "toNodeId": 4195941,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274835,
      "fromNodeId": 4195846,
      "toNodeId": 4195738,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274836,
      "fromNodeId": 4195806,
      "toNodeId": 4195856,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274837,
      "fromNodeId": 4195933,
      "toNodeId": 4195931,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274838,
      "fromNodeId": 4195871,
      "toNodeId": 4195799,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274839,
      "fromNodeId": 4195943,
      "toNodeId": 4195828,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274840,
      "fromNodeId": 4195943,
      "toNodeId": 4195829,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274841,
      "fromNodeId": 4195943,
      "toNodeId": 4195831,
      "relationType": 1,
      "position": 4,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274842,
      "fromNodeId": 4195831,
      "toNodeId": 4195942,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274843,
      "fromNodeId": 4195943,
      "toNodeId": 4195852,
      "relationType": 1,
      "position": 5,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274844,
      "fromNodeId": 4195943,
      "toNodeId": 4195833,
      "relationType": 1,
      "position": 6,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274845,
      "fromNodeId": 4195831,
      "toNodeId": 4195944,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274846,
      "fromNodeId": 4195833,
      "toNodeId": 4195859,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274847,
      "fromNodeId": 4195913,
      "toNodeId": 4195908,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274848,
      "fromNodeId": 4195932,
      "toNodeId": 4195711,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274849,
      "fromNodeId": 4195913,
      "toNodeId": 4195932,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274850,
      "fromNodeId": 4195868,
      "toNodeId": 4195912,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274851,
      "fromNodeId": 4195868,
      "toNodeId": 4195913,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274852,
      "fromNodeId": 4195868,
      "toNodeId": 4195909,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274853,
      "fromNodeId": 4195868,
      "toNodeId": 4195910,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274854,
      "fromNodeId": 4195871,
      "toNodeId": 4195774,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274855,
      "fromNodeId": 4195939,
      "toNodeId": 4195868,
      "relationType": 1,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274856,
      "fromNodeId": 4195936,
      "toNodeId": 4195939,
      "relationType": 1,
      "position": 6,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274857,
      "fromNodeId": 4195920,
      "toNodeId": 4195919,
      "relationType": 1,
      "position": 1,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274858,
      "fromNodeId": 4195920,
      "toNodeId": 4195918,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274859,
      "fromNodeId": 4195940,
      "toNodeId": 4195937,
      "relationType": 1,
      "position": 2,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274860,
      "fromNodeId": 4195940,
      "toNodeId": 4195946,
      "relationType": 1,
      "position": 3,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274861,
      "fromNodeId": 4195940,
      "toNodeId": 4195938,
      "relationType": 1,
      "position": 4,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274862,
      "fromNodeId": 4195940,
      "toNodeId": 4195935,
      "relationType": 1,
      "position": 5,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274863,
      "fromNodeId": 4195940,
      "toNodeId": 4195936,
      "relationType": 1,
      "position": 6,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274864,
      "fromNodeId": 4195940,
      "toNodeId": 4195933,
      "relationType": 1,
      "position": 7,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274865,
      "fromNodeId": 4195940,
      "toNodeId": 4195934,
      "relationType": 1,
      "position": 8,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274866,
      "fromNodeId": 4195878,
      "toNodeId": 4195716,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274867,
      "fromNodeId": 4195811,
      "toNodeId": 4195740,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274868,
      "fromNodeId": 4195812,
      "toNodeId": 4195740,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274869,
      "fromNodeId": 4195813,
      "toNodeId": 4195740,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274870,
      "fromNodeId": 4195814,
      "toNodeId": 4195740,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274871,
      "fromNodeId": 4195815,
      "toNodeId": 4195740,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274872,
      "fromNodeId": 4195740,
      "toNodeId": 4195755,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274873,
      "fromNodeId": 4195819,
      "toNodeId": 4195820,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274874,
      "fromNodeId": 4195890,
      "toNodeId": 4195889,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274875,
      "fromNodeId": 4195821,
      "toNodeId": 4195855,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274876,
      "fromNodeId": 4195900,
      "toNodeId": 4195899,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274877,
      "fromNodeId": 4195741,
      "toNodeId": 4195760,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274878,
      "fromNodeId": 4195741,
      "toNodeId": 4195761,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274879,
      "fromNodeId": 4195741,
      "toNodeId": 4195770,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274880,
      "fromNodeId": 4195741,
      "toNodeId": 4195771,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274881,
      "fromNodeId": 4195741,
      "toNodeId": 4195787,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274882,
      "fromNodeId": 4195835,
      "toNodeId": 4195741,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274883,
      "fromNodeId": 4195771,
      "toNodeId": 4195760,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274884,
      "fromNodeId": 4195836,
      "toNodeId": 4195763,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274885,
      "fromNodeId": 4195764,
      "toNodeId": 4195763,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274886,
      "fromNodeId": 4195765,
      "toNodeId": 4195836,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274887,
      "fromNodeId": 4195927,
      "toNodeId": 4195928,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274888,
      "fromNodeId": 4195927,
      "toNodeId": 4195929,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274889,
      "fromNodeId": 4195927,
      "toNodeId": 4195926,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274890,
      "fromNodeId": 4195928,
      "toNodeId": 4195929,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274891,
      "fromNodeId": 4195929,
      "toNodeId": 4195926,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274892,
      "fromNodeId": 4195784,
      "toNodeId": 4195786,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274893,
      "fromNodeId": 4195785,
      "toNodeId": 4195786,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274894,
      "fromNodeId": 4195723,
      "toNodeId": 4195784,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274895,
      "fromNodeId": 4195723,
      "toNodeId": 4195785,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274896,
      "fromNodeId": 4195773,
      "toNodeId": 4195712,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274897,
      "fromNodeId": 4195712,
      "toNodeId": 4195911,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274898,
      "fromNodeId": 4195885,
      "toNodeId": 4195775,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274899,
      "fromNodeId": 4195945,
      "toNodeId": 4195921,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274900,
      "fromNodeId": 4195715,
      "toNodeId": 4195844,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274901,
      "fromNodeId": 4195715,
      "toNodeId": 4195845,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274902,
      "fromNodeId": 4195749,
      "toNodeId": 4195750,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274903,
      "fromNodeId": 4195749,
      "toNodeId": 4195751,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274904,
      "fromNodeId": 4195907,
      "toNodeId": 4195906,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274905,
      "fromNodeId": 4195907,
      "toNodeId": 4195905,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274906,
      "fromNodeId": 4195906,
      "toNodeId": 4195905,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274907,
      "fromNodeId": 4195904,
      "toNodeId": 4195903,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274908,
      "fromNodeId": 4195791,
      "toNodeId": 4195849,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274909,
      "fromNodeId": 4195792,
      "toNodeId": 4195849,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274910,
      "fromNodeId": 4195793,
      "toNodeId": 4195849,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274911,
      "fromNodeId": 4195870,
      "toNodeId": 4195902,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274912,
      "fromNodeId": 4195870,
      "toNodeId": 4195713,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274913,
      "fromNodeId": 4195870,
      "toNodeId": 4195709,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274914,
      "fromNodeId": 4195930,
      "toNodeId": 4195901,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274915,
      "fromNodeId": 4195850,
      "toNodeId": 4195767,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274916,
      "fromNodeId": 4195841,
      "toNodeId": 4195731,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274917,
      "fromNodeId": 4195736,
      "toNodeId": 4195731,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274918,
      "fromNodeId": 4195853,
      "toNodeId": 4195809,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274919,
      "fromNodeId": 4195853,
      "toNodeId": 4195810,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274920,
      "fromNodeId": 4195733,
      "toNodeId": 4195720,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274921,
      "fromNodeId": 4195720,
      "toNodeId": 4195875,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274922,
      "fromNodeId": 4195732,
      "toNodeId": 4195862,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274923,
      "fromNodeId": 4195732,
      "toNodeId": 4195876,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274924,
      "fromNodeId": 4195732,
      "toNodeId": 4195842,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274925,
      "fromNodeId": 4195734,
      "toNodeId": 4195735,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274926,
      "fromNodeId": 4195897,
      "toNodeId": 4195895,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274927,
      "fromNodeId": 4195896,
      "toNodeId": 4195897,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274928,
      "fromNodeId": 4195872,
      "toNodeId": 4195802,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274929,
      "fromNodeId": 4195872,
      "toNodeId": 4195803,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274930,
      "fromNodeId": 4195872,
      "toNodeId": 4195807,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274931,
      "fromNodeId": 4195872,
      "toNodeId": 4195808,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274932,
      "fromNodeId": 4195804,
      "toNodeId": 4195805,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274933,
      "fromNodeId": 4195758,
      "toNodeId": 4195886,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274934,
      "fromNodeId": 4195758,
      "toNodeId": 4195759,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274935,
      "fromNodeId": 4195879,
      "toNodeId": 4195894,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274936,
      "fromNodeId": 4195894,
      "toNodeId": 4195925,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274937,
      "fromNodeId": 4195894,
      "toNodeId": 4195922,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274938,
      "fromNodeId": 4195925,
      "toNodeId": 4195922,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274939,
      "fromNodeId": 4195894,
      "toNodeId": 4195766,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274940,
      "fromNodeId": 4195766,
      "toNodeId": 4195925,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274941,
      "fromNodeId": 4195766,
      "toNodeId": 4195922,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274942,
      "fromNodeId": 4195893,
      "toNodeId": 4195894,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274943,
      "fromNodeId": 4195743,
      "toNodeId": 4195744,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274944,
      "fromNodeId": 4195742,
      "toNodeId": 4195826,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274945,
      "fromNodeId": 4195874,
      "toNodeId": 4195826,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274946,
      "fromNodeId": 4195753,
      "toNodeId": 4195882,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274947,
      "fromNodeId": 4195754,
      "toNodeId": 4195884,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274948,
      "fromNodeId": 4195882,
      "toNodeId": 4195884,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274949,
      "fromNodeId": 4195719,
      "toNodeId": 4195873,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274950,
      "fromNodeId": 4195873,
      "toNodeId": 4195721,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274951,
      "fromNodeId": 4195888,
      "toNodeId": 4195798,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274952,
      "fromNodeId": 4195768,
      "toNodeId": 4195877,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274953,
      "fromNodeId": 4195865,
      "toNodeId": 4195887,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274954,
      "fromNodeId": 4195857,
      "toNodeId": 4195799,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274955,
      "fromNodeId": 4195799,
      "toNodeId": 4195774,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274956,
      "fromNodeId": 4195847,
      "toNodeId": 4195846,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274957,
      "fromNodeId": 4195737,
      "toNodeId": 4195739,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274958,
      "fromNodeId": 4195737,
      "toNodeId": 4195941,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274959,
      "fromNodeId": 4195739,
      "toNodeId": 4195941,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274960,
      "fromNodeId": 4195783,
      "toNodeId": 4195778,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274961,
      "fromNodeId": 4195783,
      "toNodeId": 4195867,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274962,
      "fromNodeId": 4195783,
      "toNodeId": 4195863,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274963,
      "fromNodeId": 4195783,
      "toNodeId": 4195864,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274964,
      "fromNodeId": 4195780,
      "toNodeId": 4195779,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274965,
      "fromNodeId": 4195727,
      "toNodeId": 4195726,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274966,
      "fromNodeId": 4195781,
      "toNodeId": 4195728,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274967,
      "fromNodeId": 4195728,
      "toNodeId": 4195729,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274968,
      "fromNodeId": 4195728,
      "toNodeId": 4195730,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274969,
      "fromNodeId": 4195794,
      "toNodeId": 4195795,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274970,
      "fromNodeId": 4195794,
      "toNodeId": 4195796,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274971,
      "fromNodeId": 4195866,
      "toNodeId": 4195854,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274972,
      "fromNodeId": 4195866,
      "toNodeId": 4195832,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274973,
      "fromNodeId": 4195832,
      "toNodeId": 4195834,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274974,
      "fromNodeId": 4195790,
      "toNodeId": 4195789,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274975,
      "fromNodeId": 4195823,
      "toNodeId": 4195788,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274976,
      "fromNodeId": 4195708,
      "toNodeId": 4195710,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274977,
      "fromNodeId": 4195892,
      "toNodeId": 4195891,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274978,
      "fromNodeId": 4195892,
      "toNodeId": 4195908,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274979,
      "fromNodeId": 4195932,
      "toNodeId": 4195892,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274980,
      "fromNodeId": 4195748,
      "toNodeId": 4195747,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274981,
      "fromNodeId": 4195745,
      "toNodeId": 4195725,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274982,
      "fromNodeId": 4195913,
      "toNodeId": 4195912,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274983,
      "fromNodeId": 4195913,
      "toNodeId": 4195910,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274984,
      "fromNodeId": 4195871,
      "toNodeId": 4195924,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274985,
      "fromNodeId": 4195871,
      "toNodeId": 4195923,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274986,
      "fromNodeId": 4195871,
      "toNodeId": 4195800,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274987,
      "fromNodeId": 4195871,
      "toNodeId": 4195801,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274988,
      "fromNodeId": 4195871,
      "toNodeId": 4195898,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274989,
      "fromNodeId": 4195871,
      "toNodeId": 4195806,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274990,
      "fromNodeId": 4195871,
      "toNodeId": 4195939,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274991,
      "fromNodeId": 4195816,
      "toNodeId": 4195817,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274992,
      "fromNodeId": 4195816,
      "toNodeId": 4195818,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274993,
      "fromNodeId": 4195827,
      "toNodeId": 4195883,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274994,
      "fromNodeId": 4195827,
      "toNodeId": 4195825,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274995,
      "fromNodeId": 4195942,
      "toNodeId": 4195944,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274996,
      "fromNodeId": 4195859,
      "toNodeId": 4195860,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274997,
      "fromNodeId": 4195860,
      "toNodeId": 4195861,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274998,
      "fromNodeId": 4195828,
      "toNodeId": 4195829,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6274999,
      "fromNodeId": 4195852,
      "toNodeId": 4195831,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275000,
      "fromNodeId": 4195824,
      "toNodeId": 4195943,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275001,
      "fromNodeId": 4195769,
      "toNodeId": 4195830,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275002,
      "fromNodeId": 4195769,
      "toNodeId": 4195931,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275003,
      "fromNodeId": 4195769,
      "toNodeId": 4195947,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275004,
      "fromNodeId": 4195724,
      "toNodeId": 4195919,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275005,
      "fromNodeId": 4195919,
      "toNodeId": 4195918,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275006,
      "fromNodeId": 4195837,
      "toNodeId": 4195881,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275007,
      "fromNodeId": 4195839,
      "toNodeId": 4195840,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275008,
      "fromNodeId": 4195920,
      "toNodeId": 4195917,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275009,
      "fromNodeId": 4195917,
      "toNodeId": 4195916,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275010,
      "fromNodeId": 4195917,
      "toNodeId": 4195915,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275011,
      "fromNodeId": 4195915,
      "toNodeId": 4195914,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275012,
      "fromNodeId": 4195937,
      "toNodeId": 4195946,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275013,
      "fromNodeId": 4195946,
      "toNodeId": 4195938,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275014,
      "fromNodeId": 4195938,
      "toNodeId": 4195935,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275015,
      "fromNodeId": 4195935,
      "toNodeId": 4195936,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275016,
      "fromNodeId": 4195936,
      "toNodeId": 4195933,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    },
    {
      "id": 6275017,
      "fromNodeId": 4195933,
      "toNodeId": 4195934,
      "relationType": 2,
      "position": 0,
      "knowledgeGraphId": 29889,
      "createTime": "2025-09-16 10:59:46",
      "updateTime": "2025-09-16 10:59:46"
    }
  ],
  "questionGraphLevelList": null,
  "published": null,
  "taskStatus": null,
  "taskProgress": null
}
