{
  "title": "无共享架构",
  "single-choice": [
    {
      "question": "在无共享架构（Shared-Nothing Architecture）中，每个计算节点如何处理数据？",
      "options": ["A. 所有节点共享同一块磁盘存储", "B. 每个节点拥有独立的内存和磁盘，不共享任何资源", "C. 节点之间通过网络动态分配内存", "D. 数据以副本形式存储在所有节点上"],
      "right-answer": "B"
    },
    {
      "question": "以下哪项是无共享架构的主要优势？",
      "options": ["A. 简化的数据一致性和事务管理", "B. 更好的横向扩展能力", "C. 更低的网络通信开销", "D. 降低的硬件成本"],
      "right-answer": "B"
    },
    {
      "question": "在无共享架构中，数据分区（Sharding）的主要目的是什么？",
      "options": ["A. 减少节点间的数据冗余", "B. 实现数据的并行处理和负载均衡", "C. 提高单个节点的存储容量", "D. 简化数据备份流程"],
      "right-answer": "B"
    },
    {
      "question": "以下哪种系统最常采用无共享架构？",
      "options": ["A. 传统关系型数据库管理系统（RDBMS）", "B. 分布式大规模数据仓库（如Redshift、Snowflake）", "C. 基于主从复制的高可用数据库", "D. 内存数据库（如Redis Cluster）"],
      "right-answer": "B"
    },
    {
      "question": "在无共享架构中，当一个节点发生故障时，系统通常如何应对？",
      "options": ["A. 整个系统停机，等待人工恢复", "B. 其他节点接管故障节点的数据和服务，保证可用性", "C. 依赖共享存储自动恢复", "D. 通过数据库复制机制立即回滚"],
      "right-answer": "B"
    },
    {
      "question": "无共享架构与共享存储架构相比，最显著的缺点是什么？",
      "options": ["A. 系统扩展性较差", "B. 节点间通信成为性能瓶颈", "C. 数据一致性更难保证", "D. 成本过高"],
      "right-answer": "C"
    },
    {
      "question": "在无共享架构中，全局查询的优化通常依赖于什么技术？",
      "options": ["A. 数据库连接池", "B. 查询路由器和分布式执行计划", "C. 本地索引合并", "D. 事务日志同步"],
      "right-answer": "B"
    },
    {
      "question": "以下哪项关于无共享架构的说法是错误的？",
      "options": ["A. 它支持水平扩展", "B. 节点之间没有共享的内存或磁盘", "C. 它通常比共享内存架构具有更高的延迟", "D. 它简化了分布式事务处理"],
      "right-answer": "D"
    }
  ],
  "short-answer": [
    {
      "question": "请简要解释无共享架构（Shared-Nothing Architecture）的核心设计原则，并说明它如何支持大规模数据处理系统的可扩展性。"
    },
    {
      "question": "在无共享架构中，为什么数据分区（Sharding）是实现高可用性和负载均衡的关键？请结合数据副本和故障恢复机制进行说明。"
    }
  ]
}