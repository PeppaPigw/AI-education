{
  "title": "分布式爬虫架构",
  "single-choice": [
    {
      "question": "在分布式爬虫架构中，以下哪项技术最常用于实现任务的分发与调度？",
      "options": ["A. RabbitMQ", "B. MySQL", "C. Redis", "D. Elasticsearch"],
      "right-answer": "A"
    },
    {
      "question": "关于分布式爬虫中的去重机制，以下哪种说法是正确的？",
      "options": [
        "A. 去重工作必须在主控节点上完成",
        "B. 去重只能通过存储URL的哈希值来实现",
        "C. 使用布隆过滤器可以在牺牲一定准确率的前提下显著降低内存开销",
        "D. 去重仅在数据采集阶段进行"
      ],
      "right-answer": "C"
    },
    {
      "question": "在基于Master-Worker的分布式爬虫架构中，以下哪项是Worker节点的主要职责？",
      "options": [
        "A. 存储所有爬取的数据",
        "B. 调度和管理所有任务",
        "C. 执行具体的网页抓取和解析任务",
        "D. 维护系统的全局状态"
      ],
      "right-answer": "C"
    },
    {
      "question": "以下关于分布式爬虫中反爬虫策略应对的描述，哪项是正确的？",
      "options": [
        "A. 仅需通过代理IP池即可完全绕过反爬",
        "B. 反爬机制与分布式架构无关",
        "C. 分布式架构通过分散请求频率和来源IP来降低被封风险",
        "D. 避免使用验证码即可完全规避反爬"
      ],
      "right-answer": "C"
    },
    {
      "question": "在分布式爬虫中，为了保证数据的一致性，通常会采用以下哪种方式处理数据存储？",
      "options": [
        "A. 让每个Worker节点独立写入本地文件",
        "B. 使用共享文件系统如NFS进行集中写入",
        "C. 将数据写入消息队列，由下游消费者统一处理",
        "D. 由Master节点统一接收并写入数据库"
      ],
      "right-answer": "C"
    },
    {
      "question": "以下哪项是分布式爬虫相较于单机爬虫的主要优势？",
      "options": [
        "A. 更低的开发复杂度",
        "B. 更快的单个页面加载速度",
        "C. 更高的并发能力和系统容错性",
        "D. 更少的服务器资源占用"
      ],
      "right-answer": "C"
    },
    {
      "question": "关于分布式爬虫中的任务优先级调度，以下哪项描述最准确？",
      "options": [
        "A. 所有任务必须按先进先出的顺序执行",
        "B. 优先级调度通常由Worker节点自行决定",
        "C. 通常通过消息队列的优先级队列或数据库的优先级字段实现",
        "D. 优先级调度在分布式环境中无法实现"
      ],
      "right-answer": "C"
    },
    {
      "question": "在使用Scrapy-Redis构建分布式爬虫时，以下哪项是其核心组件？",
      "options": [
        "A. Scrapy-Redis",
        "B. Scrapy-Proxy",
        "C. Scrapy-Splash",
        "D. Scrapy-Downloader"
      ],
      "right-answer": "A"
    }
  ],
  "short-answer": [
    {
      "question": "请简述分布式爬虫系统中，主控节点（Master）和工作节点（Worker）之间的通信机制，并说明其重要性。"
    },
    {
      "question": "在构建大规模分布式爬虫时，如何平衡数据采集的效率与对目标网站的友好性？请从请求频率、IP轮换和延迟控制等方面说明。"
    }
  ]
}
