{
  "title": "基于列的存储",
  "single-choice": [
    {
      "question": "在基于列的存储中，数据是如何组织的？",
      "options": ["A. 按行存储，每一行的数据连续存放", "B. 按列存储，每一列的数据连续存放", "C. 按页存储，数据按固定大小的页进行分割", "D. 按簇存储，相似数据聚集存放"],
      "right-answer": "B"
    },
    {
      "question": "以下哪项是基于列的存储的主要优势？",
      "options": ["A. 更好的随机读取性能", "B. 更高的写入吞吐量", "C. 更优的压缩率和扫描性能", "D. 更低的索引开销"],
      "right-answer": "C"
    },
    {
      "question": "关于列式数据库中数据压缩效率的说法，哪一项是正确的？",
      "options": ["A. 列式存储不利于数据压缩，因为数据类型多样", "B. 列式存储中每列数据同质性高，压缩效率通常低于行式存储", "C. 列式存储中每列数据同质性高，压缩效率通常高于行式存储", "D. 列式存储不支持压缩，必须以原始形式存储"],
      "right-answer": "C"
    },
    {
      "question": "在分析型查询中，如果只访问表中的少数几列，哪种存储方式更高效？",
      "options": ["A. 行式存储，因为所有数据都在同一位置", "B. 列式存储，因为它只读取所需列", "C. 页式存储，因为它减少了I/O次数", "D. 混合式存储，因为它结合了行和列的优点"],
      "right-answer": "B"
    },
    {
      "question": "下列哪种场景最适合使用列式数据库？",
      "options": ["A. 高频的单行更新操作", "B. 事务处理系统（OLTP）", "C. 批量数据加载和复杂分析查询", "D. 实时消息处理"],
      "right-answer": "C"
    },
    {
      "question": "在列式存储中，如果需要频繁更新某一行的所有列，会出现什么问题？",
      "options": ["A. 更新效率高，因为所有列都存储在一起", "B. 更新效率高，因为列式数据库支持行级更新", "C. 更新效率低，因为需要修改多个列文件", "D. 更新效率低，因为必须重写整个表"],
      "right-answer": "C"
    },
    {
      "question": "以下关于列式存储与行式存储的对比描述，哪一项是准确的？",
      "options": ["A. 列式存储在更新和插入操作上优于行式存储", "B. 行式存储适合分析型工作负载，因为可以快速扫描所有列", "C. 列式存储在聚合和过滤操作上效率更高，因为它只读取必要列", "D. 行式存储的压缩率通常高于列式存储"],
      "right-answer": "C"
    },
    {
      "question": "在列式数据库中，列的物理存储顺序通常依据什么？",
      "options": ["A. 列的逻辑顺序，即建表时定义的顺序", "B. 列的访问频率，最常访问的列优先存储", "C. 列的数据类型，相同类型的数据集中存放", "D. 列的大小，大列优先存储"],
      "right-answer": "A"
    }
  ],
  "short-answer": [
    {
      "question": "请解释为什么列式存储在处理分析型查询时通常比行式存储更高效。"
    },
    {
      "question": "描述列式存储在数据压缩方面的优势，并举例说明这种优势如何体现在实际场景中。"
    }
  ]
}