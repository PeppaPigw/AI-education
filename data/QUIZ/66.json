{
  "title": "EagerExecution",
  "single-choice": [
    {
      "question": "以下关于EagerExecution的说法，哪一项是正确的？",
      "options": ["A. EagerExecution是TensorFlow 1.x版本中默认的执行模式", "B. EagerExecution允许在定义计算图后立即执行操作", "C. EagerExecution会将所有操作记录到计算图中，延迟执行", "D. EagerExecution的性能通常优于GraphExecution模式"],
      "right-answer": "B"
    },
    {
      "question": "在EagerExecution模式下，Tensor的值如何获取？",
      "options": ["A. 通过调用Tensor的eval()方法", "B. 通过sess.run()方法", "C. 直接打印Tensor对象即可显示其值", "D. 通过调用Tensor.numpy()方法"],
      "right-answer": "D"
    },
    {
      "question": "以下哪个API用于在TensorFlow中启用EagerExecution？",
      "options": ["A. tf.disable_eager_execution()", "B. tf.enable_eager_execution()", "C. tf.set_eager_mode(True)", "D. tf.enable_graph_mode()"],
      "right-answer": "B"
    },
    {
      "question": "在EagerExecution下，以下哪种方式可以正确地控制GPU使用？",
      "options": ["A. 使用tf.device('/device:GPU:0')装饰器", "B. 必须先启用GraphExecution模式", "C. 无法使用GPU，因为EagerExecution不支持硬件加速", "D. 必须使用tf.Session()对象"],
      "right-answer": "A"
    },
    {
      "question": "关于EagerExecution和GraphExecution的对比，以下说法正确的是？",
      "options": ["A. EagerExecution更适合生产环境，因为其执行速度快", "B. GraphExecution在调试时比EagerExecution更方便", "C. EagerExecution支持即时调试，可以使用Python的print函数直接输出中间结果", "D. EagerExecution不支持动态控制流（如if/while）"],
      "right-answer": "C"
    },
    {
      "question": "在EagerExecution中，如何为操作添加梯度记录？",
      "options": ["A. 使用tf.GradientTape()上下文管理器", "B. 使用tf.train.AdamOptimizer()", "C. 使用tf.Session()对象", "D. 使用tf.graph()装饰器"],
      "right-answer": "A"
    },
    {
      "question": "以下哪项是EagerExecution模式下的一个主要限制？",
      "options": ["A. 不支持自动求导", "B. 无法在GPU上运行", "C. 无法将模型导出为SavedModel格式", "D. 不支持在GraphExecution中使用的高级API（如tf.data）"],
      "right-answer": "C"
    },
    {
      "question": "在EagerExecution中，Tensor的计算是按什么方式进行的？",
      "options": ["A. 延迟执行，直到被显式调用", "B. 按定义顺序立即执行", "C. 通过计算图调度执行", "D. 在所有操作完成后一次性执行"],
      "right-answer": "B"
    }
  ],
  "short-answer": [
    {
      "question": "请简要说明EagerExecution在机器学习开发中的优势，并举例说明其如何提高调试效率。"
    },
    {
      "question": "解释在EagerExecution模式下，tf.GradientTape()的作用机制，并说明它在训练过程中的关键作用。"
    }
  ]
}