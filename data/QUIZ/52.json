{
  "title": "并行图计算模型",
  "single-choice": [
    {
      "question": "在并行图计算中，顶点上向计算（Vertex-centric Computation）模型的核心思想是什么？",
      "options": ["A. 每个顶点独立执行计算，不与邻居通信", "B. 计算由图的边驱动，每条边上的数据被处理一次", "C. 图的计算任务由图的分区决定，每个分区由一个处理器处理", "D. 每个顶点在每一轮迭代中根据其自身的状态和邻居传递的消息更新自己的状态"],
      "right-answer": "D"
    },
    {
      "question": "在Bulk Synchronous Parallel (BSP) 模型中，计算过程被划分为一系列超步（supersteps）。以下关于超步的描述哪一项是正确的？",
      "options": ["A. 每个超步中，所有顶点可以并行地发送消息，但接收消息必须在下一个超步中完成", "B. 在一个超步内，顶点只能接收消息，不能发送消息", "C. 超步之间存在全局屏障同步，所有计算必须在进入下一个超步前完成", "D. 超步的执行顺序由图的拓扑结构决定，无法并行化"],
      "right-answer": "C"
    },
    {
      "question": "在Giraph等基于BSP的图计算框架中，顶点的状态（如距离、标签等）通常存储在何处？",
      "options": ["A. 存储在内存中，每个顶点的状态由其所在的机器上的进程维护", "B. 存储在磁盘中，以支持大规模图的持久化", "C. 存储在中央协调器（Coordinator）中，由其统一管理所有顶点的状态", "D. 存储在图的边上，作为边的元数据"],
      "right-answer": "A"
    },
    {
      "question": "与顶点上向计算模型相比，边上向计算（Edge-centric Computation）模型的主要优势在于？",
      "options": ["A. 更容易实现全局同步机制", "B. 更适合稀疏图的计算，因为计算单元更细粒度", "C. 更容易处理顶点状态的不一致性问题", "D. 更容易支持动态图的结构修改"],
      "right-answer": "B"
    },
    {
      "question": "在Pregel模型中，如果一个顶点在一轮超步中发送了消息，这些消息会在何时被接收？",
      "options": ["A. 在同一超步的后续处理阶段立即被接收", "B. 在下一个超步的开始阶段被所有邻居接收", "C. 只有在接收顶点执行计算时才会被处理", "D. 在全局屏障同步后由协调器统一分发"],
      "right-answer": "B"
    },
    {
      "question": "以下哪项不是并行图计算中常见的通信开销来源？",
      "options": ["A. 消息序列化与反序列化开销", "B. 顶点间消息传递的网络延迟", "C. 多个顶点对同一消息的重复发送", "D. 多个超步之间的内存释放操作"],
      "right-answer": "D"
    },
    {
      "question": "在MapReduce模型上实现图计算时，通常采用“双调用”（Two-phase）方法，其中第一次MapReduce用于执行什么操作？",
      "options": ["A. 顶点状态的更新", "B. 图的重新分区", "C. 邻接表的构建", "D. 消息的发送与收集"],
      "right-answer": "D"
    },
    {
      "question": "在Pregel模型中，如果一个顶点在某一轮超步中决定不再发送任何消息，它将发生什么？",
      "options": ["A. 该顶点将被从计算图中移除", "B. 该顶点将被标记为“终止”，不再参与后续超步", "C. 该顶点会进入等待状态，直到有新的消息到达", "D. 该顶点会继续参与后续超步，但其状态不会更新"],
      "right-answer": "B"
    }
  ],
  "short-answer": [
    {
      "question": "请简述顶点上向计算模型与边上向计算模型在计算粒度和通信模式上的主要区别，并分析各自的适用场景。"
    },
    {
      "question": "在并行图计算中，为什么全局屏障同步（Global Barrier Synchronization）可能成为性能瓶颈？请结合BSP模型的超步机制进行解释。"
    }
  ]
}