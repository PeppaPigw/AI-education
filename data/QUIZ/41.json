{
  "title": "数据压缩与分区",
  "single-choice": [
    {
      "question": "在数据压缩技术中，哪种方法通过消除数据中的冗余来实现更小的存储空间占用？",
      "options": ["A. 数据加密", "B. 数据分区", "C. 无损压缩", "D. 数据备份"],
      "right-answer": "C"
    },
    {
      "question": "以下哪项最能描述 Huffman 编码的原理？",
      "options": ["A. 根据字符出现频率分配可变长度编码", "B. 将数据平均分割为固定大小的块", "C. 用重复数据替换所有零值", "D. 对数据进行对称加密"],
      "right-answer": "A"
    },
    {
      "question": "在分区存储策略中，以下哪项是分区的主要目的？",
      "options": ["A. 提高数据压缩率", "B. 增强数据安全性", "C. 优化数据访问性能", "D. 增加数据冗余"],
      "right-answer": "C"
    },
    {
      "question": "关于有损压缩与无损压缩，以下哪项是正确的？",
      "options": ["A. 有损压缩适合音频和视频，但不适合文本", "B. 无损压缩会永久丢失部分数据", "C. 有损压缩通常比无损压缩具有更高的压缩比", "D. 无损压缩不能用于图像数据"],
      "right-answer": "C"
    },
    {
      "question": "在数据分区中，以下哪种策略最有利于并行处理？",
      "options": ["A. 按数据类型分区", "B. 按数据内容哈希分区", "C. 按数据大小分区", "D. 按时间戳顺序分区"],
      "right-answer": "B"
    },
    {
      "question": "在数据压缩中，熵编码的主要作用是什么？",
      "options": ["A. 对数据进行加密以保护隐私", "B. 根据信息量为符号分配最优编码长度", "C. 将数据分割为多个物理块", "D. 增加数据的冗余度以提高可靠性"],
      "right-answer": "B"
    },
    {
      "question": "哪种压缩算法通常用于 ZIP 文件？",
      "options": ["A. LZW", "B. Huffman", "C. Run-Length Encoding", "D. DEFLATE"],
      "right-answer": "D"
    },
    {
      "question": "在大数据系统中，对数据进行分区的主要优势是？",
      "options": ["A. 降低数据压缩率", "B. 减少数据存储需求", "C. 提升查询并行处理能力", "D. 增加数据传输延迟"],
      "right-answer": "C"
    }
  ],
  "short-answer": [
    {
      "question": "请解释无损压缩和有损压缩的区别，并各举一个实际应用场景。"
    },
    {
      "question": "在分布式系统中，数据分区策略如何影响数据压缩的效率和存储成本？请结合具体例子说明。"
    }
  ]
}